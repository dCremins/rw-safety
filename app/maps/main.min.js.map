{"version":3,"sources":["materials.js","init.js","road.js","trees.js","shop.js","apartments.js","bench.js","backhoe.js","truck.js","workers.js","render.js","slider.js","flaggerMove.js","flaggerClick.js","flaggerRelease.js","flagger.js","sign.js","input.js"],"names":[],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AC1FA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACzvarzXA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AC5KA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AC/VA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACdA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AC5CA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACxCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AC/BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACjjMA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AChFA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"../main.min.js","sourcesContent":["const THREE = require('three')\nconst OrbitControls = require('three-orbit-controls-loader')\n\nOrbitControls(THREE)\n\n/* Variables */\nlet scene\nlet camera\nlet controls\nlet renderer\nlet ambient\nlet sun\nconst objects = []\nconst flaggers = []\n\nconst raycaster = new THREE.Raycaster()\nconst mouse = new THREE.Vector2()\nconst offset = new THREE.Vector3()\nconst intersection = new THREE.Vector3()\nlet selected = null\nlet hovered = null\n// Scenery\nconst road = new THREE.MeshLambertMaterial({color: 0x87836E})\nconst lines = new THREE.LineBasicMaterial({color: 0xFFFFFF})\nconst divider = new THREE.MeshLambertMaterial({color: 0xFFFF86})\nconst grass = new THREE.MeshLambertMaterial({color: 0x77C997})\nconst treeTall = new THREE.MeshLambertMaterial({color: 0x62C192})\nconst shadows = new THREE.ShadowMaterial({opacity: 0.3})\nconst windowColor = new THREE.MeshLambertMaterial({color: 0xD0DDE3, transparent: true, opacity: 0.5})\nconst brick = new THREE.MeshLambertMaterial({color: 0xAA5050})\nconst stone = new THREE.MeshLambertMaterial({color: 0xE5D2A9})\nconst truckMaterial = new THREE.MeshLambertMaterial({color: 0xEF8547})\nconst foundation = new THREE.MeshLambertMaterial({color: 0xF4EEEF})\nconst couchFabric = new THREE.MeshLambertMaterial({color: 0x638464})\nconst blueFabric = new THREE.MeshLambertMaterial({color: 0x5E7E9B})\nconst purpleFabric = new THREE.MeshLambertMaterial({color: 0x805C8E})\nconst tanFabric = new THREE.MeshLambertMaterial({color: 0xE8C1A0})\n// Skin\nconst skinTone1 = new THREE.MeshLambertMaterial({color: 0x8D5524}) // Brown\nconst skinTone2 = new THREE.MeshLambertMaterial({color: 0xC68642}) // Light Brown\nconst skinTone3 = new THREE.MeshLambertMaterial({color: 0xF1C27D}) // Tan\nconst skinTone4 = new THREE.MeshLambertMaterial({color: 0xFFDBAC}) // Pale\n\n// Colors\nconst red = new THREE.MeshLambertMaterial({color: 0xF87676})\nconst green = new THREE.MeshLambertMaterial({color: 0x78C789})\nconst blue = new THREE.MeshLambertMaterial({color: 0x22B8E2})\nconst orange = new THREE.MeshLambertMaterial({color: 0xF6B331})\nconst safetyOrange = new THREE.MeshLambertMaterial({color: 0xFF7900})\nconst yellow = new THREE.MeshLambertMaterial({color: 0xFDDB4C})\nconst purple = new THREE.MeshLambertMaterial({color: 0xB78DD1})\nconst white = new THREE.MeshLambertMaterial({color: 0xFFFFFF})\nconst offwhite = new THREE.MeshLambertMaterial({color: 0xF2F2F2})\nconst gray = new THREE.MeshLambertMaterial({color: 0x555555})\nconst palegray = new THREE.MeshLambertMaterial({color: 0xA5A5A5})\nconst jean = new THREE.MeshLambertMaterial({color: 0x416BAD})\n// Signs\nconst workerSign = new THREE.TextureLoader().load('includes/images/sign-01.png')\nconst workerSignMaterial = new THREE.MeshBasicMaterial({map: workerSign})\nconst flaggerSign = new THREE.TextureLoader().load('includes/images/sign-02.png')\nconst flaggerSignMaterial = new THREE.MeshBasicMaterial({map: flaggerSign})\nconst flagAheadSign = new THREE.TextureLoader().load('includes/images/sign-03.png')\nconst flagAheadSignMaterial = new THREE.MeshBasicMaterial({map: flagAheadSign})\nconst menWorkSign = new THREE.TextureLoader().load('includes/images/sign-04.png')\nconst menWorkSignMaterial = new THREE.MeshBasicMaterial({map: menWorkSign})\nconst prepareStopSign = new THREE.TextureLoader().load('includes/images/sign-05.png')\nconst prepareStopSignMaterial = new THREE.MeshBasicMaterial({map: prepareStopSign})\nconst oneLaneSign = new THREE.TextureLoader().load('includes/images/sign-06.png')\nconst oneLaneSignMaterial = new THREE.MeshBasicMaterial({map: oneLaneSign})\nconst workAheadSign = new THREE.TextureLoader().load('includes/images/sign-07.png')\nconst workAheadSignMaterial = new THREE.MeshBasicMaterial({map: workAheadSign})\n// Geometry\nconst tallTree = new THREE.Geometry()\nconst tallCone = new THREE.ConeGeometry(1.68, 4, 32)\ntallCone.translate(0, 1.35, 0)\ntallTree.merge(tallCone)\nconst tallSphere = new THREE.SphereGeometry(1.8, 60, 60)\ntallSphere.translate(0, -1.3, 0)\ntallTree.merge(tallSphere)\nconst shortTree = tallTree.clone()\nshortTree.scale(0.5, 0.5, 0.5)\n/* Cone */\nconst coreGeometry = new THREE.CylinderGeometry(0.07, 0.2, 0.5, 32, 0.8, false, 0.8)\nconst coneBottomG = new THREE.BoxGeometry(0.5, 0.06, 0.5)\nconeBottomG.translate(0, -0.23, 0)\nconst coneGeometry = new THREE.Geometry()\nconeGeometry.merge(coreGeometry)\nconeGeometry.merge(coneBottomG)\nconst stripeGeometry = new THREE.CylinderGeometry(0.116, 0.155, 0.15, 32, 1, false, 0.8)\nconst stripe = new THREE.Mesh(stripeGeometry, white)\n","function init() {\n\tscene = new THREE.Scene()\n\t// Scenery\n\tinitRoad()\n\tinitTrees()\n\tinitShop()\n\tinitApartment()\n\tinitBench()\n\tinitBackHoe()\n\tinitTruck()\n\tinitWorkers()\n\t// Mechanics\n\tinitCamera()\n\tinitLights()\n\tinitRender()\n}\n\nfunction initCamera() {\n\tcamera = new THREE.PerspectiveCamera(60, ((window.innerWidth - 100) / (window.innerHeight - 50)), 1, 100)\n\tcamera.position.set(0, 23, 20)\n\tcamera.lookAt(0, 0, 0)\n}\n\nfunction initLights() {\n\tambient = new THREE.HemisphereLight(0xDEEEF2, 0x665C6D, 1.2)\n\tsun = new THREE.SpotLight(0xFCDC74, 0.2)\n\tsun.position.set(-50, 40, -5)\n\tsun.castShadow = true\n\tsun.shadow.camera.left = -10\n\tsun.shadow.camera.right = 10\n\tsun.shadow.camera.top = 10\n\tsun.shadow.camera.bottom = -10\n\tsun.shadow.camera.near = 0.1\n\tsun.shadow.camera.far = 1000\n\tsun.shadow.mapSize.width = 2048\n\tsun.shadow.mapSize.height = 2048\n\tscene.add(ambient)\n\tscene.add(sun)\n}\n\nfunction initRender() {\n\trenderer = new THREE.WebGLRenderer({antialias: true})\n\trenderer.setSize(window.innerWidth - 100, (window.innerHeight - 55))\n\trenderer.setClearColor(0xFFFFFF, 1)\n\trenderer.shadowMap.enabled = true\n\trenderer.shadowMap.type = THREE.PCFSoftShadowMap\n\tconst container = document.getElementById('container')\n\tcontainer.appendChild(renderer.domElement)\n\tcontrols = new THREE.OrbitControls(camera, renderer.domElement)\n\n\tcontainer.addEventListener('mousemove', onDocumentMouseMove, false)\n\tcontainer.addEventListener('mouseup', onDocumentMouseCancel, false)\n\tcontainer.addEventListener('mousedown', onDocumentMouseDown, false)\n\tcontainer.addEventListener('touchmove', onDocumentTouchMove, false)\n\tcontainer.addEventListener('touchstart', onDocumentTouchStart, false)\n\tcontainer.addEventListener('touchend', onDocumentTouchEnd, false)\n}\n","function initRoad() {\n\tconst topGeometry = new THREE.BoxGeometry(45, 1, 10)\n\tconst grassTop = new THREE.Mesh(topGeometry, grass)\n\tgrassTop.position.set(0, 0, -9)\n\tscene.add(grassTop)\n\n\tconst roadGeometry = new THREE.BoxGeometry(45, 1, 8)\n\tconst roadMesh = new THREE.Mesh(roadGeometry, road)\n\troadMesh.position.set(0, 0, 0)\n\tscene.add(roadMesh)\n\n\tlet lineGeometry = new THREE.Geometry()\n\tlineGeometry.vertices.push(\n\t\tnew THREE.Vector3(-22.5, 0.51, -3.7),\n\t\tnew THREE.Vector3(22.5, 0.51, -3.7)\n\t)\n\tconst topLine = new THREE.Line(lineGeometry, lines)\n\tscene.add(topLine)\n\n\tlineGeometry = new THREE.Geometry()\n\tlineGeometry.vertices.push(\n\t\tnew THREE.Vector3(-22.5, 0.51, 3.7),\n\t\tnew THREE.Vector3(22.5, 0.51, 3.7)\n\t)\n\tconst bottomLine = new THREE.Line(lineGeometry, lines)\n\tscene.add(bottomLine)\n\n\tconst bottomGeometry = new THREE.BoxGeometry(45, 1, 7)\n\tconst grassBottom = new THREE.Mesh(bottomGeometry, grass)\n\tgrassBottom.position.set(0, 0, 7.5)\n\tscene.add(grassBottom)\n\n\tconst dividerGeometry = new THREE.BoxGeometry(1, 0.1, 0.2)\n\tconst yellowLines = new THREE.Mesh(dividerGeometry, divider)\n\tyellowLines.position.set(0, 0.5, 0)\n\tscene.add(yellowLines)\n\tfor (let i = 22; i >= 23; i -= 2) {\n\t\tconst newyellowLines = yellowLines.clone()\n\t\tnewyellowLines.position.set(i, 0.5, 0)\n\t\tscene.add(newyellowLines)\n\t}\n\tconst shadowGeometry = new THREE.BoxGeometry(45, 1, 25)\n\tconst floorShadows = new THREE.Mesh(shadowGeometry, shadows)\n\tfloorShadows.position.set(0, 0.05, -1.5)\n\tfloorShadows.receiveShadow = true\n\tscene.add(floorShadows)\n\tobjects.push(floorShadows)\n\n\tconst coneCore = new THREE.Mesh(coneGeometry, gray)\n\tconeCore.castShadow = true\n\tconst cone = new THREE.Group()\n\tcone.add(coneCore)\n\tcone.add(stripe)\n\tcone.position.set(0, 0.75, 0.5)\n\tscene.add(cone)\n\tfor (let i = 1.5; i < 10; i += 1.5) {\n\t\tconst newCone = cone.clone()\n\t\tnewCone.position.set(i, 0.75, 0.5)\n\t\tscene.add(newCone)\n\t}\n}\n","function initTrees() {\n\tconst trees = new THREE.Geometry()\n\tconst tallTree = new THREE.Geometry()\n\tconst tallCone = new THREE.ConeGeometry(1.68, 4, 32)\n\ttallCone.translate(0, 1.35, 0)\n\ttallTree.merge(tallCone)\n\tconst tallSphere = new THREE.SphereGeometry(1.8, 60, 60)\n\ttallSphere.translate(0, -1.3, 0)\n\ttallTree.merge(tallSphere)\n\n\ttallTree.translate(-18, 3, -10.5)\n\ttrees.merge(tallTree)\n\ttallTree.translate(7, 0, 18.5)\n\ttrees.merge(tallTree)\n\n\tconst shortTree = tallTree.clone()\n\tshortTree.scale(0.5, 0.5, 0.5)\n\tshortTree.translate(0, 0.2, -12)\n\ttrees.merge(shortTree)\n\tshortTree.translate(17.5, 0, 14)\n\ttrees.merge(shortTree)\n\tshortTree.translate(4.5, 0, -16.5)\n\ttrees.merge(shortTree)\n\n\tconst allTrees = new THREE.Mesh(trees, treeTall)\n\tallTrees.castShadow = true\n\tscene.add(allTrees)\n\tconst treeShadows = new THREE.Mesh(trees, shadows)\n\ttreeShadows.receiveShadow = true\n\tscene.add(treeShadows)\n}\n","function initShop()\t{\n\tconst shop = new THREE.Group()\n\tconst shopBase = new THREE.Geometry()\n\tconst shopShadowGeometry = new THREE.Geometry()\n\n// Foundation\n\tconst bottom = new THREE.BoxGeometry(10, 1, 5)\n\tshopBase.merge(bottom)\n\tconst bottomStair = new THREE.BoxGeometry(2, 0.5, 0.5)\n\tbottomStair.translate(0, 0.25, 2.75)\n\tshopBase.merge(bottomStair)\n\tconst topStair = new THREE.BoxGeometry(2, 0.5, 1)\n\ttopStair.translate(0, -0.25, 3)\n\tshopBase.merge(topStair)\n\tconst shopBaseShadow = shopBase.clone()\n\tshopShadowGeometry.merge(shopBaseShadow)\n\tlet building = new THREE.Mesh(shopBase, foundation)\n\tbuilding.castShadow = true\n\tshop.add(building)\n\n// Building\n\tconst glass = new THREE.BoxGeometry(9.75, 4.9, 0.125)\n\tglass.translate(0, 3, 2.4)\n\tconst windows = new THREE.Mesh(glass, windowColor)\n\tshop.add(windows)\n\n\tconst shopCore = new THREE.Geometry()\n\tconst bottomFront = new THREE.BoxGeometry(4, 1, 0.75)\n\tbottomFront.translate(-3, 1, 2.125)\n\tshopCore.merge(bottomFront)\n\tbottomFront.translate(6, 0, 0)\n\tshopCore.merge(bottomFront)\n\tconst topFront = new THREE.BoxGeometry(10, 2, 0.75)\n\ttopFront.translate(0, 5, 2.12)\n\tshopCore.merge(topFront)\n\tconst sides = new THREE.BoxGeometry(1, 5.5, 3.25)\n\tsides.translate(-4.5, 3.25, 0.126)\n\tshopCore.merge(sides)\n\tsides.translate(9, 0, 0)\n\tshopCore.merge(sides)\n\tconst inner = new THREE.BoxGeometry(1, 2.5, 0.5)\n\tinner.translate(-1.5, 2.75, 2.25)\n\tshopCore.merge(inner)\n\tinner.translate(3, 0, 0)\n\tshopCore.merge(inner)\n\tconst center = new THREE.BoxGeometry(10, 5.5, 1)\n\tcenter.translate(0, 3.25, -2)\n\tshopCore.merge(center)\n\tconst top = new THREE.BoxGeometry(8, 1, 3.25)\n\ttop.translate(0, 5.5, 0.125)\n\tshopCore.merge(top)\n\tconst coreShopShadow = shopCore.clone()\n\tshopShadowGeometry.merge(coreShopShadow)\n\tbuilding = new THREE.Mesh(shopCore, stone)\n\tbuilding.castShadow = true\n\tshop.add(building)\n\n// Insides\n\tconst insideShadowGeometry = new THREE.Geometry()\n\n\tconst counter = new THREE.BoxGeometry(3, 1.5, 1)\n\tcounter.translate(0, 1.25, 0)\n\tconst coreCountersShadow = counter.clone()\n\tinsideShadowGeometry.merge(coreCountersShadow)\n\tconst Counters = new THREE.Mesh(counter, stone)\n\tshop.add(Counters)\n\n\tconst shelf = new THREE.BoxGeometry(0.5, 0.1, 3)\n\tshelf.translate(3.75, 2, 0)\n\tconst shelf2 = new THREE.BoxGeometry(0.5, 0.1, 3)\n\tshelf2.translate(3.75, 3, 0)\n\tshelf.merge(shelf2)\n\tshelf2.translate(0, 1, 0)\n\tshelf.merge(shelf2)\n\tshelf2.translate(-7.5, 0, 0)\n\tshelf.merge(shelf2)\n\tshelf2.translate(0, -1, 0)\n\tshelf.merge(shelf2)\n\tshelf2.translate(0, -1, 0)\n\tshelf.merge(shelf2)\n\tconst coreShelvesShadow = shelf.clone()\n\tinsideShadowGeometry.merge(coreShelvesShadow)\n\tconst shelves = new THREE.Mesh(shelf, stone)\n\tshop.add(shelves)\n\n\tconst book1 = new THREE.BoxGeometry(0.7, 0.75, 0.2)\n\tbook1.translate(3.75, 3.45, 0)\n\tconst book2 = new THREE.BoxGeometry(0.7, 0.75, 0.2)\n\tbook2.translate(3.75, 3.45, 1)\n\tbook1.merge(book2)\n\tbook2.translate(0, 1, -1.5)\n\tbook1.merge(book2)\n\tbook2.translate(0, -2, -0.5)\n\tbook1.merge(book2)\n\tbook2.translate(0, 0, 0.75)\n\tbook1.merge(book2)\n\tbook2.translate(0, 0, 1)\n\tbook1.merge(book2)\n\tbook2.translate(-7.5, 0, 0)\n\tbook1.merge(book2)\n\tbook2.translate(0, 0, -1.5)\n\tbook1.merge(book2)\n\tbook2.translate(0, 1, 0.5)\n\tbook1.merge(book2)\n\tbook2.translate(0, 0, 0.75)\n\tbook1.merge(book2)\n\tbook2.translate(0, 1, 0.25)\n\tbook1.merge(book2)\n\tbook2.translate(0, 0, -0.75)\n\tbook1.merge(book2)\n\tbook2.translate(0, 0, -0.5)\n\tbook1.merge(book2)\n\tconst book7 = new THREE.BoxGeometry(0.7, 0.75, 0.2)\n\tbook7.translate(-3.5, 1.87, 2.25)\n\tbook1.merge(book7)\n\tconst coreRedShadow = book1.clone()\n\tinsideShadowGeometry.merge(coreRedShadow)\n\tconst redBooks = new THREE.Mesh(book1, red)\n\tredBooks.castShadow = true\n\tshop.add(redBooks)\n\n\tconst books2 = new THREE.Geometry()\n\tconst book3 = new THREE.BoxGeometry(0.7, 0.75, 0.2)\n\tbook3.translate(3.75, 3.45, 1.2)\n\tbooks2.merge(book3)\n\tbook3.translate(0, 1, -1.5)\n\tbooks2.merge(book3)\n\tbook3.translate(0, -2, -0.5)\n\tbooks2.merge(book3)\n\tbook3.translate(0, 0, 0.75)\n\tbooks2.merge(book3)\n\tbook3.translate(0, 0, 1)\n\tbooks2.merge(book3)\n\tbook3.translate(-7.5, 0, 0)\n\tbooks2.merge(book3)\n\tbook3.translate(0, 0, -1.5)\n\tbooks2.merge(book3)\n\tbook3.translate(0, 1, 0.5)\n\tbooks2.merge(book3)\n\tbook3.translate(0, 0, 0.75)\n\tbooks2.merge(book3)\n\tbook3.translate(0, 1, 0.25)\n\tbooks2.merge(book3)\n\tbook3.translate(0, 0, -0.75)\n\tbooks2.merge(book3)\n\tbook3.translate(0, 0, -0.5)\n\tbooks2.merge(book3)\n\tconst book8 = new THREE.BoxGeometry(0.7, 0.75, 0.2)\n\tbook8.translate(-2.5, 1.87, 2.25)\n\tbooks2.merge(book8)\n\tconst coreBlueShadow = books2.clone()\n\tinsideShadowGeometry.merge(coreBlueShadow)\n\tconst blueBooks = new THREE.Mesh(books2, blue)\n\tblueBooks.castShadow = true\n\tshop.add(blueBooks)\n\n\tconst books3 = new THREE.Geometry()\n\tconst book4 = new THREE.BoxGeometry(0.7, 0.75, 0.2)\n\tbook4.translate(3.75, 3.45, 1.4)\n\tbooks3.merge(book4)\n\tbook4.translate(0, 1, -1.5)\n\tbooks3.merge(book4)\n\tbook4.translate(0, -2, -0.5)\n\tbooks3.merge(book4)\n\tbook4.translate(0, 0, 0.75)\n\tbooks3.merge(book4)\n\tbook4.translate(0, 0, 1)\n\tbooks3.merge(book4)\n\tbook4.translate(-7.5, 0, 0)\n\tbooks3.merge(book4)\n\tbook4.translate(0, 0, -1.5)\n\tbooks3.merge(book4)\n\tbook4.translate(0, 1, 0.5)\n\tbooks3.merge(book4)\n\tbook4.translate(0, 0, 0.75)\n\tbooks3.merge(book4)\n\tbook4.translate(0, 1, 0.25)\n\tbooks3.merge(book4)\n\tbook4.translate(0, 0, -0.75)\n\tbooks3.merge(book4)\n\tbook4.translate(0, 0, -1.5)\n\tbooks3.merge(book4)\n\tbook4.translate(7.5, 0, 2)\n\tbooks3.merge(book4)\n\tbook4.translate(0, -1, -1.75)\n\tbooks3.merge(book4)\n\tconst corePurpleShadow = books3.clone()\n\tinsideShadowGeometry.merge(corePurpleShadow)\n\tconst purpleBooks = new THREE.Mesh(books3, purple)\n\tpurpleBooks.castShadow = true\n\tshop.add(purpleBooks)\n\n\tconst books4 = new THREE.Geometry()\n\tconst book5 = new THREE.BoxGeometry(0.7, 0.75, 0.2)\n\tbook5.translate(3.75, 3.45, 0.6)\n\tbooks4.merge(book5)\n\tbook5.translate(0, 0, -1)\n\tbooks4.merge(book5)\n\tbook5.translate(0, 1, -0.75)\n\tbooks4.merge(book5)\n\tbook5.translate(0, 0, 1.5)\n\tbooks4.merge(book5)\n\tbook5.translate(0, 0, 0.75)\n\tbooks4.merge(book5)\n\tbook5.translate(-7.5, -1, -1.75)\n\tbooks4.merge(book5)\n\tbook5.translate(0, -1, -0.5)\n\tbooks4.merge(book5)\n\tbook5.translate(0, 0, 1.5)\n\tbooks4.merge(book5)\n\tconst book6 = new THREE.BoxGeometry(0.7, 0.75, 0.2)\n\tbook6.translate(3.5, 1.87, 2.25)\n\tbooks4.merge(book6)\n\tconst coreOrangeShadow = books4.clone()\n\tinsideShadowGeometry.merge(coreOrangeShadow)\n\tconst orangeBooks = new THREE.Mesh(books4, orange)\n\torangeBooks.castShadow = true\n\tshop.add(orangeBooks)\n\tconst shopInsideShadow = new THREE.Mesh(insideShadowGeometry, shadows)\n\tshopInsideShadow.receiveShadow = true\n\tshop.add(shopInsideShadow)\n\n// Awning\n\t// White Stripes\n\tconst awningA = new THREE.Geometry()\n\tconst aA1 = new THREE.BoxGeometry(1.1, 1.25, 2)\n\taA1.translate(-4.4, 5.25, 3.5)\n\taA1.vertices[0].y -= 0.9\n\taA1.vertices[5].y -= 0.9\n\tawningA.merge(aA1)\n\taA1.translate(2.2, 0, 0)\n\tawningA.merge(aA1)\n\taA1.translate(2.2, 0, 0)\n\tawningA.merge(aA1)\n\taA1.translate(2.2, 0, 0)\n\tawningA.merge(aA1)\n\taA1.translate(2.2, 0, 0)\n\tawningA.merge(aA1)\n\tconst aShadow = awningA.clone()\n\tshopShadowGeometry.merge(aShadow)\n\tconst As = new THREE.Mesh(awningA, offwhite)\n\tAs.castShadow = true\n\t// Red Stripes\n\tconst awningB = new THREE.Geometry()\n\tconst aB1 = new THREE.BoxGeometry(1.1, 1.25, 2)\n\taB1.translate(-3.3, 5.25, 3.5)\n\taB1.vertices[0].y -= 0.9\n\taB1.vertices[5].y -= 0.9\n\tawningB.merge(aB1)\n\taB1.translate(2.2, 0, 0)\n\tawningB.merge(aB1)\n\taB1.translate(2.2, 0, 0)\n\tawningB.merge(aB1)\n\taB1.translate(2.2, 0, 0)\n\tawningB.merge(aB1)\n\tconst bShadow = awningB.clone()\n\tshopShadowGeometry.merge(bShadow)\n\tconst Bs = new THREE.Mesh(awningB, blue)\n\tBs.castShadow = true\n\tshop.add(As)\n\tshop.add(Bs)\n\tconst shopShadow = new THREE.Mesh(shopShadowGeometry, shadows)\n\tshopShadow.receiveShadow = true\n\tshop.add(shopShadow)\n\n// Add To Scene\n\tshop.position.set(8, 1, -8) // 8, -9\n\tscene.add(shop)\n}\n","function initApartment() {\n\tconst office = new THREE.Group()\n\tconst officeShadows = new THREE.Geometry()\n\n  // Foundation\n\tconst found = new THREE.BoxGeometry(8, 0.5, 8)\n\tconst step = new THREE.BoxGeometry(8.25, 0.25, 8.25)\n\tstep.translate(0, -0.125, 0)\n\tfound.merge(step)\n\tconst foundShadow = found.clone(true)\n\tofficeShadows.merge(foundShadow)\n\tconst buildingFound = new THREE.Mesh(found, foundation)\n\tbuildingFound.castShadow = true\n\toffice.add(buildingFound)\n\n  // Outside Walls\n\tconst base = new THREE.Geometry()\n\tconst left = new THREE.BoxGeometry(0.5, 10, 1)\n\tleft.translate(-3.5, 5.25, 3.25)\n\tbase.merge(left)\n\tleft.translate(0, 0, -2.125)\n\tbase.merge(left)\n\tleft.translate(0, 0, -2.125)\n\tbase.merge(left)\n\tleft.translate(0, 0, -2.125)\n\tbase.merge(left)\n\tleft.translate(7, 0, 0)\n\tbase.merge(left)\n\tleft.translate(0, 0, 2.125)\n\tbase.merge(left)\n\tleft.translate(0, 0, 2.125)\n\tbase.merge(left)\n\tleft.translate(0, 0, 2.125)\n\tbase.merge(left)\n\tconst back = new THREE.BoxGeometry(1, 10, 0.5)\n\tback.translate(-1.5, 5.25, -3.375)\n\tbase.merge(back)\n\tback.translate(3, 0, 0)\n\tbase.merge(back)\n\tback.translate(0, 0, 6.875)\n\tbase.merge(back)\n\tback.translate(-3, 0, 0)\n\tbase.merge(back)\n\tconst backSide = new THREE.BoxGeometry(1.25, 3.5, 0.5)\n\tbackSide.translate(-2.625, 2, 3.5)\n\tbase.merge(backSide)\n\tbackSide.translate(5.25, 0, 0)\n\tbase.merge(backSide)\n\tbackSide.translate(0, 0, -6.875)\n\tbase.merge(backSide)\n\tbackSide.translate(-5.25, 0, 0)\n\tbase.merge(backSide)\n\tlet front = new THREE.BoxGeometry(1.25, 1.75, 0.5)\n\tfront.translate(-2.625, 6.25, 3.5)\n\tbase.merge(front)\n\tfront.translate(0, 3.125, 0)\n\tbase.merge(front)\n\tfront.translate(5.25, 0, 0)\n\tbase.merge(front)\n\tfront.translate(0, -3.125, 0)\n\tbase.merge(front)\n\tfront.translate(0, 0, -6.875)\n\tbase.merge(front)\n\tfront.translate(0, 3.125, 0)\n\tbase.merge(front)\n\tfront.translate(-5.25, 0, 0)\n\tbase.merge(front)\n\tfront.translate(0, -3.125, 0)\n\tbase.merge(front)\n\tfront = new THREE.BoxGeometry(2, 7.5, 0.5)\n\tfront.translate(0, 6.5, 3.5)\n\tbase.merge(front)\n\tfront = new THREE.BoxGeometry(2, 10, 0.5)\n\tfront.translate(0, 5.25, -3.375)\n\tbase.merge(front)\n\tlet side = new THREE.BoxGeometry(0.5, 3.5, 1.15)\n\tside.translate(-3.5, 2, 2.19)\n\tbase.merge(side)\n\tside.translate(0, 0, -2.125)\n\tbase.merge(side)\n\tside.translate(0, 0, -2.125)\n\tbase.merge(side)\n\tside.translate(7, 0, 0)\n\tbase.merge(side)\n\tside.translate(0, 0, 2.125)\n\tbase.merge(side)\n\tside.translate(0, 0, 2.125)\n\tbase.merge(side)\n\tside = new THREE.BoxGeometry(0.5, 1.75, 1.15)\n\tside.translate(-3.5, 6.25, 2.19)\n\tbase.merge(side)\n\tside.translate(0, 0, -2.125)\n\tbase.merge(side)\n\tside.translate(0, 0, -2.125)\n\tbase.merge(side)\n\tside.translate(7, 0, 0)\n\tbase.merge(side)\n\tside.translate(0, 0, 2.125)\n\tbase.merge(side)\n\tside.translate(0, 0, 2.125)\n\tbase.merge(side)\n\tside.translate(0, 3.125, 0)\n\tbase.merge(side)\n\tside.translate(0, 0, -2.125)\n\tbase.merge(side)\n\tside.translate(0, 0, -2.125)\n\tbase.merge(side)\n\tside.translate(-7, 0, 0)\n\tbase.merge(side)\n\tside.translate(0, 0, 2.125)\n\tbase.merge(side)\n\tside.translate(0, 0, 2.125)\n\tbase.merge(side)\n\tconst floor = new THREE.BoxGeometry(6.5, 0.25, 6.5)\n\tfloor.translate(0, 3, 0)\n\tbase.merge(floor)\n\tfloor.translate(0, 3.5, 0)\n\tbase.merge(floor)\n\tfloor.translate(0, 3.63, 0)\n\tbase.merge(floor)\n\tconst innerWall = new THREE.BoxGeometry(0.25, 7.25, 6.5)\n\tinnerWall.translate(0, 6.67, 0)\n\tbase.merge(innerWall)\n\n  // Windows\n\tconst windows = new THREE.Geometry()\n\tlet windowSide = new THREE.BoxGeometry(7, 9.5, 0.1)\n\twindowSide.translate(0, 5, 3.5)\n\twindows.merge(windowSide)\n\twindowSide.translate(0, 0, -7)\n\twindows.merge(windowSide)\n\twindowSide = new THREE.BoxGeometry(0.1, 9.5, 7)\n\twindowSide.translate(3.5, 5, 0)\n\twindows.merge(windowSide)\n\twindowSide.translate(-7, 0, 0)\n\twindows.merge(windowSide)\n\tconst windowMesh = new THREE.Mesh(windows, windowColor)\n\toffice.add(windowMesh)\n\n  // Roof\n\tconst cap = new THREE.Geometry()\n\tconst capLeft = new THREE.BoxGeometry(0.25, 0.5, 7.375)\n\tcapLeft.translate(-3.88, 10.5, 0.05)\n\tcap.merge(capLeft)\n\tcapLeft.translate(7.76, 0, 0)\n\tcap.merge(capLeft)\n\tconst capFront = new THREE.BoxGeometry(8.01, 0.5, 0.25)\n\tcapFront.translate(0, 10.5, 3.86)\n\tcap.merge(capFront)\n\tcapFront.translate(0, 0, -7.6)\n\tcap.merge(capFront)\n  // Sill\n  // Fronts - bottom\n\tconst sillBottom = new THREE.Geometry()\n\tconst sill1 = new THREE.BoxGeometry(1.5, 0.1, 0.1)\n\tsill1.translate(-2.6, 7.125, 3.8)\n\tsillBottom.merge(sill1)\n\tsill1.translate(0, 0, -7.475)\n\tsillBottom.merge(sill1)\n\tlet sill2 = new THREE.BoxGeometry(1.22, 0.1, 0.5)\n\tsill2.translate(-2.62, 7.125, 3.5)\n\tsillBottom.merge(sill2)\n\tsill2.translate(0, 0, -6.875)\n\tsillBottom.merge(sill2)\n\tcap.merge(sillBottom)\n\tsillBottom.translate(5.25, 0, 0)\n\tcap.merge(sillBottom)\n\tsillBottom.translate(0, -3.375, 0)\n\tcap.merge(sillBottom)\n\tsillBottom.translate(-5.25, 0, 0)\n\tcap.merge(sillBottom)\n  // Fronts - top\n\tconst sillTop = new THREE.Geometry()\n\tlet sill3 = new THREE.BoxGeometry(1.375, 0.1, 0.1)\n\tsill3.translate(-2.6, 8.5, 3.8)\n\tsillTop.merge(sill3)\n\tsill3.translate(0, 0, -7.475)\n\tsillTop.merge(sill3)\n\tlet sill4 = new THREE.BoxGeometry(1.25, 0.1, 0.1)\n\tsill4.translate(-2.625, 7.75, 3.55)\n\tsillTop.merge(sill4)\n\tsill4.translate(0, 0, -7.1)\n\tsillTop.merge(sill4)\n\tcap.merge(sillTop)\n\tsillTop.translate(5.25, 0, 0)\n\tcap.merge(sillTop)\n\tsillTop.translate(0, -3.12, 0)\n\tcap.merge(sillTop)\n\tsillTop.translate(-5.25, 0, 0)\n\tcap.merge(sillTop)\n  // Sides-Top\n\tconst sillTopSide = new THREE.Geometry()\n\tconst sill = new THREE.BoxGeometry(0.1, 0.1, 1.375)\n\tsill.translate(3.8, 8.5, 2.175)\n\tsillTopSide.merge(sill)\n\tsill.translate(-7.6, 0, 0)\n\tsillTopSide.merge(sill)\n\tsill2 = new THREE.BoxGeometry(0.1, 0.1, 1.25)\n\tsill2.translate(3.55, 7.75, 2.175)\n\tsillTopSide.merge(sill2)\n\tsill2.translate(-7.1, 0, 0)\n\tsillTopSide.merge(sill2)\n\tcap.merge(sillTopSide)\n\tsillTopSide.translate(0, 0, -2.125)\n\tcap.merge(sillTopSide)\n\tsillTopSide.translate(0, 0, -2.125)\n\tcap.merge(sillTopSide)\n\tsillTopSide.translate(0, -3.125, 0)\n\tcap.merge(sillTopSide)\n\tsillTopSide.translate(0, 0, 2.125)\n\tcap.merge(sillTopSide)\n\tsillTopSide.translate(0, 0, 2.125)\n\tcap.merge(sillTopSide)\n\tconst sillBottomSide = new THREE.Geometry()\n\tsill3 = new THREE.BoxGeometry(0.1, 0.1, 1.5)\n\tsill3.translate(3.8, 7.1, 2.175)\n\tsillBottomSide.merge(sill3)\n\tsill3.translate(-7.6, 0, 0)\n\tsillBottomSide.merge(sill3)\n\tsill4 = new THREE.BoxGeometry(0.5, 0.1, 1.22)\n\tsill4.translate(3.51, 7.1, 2.175)\n\tsillBottomSide.merge(sill4)\n\tsill4.translate(-7.02, 0, 0)\n\tsillBottomSide.merge(sill4)\n\tcap.merge(sillBottomSide)\n\tsillBottomSide.translate(0, 0, -2.125)\n\tcap.merge(sillBottomSide)\n\tsillBottomSide.translate(0, 0, -2.125)\n\tcap.merge(sillBottomSide)\n\tsillBottomSide.translate(0, -3.37, 0)\n\tcap.merge(sillBottomSide)\n\tsillBottomSide.translate(0, 0, 2.125)\n\tcap.merge(sillBottomSide)\n\tsillBottomSide.translate(0, 0, 2.125)\n\tcap.merge(sillBottomSide)\n  // Door\n\tconst doorSill = new THREE.BoxGeometry(2.5, 0.25, 0.2)\n\tdoorSill.translate(0, 2.87, 3.75)\n\tcap.merge(doorSill)\n\tconst doorSillSide = new THREE.BoxGeometry(0.1, 2.5, 0.1)\n\tdoorSillSide.translate(-1, 1.5, 3.75)\n\tcap.merge(doorSillSide)\n\tdoorSillSide.translate(1, 0, 0)\n\tcap.merge(doorSillSide)\n\tdoorSillSide.translate(1, 0, 0)\n\tcap.merge(doorSillSide)\n  // Add to building\n\tconst roofShadow = cap.clone(true)\n\tofficeShadows.merge(roofShadow)\n\tconst roof = new THREE.Mesh(cap, foundation)\n\troof.castShadow = true\n\toffice.add(roof)\n\n  // Assemble\n\tconst baseShadow = base.clone(true)\n\tofficeShadows.merge(baseShadow)\n\tconst building = new THREE.Mesh(base, brick)\n\tbuilding.castShadow = true\n\toffice.add(building)\n\tconst buildingShadows = new THREE.Mesh(officeShadows, shadows)\n\tbuildingShadows.receiveShadow = true\n\toffice.add(buildingShadows)\n\n  // Set Decorations\n\tconst decorations = new THREE.Group()\n\tconst decorationShadows = new THREE.Geometry()\n  // Couch\n\tconst couchGeometry = new THREE.Geometry()\n\tconst couchSeat = new THREE.BoxGeometry(0.75, 0.25, 1.65)\n\tcouchSeat.translate(-1, 6.75, -0.01)\n\tcouchGeometry.merge(couchSeat)\n\tconst couchBack = new THREE.BoxGeometry(0.25, 0.75, 1.65)\n\tcouchBack.translate(-0.5, 7, -0.01)\n\tcouchGeometry.merge(couchBack)\n\tconst armRest = new THREE.BoxGeometry(1, 0.5, 0.25)\n\tarmRest.translate(-0.87, 6.87, 0.92)\n\tcouchGeometry.merge(armRest)\n\tarmRest.translate(0, 0, -1.84)\n\tcouchGeometry.merge(armRest)\n\tconst cushion = new THREE.BoxGeometry(0.75, 0.15, 0.5)\n\tcushion.translate(-1, 6.86, 0)\n\tcouchGeometry.merge(cushion)\n\tcushion.translate(0, 0, -0.52)\n\tcouchGeometry.merge(cushion)\n\tcushion.translate(0, 0, 1.04)\n\tcouchGeometry.merge(cushion)\n\tcouchGeometry.rotateY(1.25)\n\tcouchGeometry.translate(-1.25, 0, -3)\n\tlet couchShadow = couchGeometry.clone(true)\n\tdecorationShadows.merge(couchShadow)\n\tconst couch = new THREE.Mesh(couchGeometry, couchFabric)\n\tcouch.castShadow = true\n\tdecorations.add(couch)\n\n\tconst blueCouch = couchGeometry.clone(true)\n\tblueCouch.rotateY(2)\n\tblueCouch.translate(2.5, 0, -1)\n\tcouchShadow = blueCouch.clone(true)\n\tdecorationShadows.merge(couchShadow)\n\tconst couch2 = new THREE.Mesh(blueCouch, blueFabric)\n\tcouch2.castShadow = true\n\tdecorations.add(couch2)\n\n\tconst purpleCouch = couchGeometry.clone(true)\n\tpurpleCouch.rotateY(-1)\n\tpurpleCouch.translate(1.5, -3.5, 1)\n\tcouchShadow = purpleCouch.clone(true)\n\tdecorationShadows.merge(couchShadow)\n\tconst couch3 = new THREE.Mesh(purpleCouch, purpleFabric)\n\tcouch3.castShadow = true\n\tdecorations.add(couch3)\n\n\tconst tanCouch = couchGeometry.clone(true)\n\ttanCouch.rotateY(3.5)\n\ttanCouch.translate(-3.75, -3.5, 0.5)\n\tcouchShadow = tanCouch.clone(true)\n\tdecorationShadows.merge(couchShadow)\n\tconst couch4 = new THREE.Mesh(tanCouch, tanFabric)\n\tcouch4.castShadow = true\n\tdecorations.add(couch4)\n\n  // Bed\n\tconst bed = new THREE.Group()\n\tconst sheets = new THREE.BoxGeometry(2, 0.1, 1)\n\tsheets.translate(-1.5, 3.7, -2)\n\tconst sheetsSide = new THREE.BoxGeometry(2, 0.5, 0.1)\n\tsheetsSide.translate(-1.5, 3.5, -1.5)\n\tsheets.merge(sheetsSide)\n\tsheetsSide.translate(0, 0, -1)\n\tsheets.merge(sheetsSide)\n\tconst sheetsEnd = new THREE.BoxGeometry(0.1, 0.5, 1.1)\n\tsheetsEnd.translate(-0.5, 3.5, -2)\n\tsheets.merge(sheetsEnd)\n\tsheets.rotateY(-1.55)\n\tsheets.translate(-3, 0, 0)\n\tlet sheetsShadow = sheets.clone(true)\n\tdecorationShadows.merge(sheetsShadow)\n\tconst bedSheet = new THREE.Mesh(sheets, blueFabric)\n\tbedSheet.castShadow = true\n\tbed.add(bedSheet)\n\tconst sheets2 = sheets.clone()\n\tsheets2.rotateY(1.55)\n\tsheets2.translate(3.5, 0, 1)\n\tsheetsShadow = sheets2.clone(true)\n\tdecorationShadows.merge(sheetsShadow)\n\tconst bedSheet2 = new THREE.Mesh(sheets2, couchFabric)\n\tbed.add(bedSheet2)\n\tconst sheets3 = sheets.clone()\n\tsheets3.rotateY(1.55)\n\tsheets3.translate(3.5, 3.5, -3)\n\tsheetsShadow = sheets3.clone(true)\n\tdecorationShadows.merge(sheetsShadow)\n\tconst bedSheet3 = new THREE.Mesh(sheets3, purpleFabric)\n\tbed.add(bedSheet3)\n\tconst sheets4 = sheets.clone()\n\tsheets4.rotateY(3.14)\n\tsheets4.translate(-2.05, 3.5, -0.5)\n\tsheetsShadow = sheets4.clone(true)\n\tdecorationShadows.merge(sheetsShadow)\n\tconst bedSheet4 = new THREE.Mesh(sheets4, blueFabric)\n\tbed.add(bedSheet4)\n\n\tconst mattress = new THREE.BoxGeometry(2.5, 0.45, 1)\n\tmattress.rotateY(-1.55)\n\tmattress.translate(-1.02, 3.475, -1.75)\n\tlet mattressShadow = mattress.clone(true)\n\tdecorationShadows.merge(mattressShadow)\n\tconst bedMattress = new THREE.Mesh(mattress, tanFabric)\n\tbed.add(bedMattress)\n\tconst mattress2 = mattress.clone()\n\tmattress2.rotateY(1.55)\n\tmattress2.translate(3.3, 0, 1)\n\tmattressShadow = mattress2.clone(true)\n\tdecorationShadows.merge(mattressShadow)\n\tconst bedMattress2 = new THREE.Mesh(mattress2, tanFabric)\n\tbed.add(bedMattress2)\n\tconst mattress3 = mattress.clone()\n\tmattress3.rotateY(1.55)\n\tmattress3.translate(3.3, 3.5, -3)\n\tmattressShadow = mattress3.clone(true)\n\tdecorationShadows.merge(mattressShadow)\n\tconst bedMattress3 = new THREE.Mesh(mattress3, tanFabric)\n\tbed.add(bedMattress3)\n\tconst mattress4 = mattress.clone()\n\tmattress4.translate(0, 3.5, 3)\n\tmattressShadow = mattress4.clone(true)\n\tdecorationShadows.merge(mattressShadow)\n\tconst bedMattress4 = new THREE.Mesh(mattress4, tanFabric)\n\tbed.add(bedMattress4)\n\n\tdecorations.add(bed)\n\n  // Lobby\n\tconst lobbyDesk = new THREE.Geometry()\n\tlet deskFront = new THREE.BoxGeometry(3, 1, 0.1)\n\tdeskFront.translate(0, 1, -0.5)\n\tlobbyDesk.merge(deskFront)\n\tdeskFront = new THREE.BoxGeometry(0.1, 1, 1)\n\tdeskFront.translate(1.45, 1, -1)\n\tlobbyDesk.merge(deskFront)\n\tdeskFront.translate(-2.9, 0, 0)\n\tlobbyDesk.merge(deskFront)\n\tdeskFront = new THREE.BoxGeometry(3.2, 0.1, 1.2)\n\tdeskFront.translate(0, 1.55, -1)\n\tlobbyDesk.merge(deskFront)\n\tdeskFront = new THREE.BoxGeometry(3.1, 0.1, 1.1)\n\tdeskFront.translate(0, 1.65, -1)\n\tlobbyDesk.merge(deskFront)\n\tconst lobbyShadow = lobbyDesk.clone(true)\n\tdecorationShadows.merge(lobbyShadow)\n\tconst lobby = new THREE.Mesh(lobbyDesk, stone)\n\tdecorations.add(lobby)\n\n\tconst interiorShadows = new THREE.Mesh(decorationShadows, shadows)\n\tinteriorShadows.receiveShadow = true\n\toffice.add(interiorShadows)\n\n\toffice.add(decorations)\n\n  // Add to scene\n\toffice.position.set(-11, 0.75, -9)\n\tscene.add(office)\n}\n","function initBench() {\n\tconst bench = new THREE.Group()\n\tconst benchGeometry = new THREE.Geometry()\n\tconst benchSeat = new THREE.BoxGeometry(2, 0.1, 1)\n\tbenchGeometry.merge(benchSeat)\n\tconst benchBack = new THREE.BoxGeometry(2, 0.8, 0.1)\n\tbenchBack.translate(0, 0.8, -0.55)\n\tbenchGeometry.merge(benchBack)\n\tbenchGeometry.scale(0.8, 0.8, 0.8)\n\tconst benchCore = new THREE.Mesh(benchGeometry, orange)\n\tbenchCore.castShadow = true\n\tbench.add(benchCore)\n\t// Metal\n\tconst benchMetal = new THREE.Geometry()\n\tlet metalSide = new THREE.BoxGeometry(0.1, 1.8, 0.1)\n\tmetalSide.translate(-1.05, 0.4, -0.55)\n\tbenchMetal.merge(metalSide)\n\tmetalSide.translate(2.1, 0, 0)\n\tbenchMetal.merge(metalSide)\n\tmetalSide = new THREE.BoxGeometry(0.1, 0.6, 0.1)\n\tmetalSide.translate(-1.05, -0.25, 0.55)\n\tbenchMetal.merge(metalSide)\n\tmetalSide.translate(2.1, 0, 0)\n\tbenchMetal.merge(metalSide)\n\tmetalSide = new THREE.BoxGeometry(0.1, 0.1, 1)\n\tmetalSide.translate(-1.05, 0, 0)\n\tbenchMetal.merge(metalSide)\n\tmetalSide.translate(2.1, 0, 0)\n\tbenchMetal.merge(metalSide)\n\tmetalSide = new THREE.BoxGeometry(2, 0.1, 0.1)\n\tmetalSide.translate(0, 0, 0.55)\n\tbenchMetal.merge(metalSide)\n\tmetalSide.translate(0, 0, -1.1)\n\tbenchMetal.merge(metalSide)\n\tmetalSide.translate(0, 0.35, 0)\n\tbenchMetal.merge(metalSide)\n\tmetalSide.translate(0, 0.9, 0)\n\tbenchMetal.merge(metalSide)\n\tbenchMetal.scale(0.8, 0.8, 0.8)\n\tconst metal = new THREE.Mesh(benchMetal, gray)\n\tmetal.castShadow = true\n\tbench.add(metal)\n\tconst benchShadow = new THREE.Geometry()\n\tconst coreBenchShadow = benchGeometry.clone()\n\tbenchShadow.merge(coreBenchShadow)\n\tconst metalBenchShadow = benchMetal.clone()\n\tbenchShadow.merge(metalBenchShadow)\n\tconst shadowBench = new THREE.Mesh(benchShadow, shadows)\n\tbench.add(shadowBench)\n\n\tconst body = new THREE.Geometry()\n\t// Arms\n\tlet rightArm = new THREE.BoxGeometry(0.3, 0.4, 0.5)\n\trightArm.translate(0.55, 0.1, 0.5)\n\trightArm.vertices[4].x += 0.1\n\trightArm.vertices[6].x += 0.1\n\trightArm.vertices[0].x -= 0.2\n\trightArm.vertices[2].x -= 0.2\n\trightArm.vertices[0].y += 0.3\n\trightArm.vertices[2].y += 0.4\n\trightArm.vertices[4].y += 0.3\n\trightArm.vertices[5].y += 0.3\n\trightArm.vertices[6].y += 0.3\n\trightArm.vertices[7].y += 0.4\n\tbody.merge(rightArm)\n\trightArm = new THREE.BoxGeometry(0.3, 0.4, 0.5)\n\trightArm.translate(-0.55, 0.1, 0.5)\n\trightArm.vertices[1].x -= 0.1\n\trightArm.vertices[3].x -= 0.1\n\trightArm.vertices[5].x += 0.2\n\trightArm.vertices[7].x += 0.2\n\trightArm.vertices[5].y += 0.3\n\trightArm.vertices[7].y += 0.4\n\trightArm.vertices[1].y += 0.3\n\trightArm.vertices[0].y += 0.3\n\trightArm.vertices[3].y += 0.3\n\trightArm.vertices[2].y += 0.4\n\tbody.merge(rightArm)\n// Head\n\tconst head = new THREE.SphereGeometry(0.35, 32, 32)\n\thead.translate(0, 1.3, 0)\n\tbody.merge(head)\n\tbody.scale(0.5, 0.5, 0.5)\n\tbody.translate(0, 0.56, 0)\n\tconst person = new THREE.Mesh(body, skinTone3)\n\tbench.add(person)\n// Clothes\n// Shirt\n\tconst torso = new THREE.BoxGeometry(1, 1.4, 0.8)\n\ttorso.translate(0, 0.1, 0)\n\ttorso.vertices[0].z -= 0.15\n\ttorso.vertices[0].x -= 0.15\n\ttorso.vertices[1].z += 0.15\n\ttorso.vertices[1].x -= 0.15\n\ttorso.vertices[4].z += 0.15\n\ttorso.vertices[4].x += 0.15\n\ttorso.vertices[5].z -= 0.15\n\ttorso.vertices[5].x += 0.15\n\tconst leftArm = new THREE.BoxGeometry(0.3, 0.5, 0.5)\n\tleftArm.translate(0.55, 0.55, 0)\n\tleftArm.vertices[4].x -= 0.05\n\tleftArm.vertices[5].x -= 0.05\n\tleftArm.vertices[0].y -= 0.5\n\tleftArm.vertices[1].y -= 0.5\n\tleftArm.vertices[2].y -= 0.4\n\tleftArm.vertices[3].y -= 0.4\n\tleftArm.vertices[1].z += 0.1\n\tleftArm.vertices[3].z += 0.1\n\ttorso.merge(leftArm)\n\trightArm = new THREE.BoxGeometry(0.3, 0.5, 0.5)\n\trightArm.translate(-0.55, 0.55, 0)\n\trightArm.vertices[1].x += 0.05\n\trightArm.vertices[0].x += 0.05\n\trightArm.vertices[5].y -= 0.5\n\trightArm.vertices[4].y -= 0.5\n\trightArm.vertices[7].y -= 0.4\n\trightArm.vertices[6].y -= 0.4\n\trightArm.vertices[4].z += 0.1\n\trightArm.vertices[6].z += 0.1\n\ttorso.merge(rightArm)\n\ttorso.scale(0.5, 0.5, 0.5)\n\ttorso.translate(0, 0.56, 0)\n\tconst Shirt = new THREE.Mesh(torso, gray)\n\tbench.add(Shirt)\n// Pants\n\tconst pant = new THREE.BoxGeometry(0.5, 0.5, 0.8)\n\tpant.translate(-0.25, -0.8, 0)\n\tpant.vertices[3].z += 0.2\n\tpant.vertices[6].z += 0.2\n\tlet leg = new THREE.BoxGeometry(0.5, 0.5, 0.8)\n\tleg.translate(-0.25, -0.8, 0.8)\n\tleg.vertices[0].x -= 0.1\n\tleg.vertices[2].x -= 0.1\n\tleg.vertices[5].x += 0.1\n\tleg.vertices[7].x += 0.1\n\tleg.vertices[0].y -= 0.2\n\tleg.vertices[5].y -= 0.2\n\tpant.merge(leg)\n\tleg = new THREE.BoxGeometry(0.5, 0.5, 0.8)\n\tleg.translate(0.25, -0.8, 0)\n\tleg.vertices[3].z += 0.2\n\tleg.vertices[6].z += 0.2\n\tpant.merge(leg)\n\tleg = new THREE.BoxGeometry(0.5, 0.5, 0.8)\n\tleg.translate(0.25, -0.8, 0.8)\n\tleg.vertices[0].x -= 0.1\n\tleg.vertices[2].x -= 0.1\n\tleg.vertices[5].x += 0.1\n\tleg.vertices[7].x += 0.1\n\tleg.vertices[0].y -= 0.2\n\tleg.vertices[5].y -= 0.2\n\tpant.merge(leg)\n\tpant.scale(0.5, 0.5, 0.5)\n\tpant.translate(0, 0.56, 0)\n\tconst Pants = new THREE.Mesh(pant, blue)\n\tbench.add(Pants)\n\t// Book\n\tconst flap = new THREE.BoxGeometry(0.25, 0.3, 0.02)\n\tflap.translate(-0.05, 0.75, 0.35)\n\tflap.rotateY(-0.2)\n\tconst flap2 = new THREE.BoxGeometry(0.25, 0.3, 0.02)\n\tflap2.translate(0.05, 0.75, 0.35)\n\tflap2.rotateY(0.2)\n\tflap.merge(flap2)\n\tlet cover = new THREE.Mesh(flap, red)\n\tbench.add(cover)\n\tconst pages = new THREE.BoxGeometry(0.25, 0.3, 0.05)\n\tpages.translate(-0.05, 0.75, 0.32)\n\tpages.rotateY(-0.2)\n\tconst pages2 = new THREE.BoxGeometry(0.25, 0.3, 0.05)\n\tpages2.translate(0.05, 0.75, 0.32)\n\tpages2.rotateY(0.2)\n\tpages.merge(pages2)\n\tcover = new THREE.Mesh(pages, offwhite)\n\tbench.add(cover)\n\n\t// Shadows\n\tconst pedestrianShadows = new THREE.Geometry()\n\tconst newBody = body.clone(true)\n\tpedestrianShadows.merge(newBody)\n\tconst newPages = pages.clone(true)\n\tpedestrianShadows.merge(newPages)\n\tconst newShirt = torso.clone(true)\n\tnewShirt.scale(1.01, 1.01, 1.01)\n\tpedestrianShadows.merge(newShirt)\n\tconst newPants = pant.clone(true)\n\tnewPants.scale(1.01, 1.01, 1.01)\n\tpedestrianShadows.merge(newPants)\n\tconst newCover = flap.clone(true)\n\tpedestrianShadows.merge(newCover)\n\tconst shadowPerson = new THREE.Mesh(pedestrianShadows, shadows)\n\tbench.add(shadowPerson)\n\n\t// Add to scene\n\tbench.position.set(0, 0.95, -7)\n\tscene.add(bench)\n}\n","function initBackHoe() {\n\tconst backHoe = new THREE.Group()\n\tconst shadowHoe = new THREE.Geometry()\n\t// Cabin\n\tconst coreGeometry = new THREE.Geometry()\n\tconst blockGeometry = new THREE.BoxGeometry(4, 0.5, 1.2)\n\tblockGeometry.translate(0.75, 0.25, -0.5)\n\tcoreGeometry.merge(blockGeometry)\n\tconst backAngle = new THREE.BoxGeometry(0.5, 0.5, 1.2)\n\tbackAngle.translate(-1, 1, -0.5)\n\tbackAngle.vertices[4].y -= 0.5\n\tbackAngle.vertices[5].y -= 0.5\n\tcoreGeometry.merge(backAngle)\n\tconst backSolid = new THREE.BoxGeometry(0.25, 0.5, 1.2)\n\tbackSolid.translate(-0.63, 1, -0.5)\n\tcoreGeometry.merge(backSolid)\n\tconst middleSolid = new THREE.BoxGeometry(2.5, 0.25, 1.2)\n\tmiddleSolid.translate(0, 0.625, -0.5)\n\tcoreGeometry.merge(middleSolid)\n\tconst roofSolid = new THREE.BoxGeometry(1.9, 0.1, 1.3)\n\troofSolid.translate(0.4, 2.3, -0.5)\n\tcoreGeometry.merge(roofSolid)\n\t// Arms\n\tconst armBase = new THREE.BoxGeometry(0.75, 0.5, 0.25)\n\tarmBase.translate(2.55, 0.25, 0.25)\n\tarmBase.vertices[4].x -= 0.5\n\tarmBase.vertices[5].x -= 0.5\n\tarmBase.vertices[0].y += 0.55\n\tarmBase.vertices[1].y += 0.55\n\tarmBase.vertices[0].x -= 0.4\n\tarmBase.vertices[1].x -= 0.4\n\tarmBase.vertices[2].y += 1\n\tarmBase.vertices[3].y += 1\n\tarmBase.vertices[6].y += 0.5\n\tarmBase.vertices[7].y += 0.5\n\tarmBase.vertices[6].x += 0.2\n\tarmBase.vertices[7].x += 0.2\n\tcoreGeometry.merge(armBase)\n\tarmBase.translate(0, 0, -1.5)\n\tcoreGeometry.merge(armBase)\n\tconst armLeft = new THREE.BoxGeometry(1, 0.25, 0.3)\n\tarmLeft.translate(3.025, 1.18, 0.25)\n\tarmLeft.vertices[4].x += 0.35\n\tarmLeft.vertices[5].x += 0.35\n\tarmLeft.vertices[0].y -= 0.3\n\tarmLeft.vertices[1].y -= 0.3\n\tarmLeft.vertices[2].y -= 0.5\n\tarmLeft.vertices[3].y -= 0.5\n\tcoreGeometry.merge(armLeft)\n\tarmLeft.translate(0, 0, -1.5)\n\tcoreGeometry.merge(armLeft)\n\tconst armRight = new THREE.BoxGeometry(0.75, 0.45, 0.3)\n\tarmRight.translate(3.9, 0.78, 0.25)\n\tarmRight.vertices[0].y -= 0.5\n\tarmRight.vertices[1].y -= 0.5\n\tarmRight.vertices[0].x += 0.2\n\tarmRight.vertices[1].x += 0.2\n\tarmRight.vertices[2].y -= 0.5\n\tarmRight.vertices[3].y -= 0.5\n\tcoreGeometry.merge(armRight)\n\tarmRight.translate(0, 0, -1.5)\n\tcoreGeometry.merge(armRight)\n\t// Assemble Orange Base\n\tconst shadowCoreGeometry = coreGeometry.clone(true)\n\tshadowHoe.merge(shadowCoreGeometry)\n\tconst core = new THREE.Mesh(coreGeometry, truckMaterial)\n\tcore.castShadow = true\n\tbackHoe.add(core)\n\t// Windows\n\tconst windowGeometry = new THREE.Geometry()\n\t// Front\n\twindowGeometry.vertices.push(new THREE.Vector3(-0.5, 2.25, 0))\t\t\t// 0\n\twindowGeometry.vertices.push(new THREE.Vector3(1.25, 2.25, 0))\t\t\t// 1\n\twindowGeometry.vertices.push(new THREE.Vector3(2.25, 0.75, 0))\t// 2\n\twindowGeometry.vertices.push(new THREE.Vector3(2.25, 0.5, 0))\t\t// 3\n\twindowGeometry.vertices.push(new THREE.Vector3(1.25, 0.5, 0))\t\t\t// 4\n\twindowGeometry.vertices.push(new THREE.Vector3(1.25, 0.75, 0))\t\t// 5\n\twindowGeometry.vertices.push(new THREE.Vector3(-0.5, 0.75, 0))\t\t// 6\n\t// Back\n\twindowGeometry.vertices.push(new THREE.Vector3(-0.5, 2.25, -1))\t\t// 7\n\twindowGeometry.vertices.push(new THREE.Vector3(1.25, 2.25, -1))\t\t// 8\n\twindowGeometry.vertices.push(new THREE.Vector3(2.25, 0.75, -1))\t// 9\n\twindowGeometry.vertices.push(new THREE.Vector3(2.25, 0.5, -1))\t// 10\n\twindowGeometry.vertices.push(new THREE.Vector3(1.25, 0.5, -1))\t\t// 11\n\twindowGeometry.vertices.push(new THREE.Vector3(1.25, 0.75, -1))\t// 12\n\twindowGeometry.vertices.push(new THREE.Vector3(-0.5, 0.75, -1))  // 13\n\t// Faces - Front\n\twindowGeometry.faces.push(new THREE.Face3(6, 1, 0))\n\twindowGeometry.faces.push(new THREE.Face3(1, 6, 5))\n\twindowGeometry.faces.push(new THREE.Face3(5, 2, 1))\n\twindowGeometry.faces.push(new THREE.Face3(2, 5, 3))\n\twindowGeometry.faces.push(new THREE.Face3(4, 3, 5))\n\t// Faces - Front2\n\twindowGeometry.faces.push(new THREE.Face3(6, 0, 1))\n\twindowGeometry.faces.push(new THREE.Face3(1, 5, 6))\n\twindowGeometry.faces.push(new THREE.Face3(5, 1, 2))\n\twindowGeometry.faces.push(new THREE.Face3(2, 3, 5))\n\twindowGeometry.faces.push(new THREE.Face3(4, 5, 3))\n\t// Faces - Back\n\twindowGeometry.faces.push(new THREE.Face3(13, 8, 7))\n\twindowGeometry.faces.push(new THREE.Face3(8, 13, 12))\n\twindowGeometry.faces.push(new THREE.Face3(12, 9, 8))\n\twindowGeometry.faces.push(new THREE.Face3(9, 12, 10))\n\twindowGeometry.faces.push(new THREE.Face3(11, 10, 12))\n\t// Faces - Back2\n\twindowGeometry.faces.push(new THREE.Face3(13, 7, 8))\n\twindowGeometry.faces.push(new THREE.Face3(8, 12, 13))\n\twindowGeometry.faces.push(new THREE.Face3(12, 8, 9))\n\twindowGeometry.faces.push(new THREE.Face3(9, 10, 12))\n\twindowGeometry.faces.push(new THREE.Face3(11, 12, 10))\n\t// Faces - Top\n\twindowGeometry.faces.push(new THREE.Face3(0, 8, 7))\n\twindowGeometry.faces.push(new THREE.Face3(8, 0, 1))\n\t// Faces - Top Side\n\twindowGeometry.faces.push(new THREE.Face3(8, 1, 2))\n\twindowGeometry.faces.push(new THREE.Face3(8, 2, 9))\n\t// Faces - Right Side\n\twindowGeometry.faces.push(new THREE.Face3(2, 3, 9))\n\twindowGeometry.faces.push(new THREE.Face3(9, 3, 10))\n\t// Faces - Right Bottom\n\twindowGeometry.faces.push(new THREE.Face3(11, 10, 4))\n\twindowGeometry.faces.push(new THREE.Face3(10, 3, 4))\n\t// Faces - Middle Side\n\twindowGeometry.faces.push(new THREE.Face3(5, 12, 4))\n\twindowGeometry.faces.push(new THREE.Face3(12, 11, 4))\n\t// Faces - Bottom\n\twindowGeometry.faces.push(new THREE.Face3(13, 12, 6))\n\twindowGeometry.faces.push(new THREE.Face3(12, 5, 6))\n\t// Faces - Left Side\n\twindowGeometry.faces.push(new THREE.Face3(0, 7, 6))\n\twindowGeometry.faces.push(new THREE.Face3(7, 13, 6))\n\twindowGeometry.computeFaceNormals()\n\tconst truckWindows = new THREE.Mesh(windowGeometry, windowColor)\n\tbackHoe.add(truckWindows)\n\t// Cabin Frame\n\tconst cabinGeometry = new THREE.Geometry()\n\tlet verticalBarGeometry = new THREE.BoxGeometry(0.1, 1.5, 0.1)\n\tverticalBarGeometry.translate(-0.45, 1.5, 0.05)\n\tcabinGeometry.merge(verticalBarGeometry)\n\tverticalBarGeometry.translate(0.55, 0, 0)\n\tcabinGeometry.merge(verticalBarGeometry)\n\tverticalBarGeometry.translate(0, 0, -1.1)\n\tcabinGeometry.merge(verticalBarGeometry)\n\tverticalBarGeometry.translate(-0.55, 0, 0)\n\tcabinGeometry.merge(verticalBarGeometry)\n\tverticalBarGeometry = new THREE.BoxGeometry(0.05, 1.5, 0.1)\n\tverticalBarGeometry.translate(1.23, 1.5, 0.05)\n\tcabinGeometry.merge(verticalBarGeometry)\n\tverticalBarGeometry.translate(0, 0, -1.1)\n\tcabinGeometry.merge(verticalBarGeometry)\n\tconst verticalBarGeometryBig = new THREE.BoxGeometry(0.05, 1.75, 0.1)\n\tverticalBarGeometryBig.translate(1.28, 1.375, 0.05)\n\tverticalBarGeometryBig.vertices[0].y -= 0.05\n\tverticalBarGeometryBig.vertices[1].y -= 0.05\n\tcabinGeometry.merge(verticalBarGeometryBig)\n\tverticalBarGeometryBig.translate(0, 0, -1.1)\n\tcabinGeometry.merge(verticalBarGeometryBig)\n\tconst verticalBarGeometryLittle = new THREE.BoxGeometry(0.1, 0.25, 0.1)\n\tverticalBarGeometryLittle.translate(2.3, 0.625, 0.05)\n\tverticalBarGeometryLittle.vertices[0].y -= 0.05\n\tverticalBarGeometryLittle.vertices[1].y -= 0.05\n\tcabinGeometry.merge(verticalBarGeometryLittle)\n\tverticalBarGeometryLittle.translate(0, 0, -1.1)\n\tcabinGeometry.merge(verticalBarGeometryLittle)\n\tlet horizontalBarGeometry = new THREE.BoxGeometry(1.75, 0.1, 0.1)\n\thorizontalBarGeometry.translate(0.375, 2.2, 0.05)\n\tcabinGeometry.merge(horizontalBarGeometry)\n\thorizontalBarGeometry.translate(0, 0, -1.1)\n\tcabinGeometry.merge(horizontalBarGeometry)\n\thorizontalBarGeometry = new THREE.BoxGeometry(1, 0.1, 0.1)\n\thorizontalBarGeometry.translate(1.75, 0.55, 0.05)\n\tcabinGeometry.merge(horizontalBarGeometry)\n\thorizontalBarGeometry.translate(0, 0, -1.1)\n\tcabinGeometry.merge(horizontalBarGeometry)\n\thorizontalBarGeometry = new THREE.BoxGeometry(1.75, 0.5, 0.1)\n\thorizontalBarGeometry.translate(0.4, 1, 0.05)\n\tcabinGeometry.merge(horizontalBarGeometry)\n\thorizontalBarGeometry.translate(0, 0, -1.1)\n\tcabinGeometry.merge(horizontalBarGeometry)\n\tconst backBarGeometry = new THREE.BoxGeometry(0.01, 0.2, 1)\n\tbackBarGeometry.translate(-0.496, 1.3, -0.5)\n\tcabinGeometry.merge(backBarGeometry)\n\tbackBarGeometry.translate(0, 0.9, 0)\n\tcabinGeometry.merge(backBarGeometry)\n\tconst diagonalBarGeometry = new THREE.BoxGeometry(1.045, 0.1, 0.1)\n\tdiagonalBarGeometry.translate(1.825, 2.155, 0.05)\n\tdiagonalBarGeometry.vertices[0].y -= 1.5\n\tdiagonalBarGeometry.vertices[1].y -= 1.5\n\tdiagonalBarGeometry.vertices[2].y -= 1.5\n\tdiagonalBarGeometry.vertices[3].y -= 1.5\n\tcabinGeometry.merge(diagonalBarGeometry)\n\tdiagonalBarGeometry.translate(0, 0, -1.1)\n\tcabinGeometry.merge(diagonalBarGeometry)\n\tconst frontBarGeometry = new THREE.BoxGeometry(0.1, 0.1, 1)\n\tfrontBarGeometry.translate(2.3, 0.55, -0.5)\n\tcabinGeometry.merge(frontBarGeometry)\n\tconst shadowCabin = cabinGeometry.clone(true)\n\tshadowHoe.merge(shadowCabin)\n\tconst cabin = new THREE.Mesh(cabinGeometry, gray)\n\tcabin.castShadow = true\n\tbackHoe.add(cabin)\n  // Inside\n\tconst truckSeat = new THREE.Geometry()\n\tconst truckSeatButt = new THREE.BoxGeometry(0.4, 0.1, 0.4)\n\ttruckSeatButt.translate(0.7, 0.75, -0.5)\n\ttruckSeat.merge(truckSeatButt)\n\tconst truckSeatBack = new THREE.BoxGeometry(0.1, 0.7, 0.4)\n\ttruckSeatBack.translate(0.45, 1.05, -0.5)\n\ttruckSeat.merge(truckSeatBack)\n\tconst truckSteering = new THREE.CylinderGeometry(0.2, 0.2, 0.05, 32)\n\ttruckSteering.translate(1.5, -0.75, -0.5)\n\ttruckSteering.rotateZ(1.2)\n\ttruckSeat.merge(truckSteering)\n\tconst truckConsole = new THREE.BoxGeometry(0.95, 0.24, 0.98)\n\ttruckConsole.translate(1.75, 0.65, -0.5)\n\ttruckSeat.merge(truckConsole)\n\tconst truckInnerConsole = new THREE.BoxGeometry(0.95, 0.5, 0.98)\n\ttruckInnerConsole.translate(1.75, 1, -0.5)\n\ttruckInnerConsole.vertices[0].x -= 0.4\n\ttruckInnerConsole.vertices[1].x -= 0.4\n\ttruckSeat.merge(truckInnerConsole)\n\tconst truckSeatPiece = new THREE.Mesh(truckSeat, gray)\n\ttruckSeatPiece.castShadow = true\n\tbackHoe.add(truckSeatPiece)\n\t// Wheels\n\tconst shape = new THREE.Shape()\n\tshape.moveTo(0, 0.75)\n\tshape.bezierCurveTo(0, 1.75, 1.5, 1.75, 1.5, 0.75)\n\tshape.lineTo(1.125, 0.75)\n\tshape.bezierCurveTo(1.125, 1.25, 0.375, 1.25, 0.375, 0.75)\n\tshape.bezierCurveTo(0.375, 0.35, 1.125, 0.35, 1.125, 0.75)\n\tshape.lineTo(1.5, 0.75)\n\tshape.bezierCurveTo(1.5, -0.125, 0, -0.125, 0, 0.75)\n\n\tconst extrudeSettings = {\n\t\tamount: 0.5,\n\t\tsteps: 50,\n\t\tbevelEnabled: false,\n\t\tcurveSegments: 8\n\t}\n\tconst truckWheel = new THREE.Group()\n\tconst truckRubber = new THREE.Geometry()\n\tconst truckTire = new THREE.ExtrudeGeometry(shape, extrudeSettings)\n\ttruckTire.translate(-1, -1, 0)\n\ttruckRubber.merge(truckTire)\n\ttruckTire.translate(0, 0, -1.5)\n\ttruckRubber.merge(truckTire)\n\ttruckTire.translate(3.2, 0, 0)\n\ttruckRubber.merge(truckTire)\n\ttruckTire.translate(0, 0, 1.5)\n\ttruckRubber.merge(truckTire)\n\tconst nut = new THREE.CylinderGeometry(0.15, 0.15, 0.3, 6)\n\tnut.rotateX(1.6)\n\tnut.translate(-0.25, -0.2, 0.3)\n\ttruckRubber.merge(nut)\n\tnut.translate(0, 0, -1.5)\n\ttruckRubber.merge(nut)\n\tnut.translate(3.2, 0, 0)\n\ttruckRubber.merge(nut)\n\tnut.translate(0, 0, 1.5)\n\ttruckRubber.merge(nut)\n\tlet truckBumper = new THREE.BoxGeometry(0.2, 0.2, 1.5)\n\ttruckBumper.translate(-1.25, 0, -0.5)\n\ttruckRubber.merge(truckBumper)\n\ttruckBumper = new THREE.BoxGeometry(0.32, 0.2, 1.5)\n\ttruckBumper.translate(-1.19, -0.2, -0.5)\n\ttruckRubber.merge(truckBumper)\n\ttruckBumper = new THREE.BoxGeometry(1.25, 0.2, 1.5)\n\ttruckBumper.translate(1.25, -0.2, -0.5)\n\ttruckRubber.merge(truckBumper)\n\ttruckBumper = new THREE.BoxGeometry(0.2, 0.2, 0.9)\n\ttruckBumper.translate(2.75, -0.2, -0.45)\n\ttruckRubber.merge(truckBumper)\n\tconst truckLicense = new THREE.BoxGeometry(0.05, 0.2, 0.5)\n\ttruckLicense.translate(-1.25, 0.3, -0.5)\n\ttruckRubber.merge(truckLicense)\n\tlet Scoop = new THREE.BoxGeometry(0.5, 0.2, 2)\n\tScoop.rotateZ(0.2)\n\tScoop.translate(4.825, 0.7, -0.5)\n\ttruckRubber.merge(Scoop)\n\tScoop = new THREE.BoxGeometry(1, 0.2, 2)\n\tScoop.rotateZ(1.15)\n\tScoop.translate(4.45, 0.25, -0.5)\n\ttruckRubber.merge(Scoop)\n\tScoop = new THREE.BoxGeometry(1, 0.2, 2)\n\tScoop.rotateZ(-0.7)\n\tScoop.translate(4.61, -0.42, -0.5)\n\ttruckRubber.merge(Scoop)\n\tScoop = new THREE.BoxGeometry(0.75, 0.2, 2)\n\tScoop.translate(5.3, -0.717, -0.5)\n\ttruckRubber.merge(Scoop)\n\t// Scoop Sides\n\tScoop = new THREE.BoxGeometry(0.5, 0.25, 0.2)\n\tScoop.translate(4.839, 0.53, 0.4)\n\tScoop.vertices[6].y += 0.2\n\tScoop.vertices[7].y += 0.2\n\tScoop.vertices[2].y += 0.1\n\tScoop.vertices[3].y += 0.1\n\tScoop.vertices[2].x -= 0.15\n\tScoop.vertices[3].x -= 0.15\n\ttruckRubber.merge(Scoop)\n\tScoop.translate(0, 0, -1.8)\n\ttruckRubber.merge(Scoop)\n\tScoop = new THREE.BoxGeometry(0.75, 0.25, 0.2)\n\tScoop.translate(5.3, -0.5, 0.4)\n\tScoop.vertices[4].x += 0.2\n\tScoop.vertices[5].x += 0.2\n\tScoop.vertices[0].y -= 0.2\n\tScoop.vertices[1].y -= 0.2\n\ttruckRubber.merge(Scoop)\n\tScoop.translate(0, 0, -1.8)\n\ttruckRubber.merge(Scoop)\n\tScoop = new THREE.BoxGeometry(0.75, 0.75, 0.2)\n\tScoop.translate(4.75, 0.25, 0.4)\n\tScoop.vertices[2].x += 0.1\n\tScoop.vertices[3].x += 0.1\n\tScoop.vertices[4].x += 0.2\n\tScoop.vertices[5].x += 0.2\n\tScoop.vertices[0].x -= 0.23\n\tScoop.vertices[1].x -= 0.23\n\tScoop.vertices[0].y += 0.02\n\tScoop.vertices[1].y += 0.02\n\ttruckRubber.merge(Scoop)\n\tScoop.translate(0, 0, -1.8)\n\ttruckRubber.merge(Scoop)\n\tScoop = new THREE.BoxGeometry(0.5, 0.5, 0.2)\n\tScoop.translate(4.875, -0.375, 0.4)\n\tScoop.vertices[0].x += 0.1\n\tScoop.vertices[1].x += 0.1\n\tScoop.vertices[2].x += 0.3\n\tScoop.vertices[3].x += 0.3\n\tScoop.vertices[4].x -= 0.25\n\tScoop.vertices[5].x -= 0.25\n\tScoop.vertices[6].x += 0.05\n\tScoop.vertices[7].x += 0.05\n\tScoop.vertices[6].y += 0.05\n\tScoop.vertices[7].y += 0.05\n\ttruckRubber.merge(Scoop)\n\tScoop.translate(0, 0, -1.8)\n\ttruckRubber.merge(Scoop)\n\tconst shadowRubber = truckRubber.clone(true)\n\tshadowHoe.merge(shadowRubber)\n\tconst mesh = new THREE.Mesh(truckRubber, gray)\n\tmesh.castShadow = true\n\ttruckWheel.add(mesh)\n\tconst truckHub = new THREE.Geometry()\n\tconst innerHub = new THREE.TorusGeometry(0.34, 0.1, 4, 50, 6.3)\n\tinnerHub.translate(-0.25, -0.213, 0.415)\n\ttruckHub.merge(innerHub)\n\tinnerHub.translate(0, 0, -1.825)\n\ttruckHub.merge(innerHub)\n\tinnerHub.translate(3.2, 0, 0)\n\ttruckHub.merge(innerHub)\n\tinnerHub.translate(0, 0, 1.825)\n\ttruckHub.merge(innerHub)\n\tconst flatHub = new THREE.CylinderGeometry(0.5, 0.5, 0.3, 32)\n\tflatHub.translate(-0.25, 0.2, 0.25)\n\tflatHub.rotateX(1.6)\n\ttruckHub.merge(flatHub)\n\tflatHub.translate(0, 0, -1.3)\n\ttruckHub.merge(flatHub)\n\tflatHub.translate(3.25, 0, 0)\n\ttruckHub.merge(flatHub)\n\tflatHub.translate(0, 0, 1.3)\n\ttruckHub.merge(flatHub)\n\tconst shadowHub = truckHub.clone(true)\n\tshadowHoe.merge(shadowHub)\n\tconst backhoeHub = new THREE.Mesh(truckHub, truckMaterial)\n\tbackhoeHub.castShadow = true\n\ttruckWheel.add(backhoeHub)\n\tbackHoe.add(truckWheel)\n\t// Add To scene\n\tconst backhoeShadow = new THREE.Mesh(shadowHoe, shadows)\n\tbackHoe.add(backhoeShadow)\n\tbackHoe.position.set(2.5, 1.4, 2.8)\n\tscene.add(backHoe)\n}\n","function initTruck() {\n\tconst truck = new THREE.Group()\n\tconst shadowCopy = new THREE.Geometry()\n\t// Base\n\tconst core = new THREE.Geometry()\n\tconst nose = new THREE.BoxGeometry(1, 0.8, 1.3)\n\tnose.translate(-0.6, 0, 0)\n\tcore.merge(nose)\n\tconst cabin = new THREE.BoxGeometry(0.1, 0.8, 1.3)\n\tcabin.translate(0.52, 0.25, 0)\n\tcore.merge(cabin)\n\tconst cabinSide = new THREE.BoxGeometry(0.1, 0.7, 0.3)\n\tcabinSide.translate(0.52, 0.85, 0.5)\n\tcore.merge(cabinSide)\n\tcabinSide.translate(0, 0, -1)\n\tcore.merge(cabinSide)\n\tconst roof = new THREE.BoxGeometry(0.8, 0.1, 1.3)\n\troof.translate(0.17, 1.15, 0)\n\troof.vertices[6].x -= 0.05\n\troof.vertices[7].x -= 0.05\n\tcore.merge(roof)\n\tconst shieldRight = new THREE.BoxGeometry(0.1, 1, 0.1)\n\tshieldRight.translate(-0.6, 0.52, -0.6)\n\tshieldRight.rotateZ(-0.4)\n\tcore.merge(shieldRight)\n\tshieldRight.translate(0, 0, 1.2)\n\tcore.merge(shieldRight)\n\tconst windshield = new THREE.BoxGeometry(1, 0.8, 1.29)\n\t// X\n\twindshield.vertices[4].x += 0.26\n\twindshield.vertices[5].x += 0.26\n\twindshield.vertices[6].x -= 0.035\n\twindshield.vertices[7].x -= 0.035\n\t// Y\n\twindshield.vertices[0].y += 2.2\n\twindshield.vertices[1].y += 2.2\n\twindshield.vertices[2].y += 2.3\n\twindshield.vertices[3].y += 2.3\n\twindshield.vertices[4].y += 2.2\n\twindshield.vertices[5].y += 2.2\n\twindshield.vertices[6].y += 2.3\n\twindshield.vertices[7].y += 2.3\n\tconst shield = new THREE.Mesh(windshield, windowColor)\n\ttruck.add(shield)\n\tconst bed = new THREE.BoxGeometry(3.2, 0.3, 1.3)\n\tbed.translate(0.9, -0.31, 0)\n\tcore.merge(bed)\n\tconst bedSide = new THREE.BoxGeometry(2.68, 0.6, 0.1)\n\tbedSide.translate(1.15, 0.1, 0.6)\n\tcore.merge(bedSide)\n\tbedSide.translate(0, 0, -1.2)\n\tcore.merge(bedSide)\n\tconst bedBack = new THREE.BoxGeometry(0.1, 0.6, 1.3)\n\tbedBack.translate(2.45, 0.1, 0)\n\tcore.merge(bedBack)\n\tcore.translate(0, 1.5, 0)\n\tconst shadowCore = core.clone(true)\n\tshadowCopy.merge(shadowCore)\n\tconst base = new THREE.Mesh(core, offwhite)\n\tbase.castShadow = true\n\ttruck.add(base)\n\t// Inside\n\tconst seat = new THREE.Geometry()\n\tconst seatButt = new THREE.BoxGeometry(0.4, 0.1, 0.4)\n\tseatButt.translate(0.25, 1.6, 0.3)\n\tseat.merge(seatButt)\n\tseatButt.translate(0, 0, -0.6)\n\tseat.merge(seatButt)\n\tconst seatBack = new THREE.BoxGeometry(0.1, 0.7, 0.4)\n\tseatBack.translate(0.45, 1.8, 0.3)\n\tseat.merge(seatBack)\n\tseatBack.translate(0, 0, -0.6)\n\tseat.merge(seatBack)\n\tconst steering = new THREE.CylinderGeometry(0.2, 0.2, 0.05, 32)\n\tsteering.translate(-1.9, 0.65, 0.3)\n\tsteering.rotateZ(-1.2)\n\tseat.merge(steering)\n\tconst shadowSeat = seat.clone(true)\n\tshadowCopy.merge(shadowSeat)\n\tconst seatPiece = new THREE.Mesh(seat, gray)\n\ttruck.add(seatPiece)\n\t// Bumper\n\n\tconst bumperGeometry = new THREE.Geometry()\n\tconst frontBumper = new THREE.BoxGeometry(0.4, 0.1, 1.4)\n\tfrontBumper.translate(-0.95, 1.05, 0)\n\tfrontBumper.vertices[2].x += 0.01\n\tfrontBumper.vertices[3].x += 0.01\n\tbumperGeometry.merge(frontBumper)\n\tconst middleBumper = new THREE.BoxGeometry(1.1, 0.1, 1.4)\n\tmiddleBumper.translate(0.7, 1.05, 0)\n\tmiddleBumper.vertices[2].x += 0.01\n\tmiddleBumper.vertices[3].x += 0.01\n\tmiddleBumper.vertices[6].x -= 0.01\n\tmiddleBumper.vertices[7].x -= 0.01\n\tbumperGeometry.merge(middleBumper)\n\tconst backBumper = new THREE.BoxGeometry(0.4, 0.1, 1.4)\n\tbackBumper.translate(2.35, 1.05, 0)\n\tbackBumper.vertices[6].x -= 0.01\n\tbackBumper.vertices[7].x -= 0.01\n\tbumperGeometry.merge(backBumper)\n\tconst shadowBumper = bumperGeometry.clone(true)\n\tshadowCopy.merge(shadowBumper)\n\tconst bumper = new THREE.Mesh(bumperGeometry, palegray)\n\ttruck.add(bumper)\n\t// Wheels\n\tconst wheels = new THREE.Geometry()\n\tconst wheelGeometry = new THREE.CylinderGeometry(0.45, 0.45, 0.2, 32)\n\twheelGeometry.translate(-0.3, 0.55, -1.1)\n\twheelGeometry.rotateX(1.6)\n\twheels.merge(wheelGeometry)\n\twheelGeometry.translate(0, 0, -1.2)\n\twheels.merge(wheelGeometry)\n\twheelGeometry.translate(2, 0, 1.2)\n\twheels.merge(wheelGeometry)\n\twheelGeometry.translate(0, 0, -1.2)\n\twheels.merge(wheelGeometry)\n\tconst grill = new THREE.BoxGeometry(0.01, 0.7, 1.2)\n\tgrill.translate(-1.1, 1.5, 0)\n\twheels.merge(grill)\n\tconst license = new THREE.BoxGeometry(0.05, 0.2, 0.5)\n\tlicense.translate(2.5, 1.25, 0)\n\twheels.merge(license)\n\tconst shadowWheel = wheels.clone(true)\n\tshadowCopy.merge(shadowWheel)\n\tconst greys = new THREE.Mesh(wheels, gray)\n\tgreys.castShadow = true\n\ttruck.add(greys)\n\t// Hubcaps\n\tconst hubs = new THREE.Geometry()\n\tconst hubGeometry = new THREE.TorusGeometry(0.25, 0.1, 3, 199)\n\thubGeometry.translate(-0.3, 1.09, 0.63)\n\thubs.merge(hubGeometry)\n\thubGeometry.translate(0, 0, -1.3)\n\thubs.merge(hubGeometry)\n\thubGeometry.translate(2, 0, 1.3)\n\thubs.merge(hubGeometry)\n\thubGeometry.translate(0, 0, -1.3)\n\thubs.merge(hubGeometry)\n\tconst shadowHubs = hubs.clone(true)\n\tshadowCopy.merge(shadowHubs)\n\tconst hubcaps = new THREE.Mesh(hubs, offwhite)\n\ttruck.add(hubcaps)\n\t// Back\n\tconst brakeLights = new THREE.Geometry()\n\tconst leftLight = new THREE.BoxGeometry(0.1, 0.1, 0.1)\n\tleftLight.translate(2.5, 1.25, 0.45)\n\tbrakeLights.merge(leftLight)\n\tleftLight.translate(0, 0, -0.9)\n\tbrakeLights.merge(leftLight)\n\tconst shadowlights = brakeLights.clone(true)\n\tshadowCopy.merge(shadowlights)\n\tconst brakes = new THREE.Mesh(brakeLights, red)\n\ttruck.add(brakes)\n\n\t// Lights\n\tconst lightGeometry = new THREE.BoxGeometry(0.1, 0.05, 0.5)\n\tlightGeometry.translate(0.2, 2.72, 0)\n\tconst shadowlTopLights = lightGeometry.clone(true)\n\tshadowCopy.merge(shadowlTopLights)\n\tconst light = new THREE.Mesh(lightGeometry, orange)\n\tlight.castShadow = true\n\ttruck.add(light)\n\n\tconst baseShadow = new THREE.Mesh(shadowCopy, shadows)\n\ttruck.add(baseShadow)\n\n\ttruck.position.set(0, 0, 7)\n\ttruck.rotation.y += 0.5\n\ttruck.scale.set(0.9, 0.9, 0.9)\n\tscene.add(truck)\n}\n","function initWorkers()\t{\n\tconst worker = new THREE.Group()\n\tconst worker2 = new THREE.Group()\n\tconst worker3 = new THREE.Group()\n\tconst shadowPerson1 = new THREE.Geometry()\n\tconst shadowPerson2 = new THREE.Geometry()\n\tconst shadowPerson3 = new THREE.Geometry()\n\n\t// Person 1\n\tconst body = new THREE.Geometry()\n\t// Arms\n\tconst rightArm = new THREE.BoxGeometry(1, 0.4, 0.5)\n\trightArm.translate(0.85, 0.6, 0)\n\trightArm.vertices[0].y -= 0.75\n\trightArm.vertices[1].y -= 0.75\n\trightArm.vertices[2].y -= 0.5\n\trightArm.vertices[3].y -= 0.5\n\trightArm.vertices[0].x -= 0.5\n\trightArm.vertices[1].x -= 0.5\n\trightArm.vertices[2].x -= 0.5\n\trightArm.vertices[3].x -= 0.5\n\trightArm.vertices[0].z -= 0.15\n\trightArm.vertices[1].z += 0.15\n\trightArm.vertices[2].z -= 0.15\n\trightArm.vertices[3].z += 0.15\n\tbody.merge(rightArm)\n\tconst leftArm = new THREE.BoxGeometry(1, 0.4, 0.5)\n\tleftArm.translate(-0.85, 0.6, 0)\n\tleftArm.vertices[5].y += 0.3\n\tleftArm.vertices[4].y += 0.3\n\tleftArm.vertices[7].y += 0.55\n\tleftArm.vertices[6].y += 0.55\n\tleftArm.vertices[5].x += 0.8\n\tleftArm.vertices[4].x += 0.8\n\tleftArm.vertices[7].x += 0.8\n\tleftArm.vertices[6].x += 0.8\n\tleftArm.vertices[5].z += 0.9\n\tleftArm.vertices[4].z += 1.05\n\tleftArm.vertices[7].z += 0.9\n\tleftArm.vertices[6].z += 1.05\n\tbody.merge(leftArm)\n\t// Head\n\tconst head = new THREE.SphereGeometry(0.35, 32, 32)\n\thead.translate(0, 1.3, 0)\n\tbody.merge(head)\n\t// Mesh\n\tconst person = new THREE.Mesh(body, skinTone2)\n\tperson.castShadow = true\n\tperson.geometry.scale(0.5, 0.5, 0.5)\n\tconst shadowBody = body.clone(true)\n\tshadowPerson1.merge(shadowBody)\n\tworker.add(person)\n\t// Clothes\n\t// Shirt\n\tconst torso = new THREE.BoxGeometry(1, 1.4, 0.8)\n\ttorso.translate(0, 0.1, 0)\n\ttorso.vertices[0].z -= 0.15\n\ttorso.vertices[0].x -= 0.15\n\ttorso.vertices[1].z += 0.15\n\ttorso.vertices[1].x -= 0.15\n\ttorso.vertices[4].z += 0.15\n\ttorso.vertices[4].x += 0.15\n\ttorso.vertices[5].z -= 0.15\n\ttorso.vertices[5].x += 0.15\n\tconst shirt1 = new THREE.Mesh(torso, palegray)\n\tshirt1.castShadow = true\n\tshirt1.geometry.scale(0.5, 0.5, 0.5)\n\tconst shadowShirt = torso.clone(true)\n\tshadowPerson1.merge(shadowShirt)\n\tworker.add(shirt1)\n\t\t// Pants\n\tconst leftLeg = new THREE.BoxGeometry(0.5, 0.8, 0.8)\n\tleftLeg.translate(-0.25, -1, 0)\n\tleftLeg.vertices[0].x -= 0.1\n\tleftLeg.vertices[1].x -= 0.1\n\tleftLeg.vertices[2].x -= 0.3\n\tleftLeg.vertices[2].z -= 0.3\n\tleftLeg.vertices[3].x -= 0.3\n\tleftLeg.vertices[3].z += 0.3\n\tleftLeg.vertices[6].z += 0.3\n\tleftLeg.vertices[7].z -= 0.3\n\tconst rightLeg = new THREE.BoxGeometry(0.5, 0.8, 0.8)\n\trightLeg.translate(0.25, -1, 0)\n\trightLeg.vertices[4].x += 0.1\n\trightLeg.vertices[5].x += 0.1\n\trightLeg.vertices[2].z -= 0.3\n\trightLeg.vertices[3].z += 0.3\n\trightLeg.vertices[6].x += 0.3\n\trightLeg.vertices[6].z += 0.3\n\trightLeg.vertices[7].x += 0.3\n\trightLeg.vertices[7].z -= 0.3\n\tleftLeg.merge(rightLeg)\n\n\tconst pants1 = new THREE.Mesh(leftLeg, jean)\n\tpants1.castShadow = true\n\tpants1.geometry.scale(0.5, 0.5, 0.5)\n\tconst shadowPant = leftLeg.clone(true)\n\tshadowPerson1.merge(shadowPant)\n\tworker.add(pants1)\n\n\t// Person 2\n\tconst body2 = new THREE.Geometry()\n\tconst rightArm2 = rightArm.clone()\n\tbody2.merge(rightArm2)\n\tconst leftArm2 = new THREE.BoxGeometry(1, 0.4, 0.5)\n\tleftArm2.translate(-0.85, 0.6, 0)\n\tleftArm2.vertices[5].y -= 0.75\n\tleftArm2.vertices[4].y -= 0.75\n\tleftArm2.vertices[7].y -= 0.5\n\tleftArm2.vertices[6].y -= 0.5\n\tleftArm2.vertices[5].x += 0.5\n\tleftArm2.vertices[4].x += 0.5\n\tleftArm2.vertices[7].x += 0.5\n\tleftArm2.vertices[6].x += 0.5\n\tleftArm2.vertices[5].z -= 0.15\n\tleftArm2.vertices[4].z += 0.15\n\tleftArm2.vertices[7].z -= 0.15\n\tleftArm2.vertices[6].z += 0.15\n\tbody2.merge(leftArm2)\n\t// Head\n\tconst head2 = new THREE.SphereGeometry(0.35, 32, 32)\n\thead2.translate(0, 1.3, 0)\n\tbody2.merge(head2)\n\tconst person2 = new THREE.Mesh(body2, skinTone4)\n\tperson2.castShadow = true\n\tperson2.geometry.scale(0.5, 0.5, 0.5)\n\tworker2.add(person2)\n\t// Clothes\n\t// Shirt\n\tconst shirt2 = new THREE.Mesh(torso, palegray)\n\tshirt2.castShadow = true\n\tconst shadowShirt2 = torso.clone(true)\n\tshadowPerson2.merge(shadowShirt2)\n\tworker2.add(shirt2)\n\t// Pants\n\tconst pants2 = new THREE.Mesh(leftLeg, jean)\n\tpants2.castShadow = true\n\tconst shadowPant2 = leftLeg.clone(true)\n\tshadowPerson2.merge(shadowPant2)\n\tworker2.add(pants2)\n\n\t// Person 3\n\tconst body3 = new THREE.Geometry()\n\tconst rightArm3 = new THREE.BoxGeometry(1, 0.4, 0.5)\n\trightArm3.translate(0.85, 0.6, 0)\n\trightArm3.vertices[0].y -= 0.45\n\trightArm3.vertices[1].y -= 0.45\n\trightArm3.vertices[2].y -= 0.2\n\trightArm3.vertices[3].y -= 0.2\n\trightArm3.vertices[0].x -= 0.5\n\trightArm3.vertices[1].x -= 0.5\n\trightArm3.vertices[2].x -= 0.5\n\trightArm3.vertices[3].x -= 0.5\n\trightArm3.vertices[0].z += 0.45\n\trightArm3.vertices[1].z += 0.85\n\trightArm3.vertices[2].z += 0.45\n\trightArm3.vertices[3].z += 0.85\n\tbody3.merge(rightArm3)\n\tconst leftArm3 = new THREE.BoxGeometry(1, 0.4, 0.5)\n\tleftArm3.translate(-0.85, 0.6, 0)\n\tleftArm3.vertices[5].y -= 0.45\n\tleftArm3.vertices[4].y -= 0.45\n\tleftArm3.vertices[7].y -= 0.2\n\tleftArm3.vertices[6].y -= 0.2\n\tleftArm3.vertices[5].x += 0.5\n\tleftArm3.vertices[4].x += 0.5\n\tleftArm3.vertices[7].x += 0.5\n\tleftArm3.vertices[6].x += 0.5\n\tleftArm3.vertices[5].z += 0.45\n\tleftArm3.vertices[4].z += 0.85\n\tleftArm3.vertices[7].z += 0.45\n\tleftArm3.vertices[6].z += 0.85\n\tbody3.merge(leftArm3)\n\t// Head\n\tconst head3 = new THREE.SphereGeometry(0.35, 32, 32)\n\thead3.translate(0, 1.3, 0)\n\tbody3.merge(head3)\n\tconst person3 = new THREE.Mesh(body3, skinTone1)\n\tperson3.castShadow = true\n\tperson3.geometry.scale(0.5, 0.5, 0.5)\n\tworker3.add(person3)\n\t// Clothes\n\t// Shirt\n\tconst shirt3 = new THREE.Mesh(torso, palegray)\n\tshirt3.castShadow = true\n\tconst shadowShirt3 = torso.clone(true)\n\tshadowPerson3.merge(shadowShirt3)\n\tworker3.add(shirt3)\n\t// Pants\n\tconst pants3 = new THREE.Mesh(leftLeg, jean)\n\tpants3.castShadow = true\n\tconst shadowPant3 = leftLeg.clone(true)\n\tshadowPerson3.merge(shadowPant3)\n\tworker3.add(pants3)\n\n// Hat\n\tconst hat = new THREE.Geometry()\n\tconst dome = new THREE.SphereGeometry(0.2, 32, 32, 1, 6.3, 0, 1.5)\n\tdome.translate(0, 0.7, 0)\n\that.merge(dome)\n\tconst brim = new THREE.CylinderGeometry(0.2, 0.2, 0.02, 32)\n\tbrim.translate(0, 0.72, 0.1)\n\that.merge(brim)\n\tconst constHat = new THREE.Mesh(hat, truckMaterial)\n\tconstHat.castShadow = true\n\tconst hat2 = constHat.clone()\n\tconst hat3 = constHat.clone()\n// Vest\n\tconst vestGeometry = new THREE.Geometry()\n\tconst left = new THREE.BoxGeometry(0.2, 0.5, 0.4)\n\tleft.translate(-0.13, 0.17, 0)\n\tleft.vertices[0].z -= 0.05\n\tleft.vertices[1].z += 0.05\n\tleft.vertices[4].z += 0.05\n\tleft.vertices[4].x += 0.05\n\tleft.vertices[5].z -= 0.05\n\tleft.vertices[5].x += 0.05\n\tvestGeometry.merge(left)\n\tconst right = new THREE.BoxGeometry(0.2, 0.5, 0.4)\n\tright.translate(0.13, 0.17, 0)\n\tright.vertices[5].z -= 0.05\n\tright.vertices[4].z += 0.05\n\tright.vertices[1].z += 0.05\n\tright.vertices[1].x -= 0.05\n\tright.vertices[0].z -= 0.05\n\tright.vertices[0].x -= 0.05\n\tvestGeometry.merge(right)\n\tconst back = new THREE.BoxGeometry(0.2, 0.5, 0.025)\n\tback.translate(0, 0.17, -0.1875)\n\tback.vertices[0].z += 0.05\n\tback.vertices[1].z += 0.05\n\tback.vertices[4].z += 0.05\n\tback.vertices[5].z += 0.05\n\tvestGeometry.merge(back)\n\tlet vest = new THREE.Mesh(vestGeometry, truckMaterial)\n\tvest.castShadow = true\n\t// Stripes\n\tconst vestStripes = new THREE.Geometry()\n\tconst stripeFront = new THREE.BoxGeometry(0.05, 0.5, 0.001)\n\tstripeFront.translate(-0.11, 0.17, 0.201)\n\tstripeFront.vertices[0].z -= 0.05\n\tstripeFront.vertices[1].z -= 0.05\n\tstripeFront.vertices[4].z -= 0.05\n\tstripeFront.vertices[5].z -= 0.05\n\tvestStripes.merge(stripeFront)\n\tstripeFront.translate(0.22, 0, 0)\n\tvestStripes.merge(stripeFront)\n\tconst stripeBack = new THREE.BoxGeometry(0.05, 0.5, 0.001)\n\tstripeBack.translate(-0.11, 0.17, -0.201)\n\tstripeBack.vertices[0].z += 0.05\n\tstripeBack.vertices[1].z += 0.05\n\tstripeBack.vertices[4].z += 0.05\n\tstripeBack.vertices[5].z += 0.05\n\tvestStripes.merge(stripeBack)\n\tstripeBack.translate(0.22, 0, 0)\n\tvestStripes.merge(stripeBack)\n\tconst stripeTop = new THREE.BoxGeometry(0.05, 0.001, 0.3)\n\tstripeTop.translate(-0.11, 0.42, 0)\n\tvestStripes.merge(stripeTop)\n\tstripeTop.translate(0.22, 0, 0)\n\tvestStripes.merge(stripeTop)\n\tconst stripeBottom1 = new THREE.BoxGeometry(0.2, 0.2, 0.001)\n\tstripeBottom1.translate(-0.13, 0.02, 0.201)\n\tstripeBottom1.vertices[4].x += 0.02\n\tstripeBottom1.vertices[5].x += 0.02\n\tstripeBottom1.vertices[0].z -= 0.02\n\tstripeBottom1.vertices[1].z -= 0.02\n\tstripeBottom1.vertices[4].z -= 0.02\n\tstripeBottom1.vertices[5].z -= 0.02\n\tvestStripes.merge(stripeBottom1)\n\tconst stripeBottom2 = new THREE.BoxGeometry(0.2, 0.2, 0.001)\n\tstripeBottom2.translate(0.13, 0.02, 0.201)\n\tstripeBottom2.vertices[0].x -= 0.02\n\tstripeBottom2.vertices[1].x -= 0.02\n\tstripeBottom2.vertices[0].z -= 0.02\n\tstripeBottom2.vertices[1].z -= 0.02\n\tstripeBottom2.vertices[4].z -= 0.02\n\tstripeBottom2.vertices[5].z -= 0.02\n\tvestStripes.merge(stripeBottom2)\n\tconst stripeBottom3 = new THREE.BoxGeometry(0.001, 0.2, 0.4)\n\tstripeBottom3.translate(-0.23, 0.02, 0)\n\tstripeBottom3.vertices[0].x += 0.02\n\tstripeBottom3.vertices[1].x += 0.02\n\tstripeBottom3.vertices[4].x += 0.02\n\tstripeBottom3.vertices[5].x += 0.02\n\tstripeBottom3.vertices[0].z -= 0.02\n\tstripeBottom3.vertices[1].z += 0.02\n\tstripeBottom3.vertices[4].z += 0.02\n\tstripeBottom3.vertices[5].z -= 0.02\n\tvestStripes.merge(stripeBottom3)\n\tconst stripeBottom4 = new THREE.BoxGeometry(0.001, 0.2, 0.4)\n\tstripeBottom4.translate(0.23, 0.02, 0)\n\tstripeBottom4.vertices[0].x -= 0.02\n\tstripeBottom4.vertices[1].x -= 0.02\n\tstripeBottom4.vertices[4].x -= 0.02\n\tstripeBottom4.vertices[5].x -= 0.02\n\tstripeBottom4.vertices[0].z -= 0.02\n\tstripeBottom4.vertices[1].z += 0.02\n\tstripeBottom4.vertices[4].z += 0.02\n\tstripeBottom4.vertices[5].z -= 0.02\n\tvestStripes.merge(stripeBottom4)\n\tconst stripeBottom5 = new THREE.BoxGeometry(0.45, 0.2, 0.001)\n\tstripeBottom5.translate(0, 0.02, -0.201)\n\tstripeBottom5.vertices[0].x -= 0.02\n\tstripeBottom5.vertices[1].x -= 0.02\n\tstripeBottom5.vertices[4].x += 0.02\n\tstripeBottom5.vertices[5].x += 0.02\n\tstripeBottom5.vertices[0].z += 0.02\n\tstripeBottom5.vertices[1].z += 0.02\n\tstripeBottom5.vertices[4].z += 0.02\n\tstripeBottom5.vertices[5].z += 0.02\n\tvestStripes.merge(stripeBottom5)\n\tconst stripes = new THREE.Mesh(vestStripes, yellow)\n\tvest = new THREE.Mesh(vestGeometry, truckMaterial)\n\tvest.add(stripes)\n\tconst vest2 = vest.clone()\n\tconst vest3 = vest.clone()\n\n\t// Paper\n\tconst paper = new THREE.BoxGeometry(0.8, 0.6, 0.025)\n\tpaper.translate(0, 0.3, 0.25)\n\tpaper.rotateX(0.4)\n\tconst sheet = new THREE.Mesh(paper, white)\n\tsheet.castShadow = true\n\n\tworker.add(constHat)\n\tworker.add(vest)\n\tconst shadow1 = new THREE.Mesh(shadowPerson1, shadows)\n\tworker.add(shadow1)\n\n\tworker.position.set(2.7, 1.2, 6.5)\n\tworker.rotation.y -= 1\n\tscene.add(worker)\n\n\tworker2.add(hat2)\n\tworker2.add(vest2)\n\tconst shadow2 = new THREE.Mesh(shadowPerson2, shadows)\n\tworker2.add(shadow2)\n\tworker2.position.set(5.6, 1.2, 6.3)\n\tworker2.rotation.y += 0.8\n\tscene.add(worker2)\n\n\tworker3.add(hat3)\n\tworker3.add(vest3)\n\tworker3.add(sheet)\n\tconst shadow3 = new THREE.Mesh(shadowPerson3, shadows)\n\tworker3.add(shadow3)\n\tworker3.position.set(7, 1.2, 6.4)\n\tworker3.rotation.y -= 0.6\n\tscene.add(worker3)\n}\n","\nfunction render() {\n\tscene.position.set(0, 0, 3)\n\trenderer.render(scene, camera)\n}\n\nfunction animate() {\n\trequestAnimationFrame(animate)\n\trender()\n\t//controls.update()\n}\n\ninit()\nanimate()\n","let showing = 'none'\n\nfunction slide(id) {\n\tswitch (showing) {\n\t\tcase id:\n\t\t\tdocument.getElementById(id).removeAttribute('style')\n\t\t\tdocument.getElementsByClassName(id)[0].removeAttribute('style')\n\t\t\tbreak\n\t\tcase 'group-1':\n\t\t\tdocument.getElementById('group-1').removeAttribute('style')\n\t\t\tdocument.getElementsByClassName('group-1')[0].removeAttribute('style')\n\t\t\tbreak\n\t\tcase 'group-2':\n\t\t\tdocument.getElementById('group-2').removeAttribute('style')\n\t\t\tdocument.getElementsByClassName('group-2')[0].removeAttribute('style')\n\t\t\tbreak\n\t\tcase 'group-3':\n\t\t\tdocument.getElementById('group-3').removeAttribute('style')\n\t\t\tdocument.getElementsByClassName('group-3')[0].removeAttribute('style')\n\t\t\tbreak\n\t\tcase 'group-4':\n\t\t\tdocument.getElementById('group-4').removeAttribute('style')\n\t\t\tdocument.getElementsByClassName('group-4')[0].removeAttribute('style')\n\t\t\tbreak\n\t\tcase 'group-5':\n\t\t\tdocument.getElementById('group-5').removeAttribute('style')\n\t\t\tdocument.getElementsByClassName('group-5')[0].removeAttribute('style')\n\t\t\tbreak\n\t\tcase 'group-6':\n\t\t\tdocument.getElementById('group-6').removeAttribute('style')\n\t\t\tdocument.getElementsByClassName('group-6')[0].removeAttribute('style')\n\t\t\tbreak\n\t\tdefault:\n\t\t\tbreak\n\t}\n\n\tif (showing === id) {\n\t\tshowing = 'none'\n\t} else {\n\t\tdocument.getElementsByClassName(id)[0].style.backgroundColor = '#666'\n\t\tdocument.getElementById(id).style.width = '300px'\n\t\tshowing = id\n\t}\n}\n","function onDocumentMouseMove(event) {\n\tevent.preventDefault()\n\tconst rect = renderer.domElement.getBoundingClientRect()\n\tmouse.x = (((event.clientX - rect.left) / rect.width) * 2) - 1\n\tmouse.y = (((event.clientY - rect.top) / rect.height) * 2) + 1\n\traycaster.setFromCamera(mouse, camera)\n\tif (selected) {\n\t\tif (raycaster.intersectObjects(objects)) {\n\t\t\tselected.position.set(0, 1, 0)\n\t\t\tselected.position.set(raycaster.intersectObjects(objects)[0].point.x, selected.position.y, raycaster.intersectObjects(objects)[0].point.z)\n\t\t}\n\t}\n\traycaster.setFromCamera(mouse, camera)\n\tconst intersects = raycaster.intersectObjects(flaggers)\n\tif (intersects.length > 0) {\n\t\tconst object = intersects[0].object\n\t\tif (hovered !== object) {\n\t\t\trenderer.domElement.style.cursor = 'pointer'\n\t\t\thovered = object\n\t\t}\n\t} else if (hovered !== null) {\n\t\trenderer.domElement.style.cursor = 'auto'\n\t\thovered = null\n\t}\n}\n\nfunction onDocumentTouchMove(event) {\n\tevent.preventDefault()\n\tevent = event.changedTouches[0]\n\tconst rect = renderer.domElement.getBoundingClientRect()\n\tmouse.x = (((event.clientX - rect.left) / rect.width) * 2) - 1\n\tmouse.y = (((event.clientY - rect.top) / rect.height) * 2) + 1\n\traycaster.setFromCamera(mouse, camera)\n\tif (selected) {\n\t\tif (raycaster.intersectObjects(objects)) {\n\t\t\tselected.position.set(0, 1, 0)\n\t\t\tselected.position.set(raycaster.intersectObjects(objects)[0].point.x, selected.position.y, raycaster.intersectObjects(objects)[0].point.z)\n\t\t}\n\t}\n}\n","function onDocumentMouseDown(event) {\n\tcontrols.enabled = false\n\tevent.preventDefault()\n\traycaster.setFromCamera(mouse, camera)\n\tconst intersects = raycaster.intersectObjects(flaggers)\n\tif (intersects.length > 0) {\n\t\tselected = intersects[0].object\n\t\tif (raycaster.intersectObjects(objects)) {\n\t\t\toffset.copy(intersection).sub(selected.position)\n\t\t}\n\t\trenderer.domElement.style.cursor = 'move'\n\t}\n}\n\nfunction onDocumentTouchStart(event) {\n\tcontrols.enabled = false\n\tevent.preventDefault()\n\tevent = event.changedTouches[0]\n\tconst rect = renderer.domElement.getBoundingClientRect()\n\tmouse.x = (((event.clientX - rect.left) / rect.width) * 2) - 1\n\tmouse.y = (((event.clientY - rect.top) / rect.height) * 2) + 1\n\traycaster.setFromCamera(mouse, camera)\n\tconst intersects = raycaster.intersectObjects(flaggers)\n\tif (intersects.length > 0) {\n\t\tselected = intersects[0].object\n\t\tif (raycaster.intersectObjects(objects)) {\n\t\t\toffset.copy(intersection).sub(selected.position)\n\t\t}\n\t\trenderer.domElement.style.cursor = 'move'\n\t}\n}\n","function onDocumentMouseCancel(event) {\n\tcontrols.enabled = true\n\tevent.preventDefault()\n\tif (selected) {\n\t\tselected = null\n\t}\n\trenderer.domElement.style.cursor = 'auto'\n}\n\nfunction onDocumentTouchEnd(event) {\n\tcontrols.enabled = true\n\tevent.preventDefault()\n\tif (selected) {\n\t\tselected = null\n\t}\n\trenderer.domElement.style.cursor = 'auto'\n}\n","function flagger(color) {\n\tconst body = new THREE.Geometry()\n\t// Torso\n\tconst torso = new THREE.BoxGeometry(1, 1.4, 0.8)\n\ttorso.translate(0, 0.1, 0)\n\ttorso.vertices[0].z -= 0.15\n\ttorso.vertices[0].x -= 0.15\n\ttorso.vertices[1].z += 0.15\n\ttorso.vertices[1].x -= 0.15\n\ttorso.vertices[4].z += 0.15\n\ttorso.vertices[4].x += 0.15\n\ttorso.vertices[5].z -= 0.15\n\ttorso.vertices[5].x += 0.15\n\tbody.merge(torso)\n\n\t// Legs\n\tconst leftLeg = new THREE.BoxGeometry(0.5, 0.8, 0.8)\n\tleftLeg.translate(-0.25, -1, 0)\n\tleftLeg.vertices[0].x -= 0.1\n\tleftLeg.vertices[1].x -= 0.1\n\tleftLeg.vertices[2].x -= 0.3\n\tleftLeg.vertices[2].z -= 0.3\n\tleftLeg.vertices[3].x -= 0.3\n\tleftLeg.vertices[3].z += 0.3\n\tleftLeg.vertices[6].z += 0.3\n\tleftLeg.vertices[7].z -= 0.3\n\tbody.merge(leftLeg)\n\tconst rightLeg = new THREE.BoxGeometry(0.5, 0.8, 0.8)\n\trightLeg.translate(0.25, -1, 0)\n\trightLeg.vertices[4].x += 0.1\n\trightLeg.vertices[5].x += 0.1\n\trightLeg.vertices[2].z -= 0.3\n\trightLeg.vertices[3].z += 0.3\n\trightLeg.vertices[6].x += 0.3\n\trightLeg.vertices[6].z += 0.3\n\trightLeg.vertices[7].x += 0.3\n\trightLeg.vertices[7].z -= 0.3\n\tbody.merge(rightLeg)\n\n\t// Arms\n\tconst rightArm1 = new THREE.BoxGeometry(0.5, 0.4, 0.5)\n\trightArm1.translate(0.64, 0.6, 0)\n\trightArm1.vertices[0].y -= 0.1\n\trightArm1.vertices[0].z += 0.1\n\trightArm1.vertices[0].x -= 0.2\n\trightArm1.vertices[1].y -= 0.08\n\trightArm1.vertices[1].z += 0.3\n\trightArm1.vertices[1].x -= 0.1\n\trightArm1.vertices[2].z += 0.1\n\trightArm1.vertices[2].x -= 0.05\n\trightArm1.vertices[2].y += 0.1\n\trightArm1.vertices[3].y += 0.2\n\trightArm1.vertices[3].z += 0.4\n\trightArm1.vertices[3].x += 0.2\n\trightArm1.vertices[4].x -= 0.04\n\trightArm1.vertices[5].x -= 0.04\n\tbody.merge(rightArm1)\n\tconst rightArm2 = new THREE.BoxGeometry(0.5, 0.3, 0.3)\n\trightArm2.translate(1.14, 0.6, 0.3)\n\trightArm2.vertices[0].y += 0.25\n\trightArm2.vertices[0].z -= 0.1\n\trightArm2.vertices[0].x -= 0.65\n\trightArm2.vertices[1].y += 0.25\n\trightArm2.vertices[1].z += 0.05\n\trightArm2.vertices[1].x -= 0.5\n\trightArm2.vertices[2].y += 0.55\n\trightArm2.vertices[2].z -= 0.05\n\trightArm2.vertices[2].x -= 0.55\n\trightArm2.vertices[3].y += 0.55\n\trightArm2.vertices[3].z += 0.1\n\trightArm2.vertices[3].x -= 0.4\n\trightArm2.vertices[4].x -= 0.1\n\trightArm2.vertices[4].z -= 0.1\n\trightArm2.vertices[4].y -= 0.03\n\trightArm2.vertices[5].y -= 0.05\n\trightArm2.vertices[5].z -= 0.1\n\trightArm2.vertices[5].x -= 0.2\n\trightArm2.vertices[6].x += 0.2\n\trightArm2.vertices[6].y += 0.15\n\trightArm2.vertices[6].z += 0.0\n\trightArm2.vertices[7].x -= 0.05\n\trightArm2.vertices[7].z -= 0.1\n\trightArm2.vertices[7].y += 0.05\n\tbody.merge(rightArm2)\n\tconst leftArm = new THREE.BoxGeometry(1, 0.4, 0.5)\n\tleftArm.translate(-0.85, 0.6, 0)\n\tleftArm.vertices[5].y -= 0.8\n\tleftArm.vertices[5].z -= 0.1\n\tleftArm.vertices[4].y -= 0.8\n\tleftArm.vertices[4].z += 0.1\n\tleftArm.vertices[7].y -= 0.5\n\tleftArm.vertices[7].z -= 0.1\n\tleftArm.vertices[6].y -= 0.5\n\tleftArm.vertices[6].z += 0.1\n\tleftArm.vertices[3].x -= 0.04\n\tleftArm.vertices[2].x -= 0.04\n\tbody.merge(leftArm)\n\n\t// Head\n\tconst head = new THREE.SphereGeometry(0.35, 32, 32)\n\thead.translate(0, 1.3, 0)\n\tbody.merge(head)\n\n\t// Flag\n\tconst object = new THREE.Geometry()\n\tobject.vertices.push(new THREE.Vector3(0, 0.15, 0))\n\tfor (let i = 0; i <= 7; i++) {\n\t\tconst angle = (i * 2 * Math.PI / 8)\n\t\tobject.vertices.push(new THREE.Vector3(0.6 * Math.sin(angle), 0.15, 0.6 * Math.cos(angle)))\n\t}\n\tobject.vertices.push(new THREE.Vector3(0, 0, 0))\n\tfor (let i = 7; i >= 0; i--) {\n\t\tconst angle = (i * 2 * Math.PI / 8)\n\t\tobject.vertices.push(new THREE.Vector3(0.6 * Math.sin(angle), 0, 0.6 * Math.cos(angle)))\n\t}\n\tobject.faces.push(new THREE.Face3(0, 1, 2))\n\tobject.faces.push(new THREE.Face3(0, 2, 3))\n\tobject.faces.push(new THREE.Face3(0, 3, 4))\n\tobject.faces.push(new THREE.Face3(0, 4, 5))\n\tobject.faces.push(new THREE.Face3(0, 5, 6))\n\tobject.faces.push(new THREE.Face3(0, 6, 7))\n\tobject.faces.push(new THREE.Face3(0, 7, 8))\n\tobject.faces.push(new THREE.Face3(0, 8, 1))\n\tobject.faces.push(new THREE.Face3(9, 10, 11))\n\tobject.faces.push(new THREE.Face3(9, 11, 12))\n\tobject.faces.push(new THREE.Face3(9, 12, 13))\n\tobject.faces.push(new THREE.Face3(9, 13, 14))\n\tobject.faces.push(new THREE.Face3(9, 14, 15))\n\tobject.faces.push(new THREE.Face3(9, 15, 16))\n\tobject.faces.push(new THREE.Face3(9, 16, 17))\n\tobject.faces.push(new THREE.Face3(9, 17, 10))\n\tobject.faces.push(new THREE.Face3(5, 4, 14))\n\tobject.faces.push(new THREE.Face3(14, 13, 5))\n\tobject.faces.push(new THREE.Face3(4, 3, 15))\n\tobject.faces.push(new THREE.Face3(15, 14, 4))\n\tobject.faces.push(new THREE.Face3(3, 2, 16))\n\tobject.faces.push(new THREE.Face3(16, 15, 3))\n\tobject.faces.push(new THREE.Face3(2, 1, 17))\n\tobject.faces.push(new THREE.Face3(17, 16, 2))\n\tobject.faces.push(new THREE.Face3(1, 8, 10))\n\tobject.faces.push(new THREE.Face3(10, 17, 1))\n\tobject.faces.push(new THREE.Face3(8, 7, 11))\n\tobject.faces.push(new THREE.Face3(11, 10, 8))\n\tobject.faces.push(new THREE.Face3(7, 6, 12))\n\tobject.faces.push(new THREE.Face3(12, 11, 7))\n\tobject.faces.push(new THREE.Face3(6, 5, 13))\n\tobject.faces.push(new THREE.Face3(13, 12, 6))\n\tobject.computeFaceNormals()\n\tconst sign = new THREE.Mesh(object, safetyOrange)\n\tsign.position.set(-0.68, 0.9, 0.02)\n\tsign.rotation.x += 0.4\n\tsign.rotation.y += 0.6\n\tsign.rotation.z += 1.35\n\tsign.geometry.scale(0.5, 0.5, 0.5)\n\tscene.add(sign)\n\n\tconst stickG = new THREE.CylinderGeometry(0.05, 0.05, 2.4, 32)\n\tconst stick = new THREE.Mesh(stickG, gray)\n\tstick.position.set(-0.7, 0.05, 0.02)\n\tstick.geometry.scale(0.5, 0.5, 0.5)\n\tscene.add(stick)\n\n\tconst person = new THREE.Mesh(body, color)\n\tperson.position.set(0, 1.2, -1)\n\tperson.rotation.y -= 1\n\tperson.geometry.scale(0.5, 0.5, 0.5)\n\tperson.add(sign)\n\tperson.add(stick)\n\n\tconst shadowPersonGeometry = new THREE.Geometry()\n\tconst shadowPersonClone = body.clone()\n\tshadowPersonGeometry.merge(shadowPersonClone)\n\tconst stickClone = stickG.clone()\n\tstickClone.translate(-0.7, 0.05, 0.02)\n\tshadowPersonGeometry.merge(stickClone)\n\tconst shadowPerson = new THREE.Mesh(shadowPersonGeometry, shadows)\n\tshadowPerson.receiveShadow = true\n\tconst signClone = new THREE.Mesh(object, shadows)\n\tsignClone.position.set(-0.68, 0.9, 0.02)\n\tsignClone.rotation.x += 0.4\n\tsignClone.rotation.y += 0.6\n\tsignClone.rotation.z += 1.35\n\tshadowPerson.add(signClone)\n\tperson.add(shadowPerson)\n\n\tscene.add(person)\n\tflaggers.push(person)\n\n\tconst person2 = person.clone(true)\n\tperson2.position.set(1, 1.2, -1)\n\tscene.add(person2)\n\tflaggers.push(person2)\n}\n","const signs = [[], [], [], [], [], [], []]\n\nfunction signArray(group, checkbox) {\n\tconst idx = signs[group].indexOf(checkbox.value)\n\n\tif (idx !== -1) {\t\t\t\t \t\t\t\t\t\t\t\t// If already in array\n\t\tsigns[group].splice(idx, 1) \t\t\t\t\t// Make sure we remove it\n\t}\n\n\tif (checkbox.checked) {\t\t\t\t\t\t\t\t\t// If checked\n\t\tsigns[group].unshift(checkbox.value)\t// Add to end of array\n\t}\n}\n\nfunction signSpace(color, group, start) {\n\tconst signGrouped = new THREE.Group()\n\tconst spacing = Number(document.getElementById('sign-' + group).value) / 200\n\n\t// Get Signs\n\n\tconst signImages = signs[group]\n\tlet sign1\n\tlet pos = start - spacing\n\tfor (let i = 0; i < signImages.length && pos >= -22; i++) {\n\t\t// Image\n\n\t\tconst signBase = new THREE.CylinderGeometry(0.8, 0.8, 0.1, 4)\n\t\tsignBase.rotateX(1.5)\n\t\tsignBase.rotateZ(1.6)\n\n\t\tswitch (signImages[i]) {\n\t\t\tcase 'worker':\n\t\t\t\tsign1 = new THREE.Mesh(signBase, [safetyOrange, workerSignMaterial, safetyOrange])\n\t\t\t\tbreak\n\t\t\tcase 'flagger':\n\t\t\t\tsign1 = new THREE.Mesh(signBase, [safetyOrange, flaggerSignMaterial, safetyOrange])\n\t\t\t\tbreak\n\t\t\tcase 'fAhead':\n\t\t\t\tsign1 = new THREE.Mesh(signBase, [safetyOrange, flagAheadSignMaterial, safetyOrange])\n\t\t\t\tbreak\n\t\t\tcase 'men':\n\t\t\t\tsign1 = new THREE.Mesh(signBase, [safetyOrange, menWorkSignMaterial, safetyOrange])\n\t\t\t\tbreak\n\t\t\tcase 'stop':\n\t\t\t\tsign1 = new THREE.Mesh(signBase, [safetyOrange, prepareStopSignMaterial, safetyOrange])\n\t\t\t\tbreak\n\t\t\tcase 'lane':\n\t\t\t\tsign1 = new THREE.Mesh(signBase, [safetyOrange, oneLaneSignMaterial, safetyOrange])\n\t\t\t\tbreak\n\t\t\tdefault:\n\t\t\t\tsign1 = new THREE.Mesh(signBase, [safetyOrange, workAheadSignMaterial, safetyOrange])\n\t\t\t\tbreak\n\t\t}\n\n\t\tsign1.position.set(pos, 3, (4 + (group * 0.5)))\n\t\tsignGrouped.add(sign1)\n\n\t\t// Group Color Backing\n\n\t\tconst signColor = new THREE.CylinderGeometry(1, 1, 0.1, 4)\n\t\tsignColor.rotateX(1.5)\n\t\tsignColor.rotateZ(1.6)\n\t\tconst signColorBack = new THREE.Mesh(signColor, color)\n\t\tsignColorBack.position.set((pos + 0.01), 3, (4 + (group * 0.5)))\n\t\tsignGrouped.add(signColorBack)\n\n\t\t// Stick\n\n\t\tconst stick = new THREE.CylinderGeometry(0.05, 0.05, 2, 32)\n\t\tconst signStick = new THREE.Mesh(stick, color)\n\t\tsignStick.position.set((pos + 0.01), 1.2, (4 + (group * 0.5)))\n\t\tsignGrouped.add(signStick)\n\t\tconsole.log((4 + (group / 0.5)))\n\t\t// Position and Add to Scene\n\t\tpos -= 2\n\t}\n\n\tsignGrouped.name = 'signGroup-' + group\n\tscene.add(signGrouped)\n}\n","function test(group, color) {\n\t// Remove old render if it exists\n\tif (scene.getObjectByName(group)) {\n\t\tscene.remove(scene.getObjectByName(group))\n\t}\n\n\tif (scene.getObjectByName('signGroup-' + group)) {\n\t\tscene.remove(scene.getObjectByName('signGroup-' + group))\n\t}\n\tconst coneCore = new THREE.Mesh(coneGeometry, color)\n\tconst shadowCone = new THREE.Mesh(coneGeometry, shadows)\n\tshadowCone.scale.set(1.05, 1.05, 1.05)\n\tconeCore.castShadow = true\n\tconst cone = new THREE.Group()\n\tconst newStripe = stripe.clone()\n\tcone.add(coneCore)\n\tcone.add(newStripe)\n\tlet initialX\n\tconst coneGroup = new THREE.Group()\n\tconst shadowGroup = new THREE.Group()\n\n/* Buffer */\n\n\tswitch (group) {\n\t\tcase 1:\n\t\t\tinitialX = 0\n\t\t\tbreak\n\t\tcase 2:\n\t\t\tinitialX = -0.5\n\t\t\tbreak\n\t\tcase 3:\n\t\t\tinitialX = -1.5\n\t\t\tbreak\n\t\tcase 4:\n\t\t\tinitialX = -2\n\t\t\tbreak\n\t\tcase 5:\n\t\t\tinitialX = -2.5\n\t\t\tbreak\n\t\tcase 6:\n\t\t\tinitialX = -3\n\t\t\tbreak\n\t\tdefault:\n\t\t\tbreak\n\t}\n\tconst buffer = Number(document.getElementById('buffer-' + group).value)\n\tcone.position.set(initialX, 0.75, 0.5)\n\tconeGroup.add(cone)\n\tshadowCone.position.set(initialX, 0.75, 0.5)\n\tshadowGroup.add(shadowCone)\n\tlet x = initialX\n\tlet cones = 1 + (buffer / 100)\n\tlet spacing = (buffer / 50) / cones\n\n\twhile (Math.abs(x - spacing) <= (Math.abs((buffer / 50)) - initialX) && Math.abs(x) <= 23) {\n\t\tconst newCone = cone.clone()\n\t\tconst newShadowCone = shadowCone.clone()\n\t\tnewShadowCone.position.set(x, 0.75, 0.5)\n\t\tshadowGroup.add(newShadowCone)\n\t\tx -= spacing\n\t\tnewCone.position.set(x, 0.75, 0.5)\n\t\tconeGroup.add(newCone)\n\t}\n\n/* Transition Taper */\n\n\tconst upstream = Number(document.getElementById('upstream-' + group).value)\n\tcones = 2 + (upstream / 100)\n\tspacing = (upstream / 50) / cones\n\tlet y = (3 / cones) + 0.5\n\tfor (let i = 1; i <= cones; i++) {\n\t\tconst newCone = cone.clone()\n\t\tx -= spacing\n\t\tnewCone.position.set(x, 0.75, y)\n\t\tconst newShadowCone = shadowCone.clone()\n\t\tnewShadowCone.position.set(x, 0.75, y)\n\t\tshadowGroup.add(newShadowCone)\n\t\ty += 3 / cones\n\t\tconeGroup.add(newCone)\n\t}\n\n/* Sign Spacing */\n\tsignSpace(color, group, x)\n\n/* Downstream Taper */\n\n\tswitch (group) {\n\t\tcase 1:\n\t\t\tinitialX = 10\n\t\t\tbreak\n\t\tcase 2:\n\t\t\tinitialX = 10.5\n\t\t\tbreak\n\t\tcase 3:\n\t\t\tinitialX = 11\n\t\t\tbreak\n\t\tcase 4:\n\t\t\tinitialX = 11.5\n\t\t\tbreak\n\t\tcase 5:\n\t\t\tinitialX = 12\n\t\t\tbreak\n\t\tcase 6:\n\t\t\tinitialX = 12.5\n\t\t\tbreak\n\t\tdefault:\n\t\t\tbreak\n\t}\n\tconst downstream = Number(document.getElementById('downstream-' + group).value)\n\tx = initialX\n\tcones = 2 + (downstream / 100)\n\tspacing = (downstream / 50) / cones\n\ty = 0.5\n\twhile (Math.abs(x) <= ((downstream / 50) + initialX) && Math.abs(x) <= 21.5) {\n\t\tconst newCone = cone.clone()\n\t\tnewCone.position.set(x, 0.75, y)\n\t\tconst newShadowCone = shadowCone.clone()\n\t\tnewShadowCone.position.set(x, 0.75, y)\n\t\tshadowGroup.add(newShadowCone)\n\t\ty += 3 / cones\n\t\tx += spacing\n\t\tconeGroup.add(newCone)\n\t}\n\n/* Give Group A Name and Add To Scene */\n\tconeGroup.name = group\n\tshadowGroup.name = group\n\tscene.add(coneGroup)\n\tscene.add(shadowGroup)\n\n/* Close Sidebar */\n\tslide('group-' + group)\n\tflagger(color)\n}\n"]}