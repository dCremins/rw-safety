{"version":3,"sources":["materials.js","init.js","road.js","trees.js","shop.js","apartments.js","bench.js","backhoe.js","truck.js","workers.js","render.js"],"names":[],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACnFA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AC3DA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AChEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AChhatjWA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"../main.js","sourcesContent":["/* Variables */\nvar scene, camera, controls, renderer, ambient, sun, raycaster\nvar objects = []\nvar flaggers = []\n\nraycaster = new THREE.Raycaster()\nvar mouse = new THREE.Vector2()\nvar offset = new THREE.Vector3()\nvar intersection = new THREE.Vector3()\nvar selected = null, hovered = null\n// Scenery\nvar road = new THREE.MeshLambertMaterial({ color: 0x87836E })\nvar lines = new THREE.LineBasicMaterial({ color: 0xFFFFFF })\nvar divider = new THREE.MeshLambertMaterial({ color: 0xFFFF86 })\nvar grass = new THREE.MeshLambertMaterial({ color: 0x77c997 })\nvar treeTall = new THREE.MeshLambertMaterial({ color: 0x62c192})\nvar treeShort = new THREE.MeshLambertMaterial({ color: 0x78c9a1 })\nvar shadows = new THREE.ShadowMaterial({ opacity: .3  })\nvar windowColor = new THREE.MeshLambertMaterial({ color: 0xD0DDE3, transparent: true, opacity: .5 })\nvar indoorColor = new THREE.MeshBasicMaterial({ color: 0xD0DDE3})\nvar brick = new THREE.MeshLambertMaterial({ color: 0xaa5050 })\nvar stone = new THREE.MeshLambertMaterial({ color: 0xe5d2a9 })\nvar truckMaterial = new THREE.MeshLambertMaterial({ color: 0xef8547 })\nvar foundation = new THREE.MeshLambertMaterial({ color: 0xF4EEEF })\nvar awningRed = new THREE.MeshLambertMaterial({ color: 0xbad3d8 })\nvar molding = new THREE.MeshLambertMaterial({ color: 0xbad3d8 })\nvar couchFabric = new THREE.MeshLambertMaterial({ color: 0x638464 })\nvar blueFabric = new THREE.MeshLambertMaterial({ color: 0x5e7e9b })\nvar purpleFabric = new THREE.MeshLambertMaterial({ color: 0x805c8e})\nvar tanFabric = new THREE.MeshLambertMaterial({ color: 0xe8c1a0 })\n// Skin\nvar skinTone1 = new THREE.MeshLambertMaterial({ color: 0x8d5524 }) // Brown\nvar skinTone2 = new THREE.MeshLambertMaterial({ color: 0xc68642 }) // Light Brown\nvar skinTone3 = new THREE.MeshLambertMaterial({ color: 0xf1c27d }) // Tan\nvar skinTone4 = new THREE.MeshLambertMaterial({ color: 0xffdbac }) // Pale\n\n// Colors\nvar red = new THREE.MeshLambertMaterial({ color: 0xF87676})\nvar green = new THREE.MeshLambertMaterial({ color: 0x78C789 })\nvar blue = new THREE.MeshLambertMaterial({ color: 0x22B8E2 })\nvar orange = new THREE.MeshLambertMaterial({ color: 0xF6B331 })\nvar safetyOrange = new THREE.MeshLambertMaterial({ color: 0xFF7900})\nvar yellow = new THREE.MeshLambertMaterial({ color: 0xFDDB4C })\nvar purple = new THREE.MeshLambertMaterial({ color: 0xB78DD1 })\nvar white = new THREE.MeshLambertMaterial({ color: 0xffffff })\nvar offwhite = new THREE.MeshLambertMaterial({ color: 0xf2f2f2 })\nvar gray = new THREE.MeshLambertMaterial({ color: 0x555555 })\nvar palegray = new THREE.MeshLambertMaterial({ color: 0xa5a5a5 })\nvar jean = new THREE.MeshLambertMaterial({ color: 0x416bad })\n// Signs\nvar workerSign = new THREE.TextureLoader().load( \"includes/images/sign-01.png\" )\nvar workerSignMaterial = new THREE.MeshBasicMaterial( { map: workerSign } )\nvar flaggerSign = new THREE.TextureLoader().load( \"includes/images/sign-02.png\" )\nvar flaggerSignMaterial = new THREE.MeshBasicMaterial( { map: flaggerSign } )\nvar flagAheadSign = new THREE.TextureLoader().load( \"includes/images/sign-03.png\" )\nvar flagAheadSignMaterial = new THREE.MeshBasicMaterial( { map: flagAheadSign } )\nvar menWorkSign = new THREE.TextureLoader().load( \"includes/images/sign-04.png\" )\nvar menWorkSignMaterial = new THREE.MeshBasicMaterial( { map: menWorkSign } )\nvar prepareStopSign = new THREE.TextureLoader().load( \"includes/images/sign-05.png\" )\nvar prepareStopSignMaterial = new THREE.MeshBasicMaterial( { map: prepareStopSign } )\nvar oneLaneSign = new THREE.TextureLoader().load( \"includes/images/sign-06.png\" )\nvar oneLaneSignMaterial = new THREE.MeshBasicMaterial( { map: oneLaneSign } )\nvar workAheadSign = new THREE.TextureLoader().load( \"includes/images/sign-07.png\" )\nvar workAheadSignMaterial = new THREE.MeshBasicMaterial( { map: workAheadSign } )\n// Geometry\nvar tallTree = new THREE.Geometry()\nvar tallCone = new THREE.ConeGeometry( 1.68, 4, 32 )\ntallCone.translate(0, 1.35, 0)\ntallTree.merge(tallCone)\nvar tallSphere = new THREE.SphereGeometry( 1.8, 60, 60)\ntallSphere.translate(0, -1.3, 0)\ntallTree.merge(tallSphere)\nvar shortTree = tallTree.clone()\nshortTree.scale(.5, .5, .5)\n/* Cone */\nvar coreGeometry = new THREE.CylinderGeometry(.07, .2, .5, 32, .8, false, .8)\nvar coneBottomG = new THREE.BoxGeometry( .5, .06, .5 )\nconeBottomG.translate(0, -.23, 0)\nvar coneGeometry = new THREE.Geometry()\nconeGeometry.merge(coreGeometry)\nconeGeometry.merge(coneBottomG)\nvar stripeGeometry = new THREE.CylinderGeometry(.116, .155, .15, 32, 1, false, .8)\nvar stripe = new THREE.Mesh( stripeGeometry, white )\n","function init() {\n\tscene = new THREE.Scene()\n\t// Scenery\n\tinitRoad()\n\tinitTrees()\n\tinitShop()\n\tinitApartment()\n\tinitBench()\n\t//initBackHoe()\n\tinitTruck()\n\tinitWorkers()\n\t// Mechanics\n\tinitCamera()\n\tinitLights()\n\tinitRender()\n  return\n}\n\nfunction initCamera() {\n\tcamera = new THREE.PerspectiveCamera( 60, ((window.innerWidth-100) / (window.innerHeight-50)), 1, 100 )\n\tcamera.position.set(0, 23, 20)\n\tcamera.lookAt( 0, 0, 0 )\n}\n\nfunction initLights() {\n\t\tambient = new THREE.HemisphereLight(0xdeeef2,0x665c6d, 1.2)\n\t\tsun = new THREE.SpotLight(0xfcdc74, .2)\n\t\tsun.position.set(-50, 40, -5)\n\t\tsun.castShadow = true\n\t\tsun.shadow.camera.left = -10\n\t\tsun.shadow.camera.right = 10\n\t\tsun.shadow.camera.top = 10\n\t\tsun.shadow.camera.bottom = -10\n\t\tsun.shadow.camera.near = .1\n\t\tsun.shadow.camera.far = 1000\n\t\tsun.shadow.mapSize.width = 2048\n\t\tsun.shadow.mapSize.height = 2048\n\t\tscene.add(ambient)\n\t\tscene.add(sun)\n}\n\nfunction initRender() {\n\trenderer = new THREE.WebGLRenderer({antialias: true})\n\trenderer.setSize( window.innerWidth-100, (window.innerHeight-55) )\n\trenderer.setClearColor( 0xffffff, 1 )\n\trenderer.shadowMap.enabled = true\n\trenderer.shadowMap.type = THREE.PCFSoftShadowMap\n\tvar container = document.getElementById('container')\n\tcontainer.appendChild( renderer.domElement )\n\tcontrols = new THREE.OrbitControls( camera, renderer.domElement )\n/*\n\tcontainer.addEventListener( 'mousemove', onDocumentMouseMove, false )\n\tcontainer.addEventListener( 'mouseup', onDocumentMouseCancel, false )\n\tcontainer.addEventListener( 'mousedown', onDocumentMouseDown, false )\n\tcontainer.addEventListener( 'touchmove', onDocumentTouchMove, false )\n\tcontainer.addEventListener( 'touchstart', onDocumentTouchStart, false )\n\tcontainer.addEventListener( 'touchend', onDocumentTouchEnd, false )\n*/\n}\n","function initRoad()  {\n\n\tlet topGeometry = new THREE.BoxGeometry( 45, 1, 10 )\n\tlet grassTop = new THREE.Mesh( topGeometry, grass )\n\tgrassTop.position.set(0, 0, -9)\n\tscene.add( grassTop )\n\n\tlet roadGeometry = new THREE.BoxGeometry( 45, 1, 8 )\n\tlet roadMesh = new THREE.Mesh( roadGeometry, road )\n\troadMesh.position.set(0, 0, 0)\n\tscene.add( roadMesh )\n\n\tlet lineGeometry = new THREE.Geometry()\n\tlineGeometry.vertices.push(\n\t\tnew THREE.Vector3(-22.5, .51, -3.7),\n\t\tnew THREE.Vector3(22.5, .51, -3.7)\n\t)\n\tlet topLine = new THREE.Line(lineGeometry, lines)\n\tscene.add(topLine)\n\n\tlineGeometry = new THREE.Geometry()\n\tlineGeometry.vertices.push(\n\t\tnew THREE.Vector3(-22.5, .51, 3.7),\n\t\tnew THREE.Vector3(22.5, .51, 3.7)\n\t)\n\tlet bottomLine = new THREE.Line(lineGeometry, lines)\n\tscene.add(bottomLine)\n\n\tlet bottomGeometry = new THREE.BoxGeometry( 45, 1, 7 )\n\tlet grassBottom = new THREE.Mesh( bottomGeometry, grass )\n\tgrassBottom.position.set(0, 0, 7.5)\n\tscene.add( grassBottom )\n\n\tlet dividerGeometry = new THREE.BoxGeometry( 1, .1, .2 )\n\tlet yellowLines = new THREE.Mesh( dividerGeometry, divider )\n\tyellowLines.position.set(0, .5, 0)\n\tscene.add( yellowLines )\n\tfor (let i = 22; i>-23; i-=2) {\n\t\tlet newyellowLines = yellowLines.clone()\n\t\tnewyellowLines.position.set(i, .5, 0)\n\t\tscene.add( newyellowLines )\n\t}\n  let shadowGeometry = new THREE.BoxGeometry( 45, 1, 25 )\n  let floorShadows = new THREE.Mesh( shadowGeometry, shadows )\n  floorShadows.position.set(0, .05, -1.5)\n  //floorShadows.rotateX(-1.572)\n  floorShadows.receiveShadow = true\n  scene.add( floorShadows )\n  objects.push(floorShadows)\n\n  let coneCore = new THREE.Mesh( coneGeometry, gray )\n\t//coneCore.receiveShadow = true\n\tconeCore.castShadow = true\n\tlet cone = new THREE.Group()\n\tcone.add(coneCore)\n\tcone.add(stripe)\n\tcone.position.set(0, .75, .5)\n\tscene.add(cone)\n\tfor (let i = 1.5; i<10; i+=1.5) {\n\t\tlet newCone = cone.clone()\n\t\tnewCone.position.set(i, .75, .5)\n\t\tscene.add(newCone)\n\t}\n}\n","function initTrees() {\n\t// Geometry\n\tvar trees = new THREE.Geometry()\n\tvar tallTree = new THREE.Geometry()\n\tvar tallCone = new THREE.ConeGeometry( 1.68, 4, 32 )\n\ttallCone.translate(0, 1.35, 0)\n\ttallTree.merge(tallCone)\n\tvar tallSphere = new THREE.SphereGeometry( 1.8, 60, 60)\n\ttallSphere.translate(0, -1.3, 0)\n\ttallTree.merge(tallSphere)\n\n\ttallTree.translate(-18, 3, -10.5)\n\ttrees.merge(tallTree)\n\ttallTree.translate(7, 0, 18.5)\n\ttrees.merge(tallTree)\n\n\tvar shortTree = tallTree.clone()\n\tshortTree.scale(.5, .5, .5)\n\tshortTree.translate(0, .2, -12)\n\ttrees.merge(shortTree)\n\tshortTree.translate(17.5, 0, 14)\n\ttrees.merge(shortTree)\n\tshortTree.translate(4.5, 0, -16.5)\n\ttrees.merge(shortTree)\n\n\tvar allTrees = new THREE.Mesh(trees, treeTall)\n\tallTrees.castShadow = true\n\tscene.add( allTrees )\n\tvar treeShadows = new THREE.Mesh(trees, shadows)\n\ttreeShadows.receiveShadow = true\n\tscene.add( treeShadows )\n}\n","function initShop()  {\n\n  var shop = new THREE.Group()\n  var shopBase = new THREE.Geometry()\n  var shopShadowGeometry = new THREE.Geometry()\n\n// Foundation\n  var bottom = new THREE.BoxGeometry(10, 1, 5)\n  shopBase.merge(bottom)\n  var bottomStair = new THREE.BoxGeometry(2, .5, .5)\n  bottomStair.translate(0, .25, 2.75)\n  shopBase.merge(bottomStair)\n  var topStair = new THREE.BoxGeometry(2, .5, 1)\n  topStair.translate(0, -.25, 3)\n  shopBase.merge(topStair)\n  var shopBaseShadow = shopBase.clone()\n  shopShadowGeometry.merge(shopBaseShadow)\n  var building = new THREE.Mesh(shopBase, foundation)\n\tbuilding.castShadow = true\n  shop.add(building)\n\n// Building\n  var glass = new THREE.BoxGeometry(9.75, 4.9, .125)\n  glass.translate(0, 3, 2.4)\n  var windows = new THREE.Mesh(glass, windowColor)\n  shop.add(windows)\n\n  var shopCore = new THREE.Geometry()\n  var bottomFront = new THREE.BoxGeometry(4, 1, .75)\n  bottomFront.translate(-3, 1, 2.125)\n  shopCore.merge(bottomFront)\n  bottomFront.translate(6, 0, 0)\n  shopCore.merge(bottomFront)\n  var topFront = new THREE.BoxGeometry(10, 2, .75)\n  topFront.translate(0, 5, 2.12)\n  shopCore.merge(topFront)\n  var sides = new THREE.BoxGeometry(1, 5.5, 3.25)\n  sides.translate(-4.5, 3.25, .126)\n  shopCore.merge(sides)\n  sides.translate(9, 0, 0)\n  shopCore.merge(sides)\n  var inner = new THREE.BoxGeometry(1, 2.5, .5)\n  inner.translate(-1.5, 2.75, 2.25)\n  shopCore.merge(inner)\n  inner.translate(3, 0, 0)\n  shopCore.merge(inner)\n  var center = new THREE.BoxGeometry(10, 5.5, 1)\n  center.translate(0, 3.25, -2)\n  shopCore.merge(center)\n  var top = new THREE.BoxGeometry(8, 1, 3.25)\n  top.translate(0, 5.5, .125)\n  shopCore.merge(top)\n  var coreShopShadow = shopCore.clone()\n  shopShadowGeometry.merge(coreShopShadow)\n  var building = new THREE.Mesh(shopCore, stone)\n\tbuilding.castShadow = true\n  shop.add(building)\n\n// Insides\n\n  var insideShadowGeometry = new THREE.Geometry()\n\n  var counter = new THREE.BoxGeometry(3, 1.5, 1)\n  counter.translate(0, 1.25, 0)\n  var coreCountersShadow = counter.clone()\n  insideShadowGeometry.merge(coreCountersShadow)\n  var Counters = new THREE.Mesh(counter, stone)\n  shop.add(Counters)\n\n  var shelf = new THREE.BoxGeometry(.5, .1, 3)\n  shelf.translate(3.75, 2, 0)\n  var shelf2 = new THREE.BoxGeometry(.5, .1, 3)\n  shelf2.translate(3.75, 3, 0)\n  shelf.merge(shelf2)\n  shelf2.translate(0, 1, 0)\n  shelf.merge(shelf2)\n  shelf2.translate(-7.5, 0, 0)\n  shelf.merge(shelf2)\n  shelf2.translate(0, -1, 0)\n  shelf.merge(shelf2)\n  shelf2.translate(0, -1, 0)\n  shelf.merge(shelf2)\n  var coreShelvesShadow = shelf.clone()\n  insideShadowGeometry.merge(coreShelvesShadow)\n  var shelves = new THREE.Mesh(shelf, stone)\n  shop.add(shelves)\n\n  var book1 = new THREE.BoxGeometry(.7, .75, .2)\n  book1.translate(3.75, 3.45, 0)\n  var book2 = new THREE.BoxGeometry(.7, .75, .2)\n  book2.translate(3.75, 3.45, 1)\n  book1.merge(book2)\n  book2.translate(0, 1, -1.5)\n  book1.merge(book2)\n  book2.translate(0, -2, -.5)\n  book1.merge(book2)\n  book2.translate(0, 0, .75)\n  book1.merge(book2)\n  book2.translate(0, 0, 1)\n  book1.merge(book2)\n  book2.translate(-7.5, 0, 0)\n  book1.merge(book2)\n  book2.translate(0, 0, -1.5)\n  book1.merge(book2)\n  book2.translate(0, 1, .5)\n  book1.merge(book2)\n  book2.translate(0, 0, .75)\n  book1.merge(book2)\n  book2.translate(0, 1, .25)\n  book1.merge(book2)\n  book2.translate(0, 0, -.75)\n  book1.merge(book2)\n  book2.translate(0, 0, -.5)\n  book1.merge(book2)\n  var book7 = new THREE.BoxGeometry(.7, .75, .2)\n  book7.translate(-3.5, 1.87, 2.25)\n  book1.merge(book7)\n  var coreRedShadow = book1.clone()\n  insideShadowGeometry.merge(coreRedShadow)\n  var redBooks = new THREE.Mesh(book1, red)\n  redBooks.castShadow = true\n  shop.add(redBooks)\n\n  var books2 = new THREE.Geometry()\n  var book3 = new THREE.BoxGeometry(.7, .75, .2)\n  book3.translate(3.75, 3.45, 1.2)\n  books2.merge(book3)\n  book3.translate(0, 1, -1.5)\n  books2.merge(book3)\n  book3.translate(0, -2, -.5)\n  books2.merge(book3)\n  book3.translate(0, 0, .75)\n  books2.merge(book3)\n  book3.translate(0, 0, 1)\n  books2.merge(book3)\n  book3.translate(-7.5, 0, 0)\n  books2.merge(book3)\n  book3.translate(0, 0, -1.5)\n  books2.merge(book3)\n  book3.translate(0, 1, .5)\n  books2.merge(book3)\n  book3.translate(0, 0, .75)\n  books2.merge(book3)\n  book3.translate(0, 1, .25)\n  books2.merge(book3)\n  book3.translate(0, 0, -.75)\n  books2.merge(book3)\n  book3.translate(0, 0, -.5)\n  books2.merge(book3)\n  var book8 = new THREE.BoxGeometry(.7, .75, .2)\n  book8.translate(-2.5, 1.87, 2.25)\n  books2.merge(book8)\n  var coreBlueShadow = books2.clone()\n  insideShadowGeometry.merge(coreBlueShadow)\n  var blueBooks = new THREE.Mesh(books2, blue)\n  blueBooks.castShadow = true\n  shop.add(blueBooks)\n\n  var books3 = new THREE.Geometry()\n  var book4 = new THREE.BoxGeometry(.7, .75, .2)\n  book4.translate(3.75, 3.45, 1.4)\n  books3.merge(book4)\n  book4.translate(0, 1, -1.5)\n  books3.merge(book4)\n  book4.translate(0, -2, -.5)\n  books3.merge(book4)\n  book4.translate(0, 0, .75)\n  books3.merge(book4)\n  book4.translate(0, 0, 1)\n  books3.merge(book4)\n  book4.translate(-7.5, 0, 0)\n  books3.merge(book4)\n  book4.translate(0, 0, -1.5)\n  books3.merge(book4)\n  book4.translate(0, 1, .5)\n  books3.merge(book4)\n  book4.translate(0, 0, .75)\n  books3.merge(book4)\n  book4.translate(0, 1, .25)\n  books3.merge(book4)\n  book4.translate(0, 0, -.75)\n  books3.merge(book4)\n  book4.translate(0, 0, -1.5)\n  books3.merge(book4)\n  book4.translate(7.5, 0, 2)\n  books3.merge(book4)\n  book4.translate(0, -1, -1.75)\n  books3.merge(book4)\n  var corePurpleShadow = books3.clone()\n  insideShadowGeometry.merge(corePurpleShadow)\n  var purpleBooks = new THREE.Mesh(books3, purple)\n  purpleBooks.castShadow = true\n  shop.add(purpleBooks)\n\n  var books4 = new THREE.Geometry()\n  var book5 = new THREE.BoxGeometry(.7, .75, .2)\n  book5.translate(3.75, 3.45, .6)\n  books4.merge(book5)\n  book5.translate(0, 0, -1)\n  books4.merge(book5)\n  book5.translate(0, 1, -.75)\n  books4.merge(book5)\n  book5.translate(0, 0, 1.5)\n  books4.merge(book5)\n  book5.translate(0, 0, .75)\n  books4.merge(book5)\n  book5.translate(-7.5, -1, -1.75)\n  books4.merge(book5)\n  book5.translate(0, -1, -.5)\n  books4.merge(book5)\n  book5.translate(0, 0, 1.5)\n  books4.merge(book5)\n  var book6 = new THREE.BoxGeometry(.7, .75, .2)\n  book6.translate(3.5, 1.87, 2.25)\n  books4.merge(book6)\n  var coreOrangeShadow = books4.clone()\n  insideShadowGeometry.merge(coreOrangeShadow)\n  var orangeBooks = new THREE.Mesh(books4, orange)\n  orangeBooks.castShadow = true\n  shop.add(orangeBooks)\n  var shopInsideShadow = new THREE.Mesh(insideShadowGeometry, shadows)\n  shopInsideShadow.receiveShadow = true\n  shop.add(shopInsideShadow)\n\n// Awning\n  // White Stripes\n  var awningA = new THREE.Geometry()\n  var aA1 = new THREE.BoxGeometry(1.1, 1.25, 2)\n  aA1.translate(-4.4, 5.25, 3.5)\n  aA1.vertices[0].y-=.9;\n  aA1.vertices[5].y-=.9;\n  awningA.merge(aA1)\n  aA1.translate(2.2, 0, 0)\n  awningA.merge(aA1)\n  aA1.translate(2.2, 0, 0)\n  awningA.merge(aA1)\n  aA1.translate(2.2, 0, 0)\n  awningA.merge(aA1)\n  aA1.translate(2.2, 0, 0)\n  awningA.merge(aA1)\n  var aShadow = awningA.clone()\n  shopShadowGeometry.merge(aShadow)\n  var As = new THREE.Mesh(awningA, offwhite)\n  As.castShadow = true\n  // Red Stripes\n  var awningB = new THREE.Geometry()\n  var aB1 = new THREE.BoxGeometry(1.1, 1.25, 2)\n  aB1.translate(-3.3, 5.25, 3.5)\n  aB1.vertices[0].y-=.9;\n  aB1.vertices[5].y-=.9;\n  awningB.merge(aB1)\n  aB1.translate(2.2, 0, 0)\n  awningB.merge(aB1)\n  aB1.translate(2.2, 0, 0)\n  awningB.merge(aB1)\n  aB1.translate(2.2, 0, 0)\n  awningB.merge(aB1)\n  var bShadow = awningB.clone()\n  shopShadowGeometry.merge(bShadow)\n  var Bs = new THREE.Mesh(awningB, blue)\n  Bs.castShadow = true\n  shop.add(As)\n  shop.add(Bs)\n  var shopShadow = new THREE.Mesh(shopShadowGeometry, shadows)\n  shopShadow.receiveShadow = true\n  shop.add(shopShadow)\n\n// Add To Scene\n  shop.position.set(8, 1, -8) // 8, -9\n  scene.add(shop)\n\n}\n","function initApartment() {\n\n  var office = new THREE.Group()\n  var officeShadows = new THREE.Geometry()\n\n  // Foundation\n  var found = new THREE.BoxGeometry(8, .5, 8)\n  var step = new THREE.BoxGeometry(8.25, .25, 8.25)\n  step.translate(0, -.125, 0)\n  found.merge(step)\n  var foundShadow = found.clone(true)\n  officeShadows.merge(found)\n  var buildingFound = new THREE.Mesh(found, foundation)\n  buildingFound.castShadow = true\n  office.add(buildingFound)\n\n  // Outside Walls\n  var base = new THREE.Geometry()\n  var left = new THREE.BoxGeometry(.5, 10, 1)\n  left.translate(-3.5, 5.25, 3.25)\n\tbase.merge(left)\n  left.translate(0, 0, -2.125)\n\tbase.merge(left)\n  left.translate(0, 0, -2.125)\n\tbase.merge(left)\n  left.translate(0, 0, -2.125)\n\tbase.merge(left)\n  left.translate(7, 0, 0)\n\tbase.merge(left)\n  left.translate(0, 0, 2.125)\n\tbase.merge(left)\n  left.translate(0, 0, 2.125)\n\tbase.merge(left)\n  left.translate(0, 0, 2.125)\n\tbase.merge(left)\n  var back = new THREE.BoxGeometry(1, 10, .5)\n  back.translate(-1.5, 5.25, -3.375)\n\tbase.merge(back)\n  back.translate(3, 0, 0)\n\tbase.merge(back)\n  back.translate(0, 0, 6.875)\n\tbase.merge(back)\n  back.translate(-3, 0, 0)\n\tbase.merge(back)\n  var backSide = new THREE.BoxGeometry(1.25, 3.5, .5)\n  backSide.translate(-2.625, 2, 3.5)\n\tbase.merge(backSide)\n  backSide.translate(5.25, 0, 0)\n\tbase.merge(backSide)\n  backSide.translate(0, 0, -6.875)\n\tbase.merge(backSide)\n  backSide.translate(-5.25, 0, 0)\n\tbase.merge(backSide)\n  var front = new THREE.BoxGeometry(1.25, 1.75, .5)\n  front.translate(-2.625, 6.25, 3.5)\n\tbase.merge(front)\n  front.translate(0, 3.125, 0)\n\tbase.merge(front)\n  front.translate(5.25, 0, 0)\n\tbase.merge(front)\n  front.translate(0, -3.125, 0)\n\tbase.merge(front)\n  front.translate(0, 0, -6.875)\n\tbase.merge(front)\n  front.translate(0, 3.125, 0)\n\tbase.merge(front)\n  front.translate(-5.25, 0, 0)\n\tbase.merge(front)\n  front.translate(0, -3.125, 0)\n\tbase.merge(front)\n  var front = new THREE.BoxGeometry(2, 7.5, .5)\n  front.translate(0, 6.5, 3.5)\n\tbase.merge(front)\n  var front = new THREE.BoxGeometry(2, 10, .5)\n  front.translate(0, 5.25, -3.375)\n\tbase.merge(front)\n  var side = new THREE.BoxGeometry(.5, 3.5, 1.15)\n  side.translate(-3.5, 2, 2.19)\n\tbase.merge(side)\n  side.translate(0, 0, -2.125)\n\tbase.merge(side)\n  side.translate(0, 0, -2.125)\n\tbase.merge(side)\n  side.translate(7, 0, 0)\n\tbase.merge(side)\n  side.translate(0, 0, 2.125)\n\tbase.merge(side)\n  side.translate(0, 0, 2.125)\n\tbase.merge(side)\n  var side = new THREE.BoxGeometry(.5, 1.75, 1.15)\n  side.translate(-3.5, 6.25, 2.19)\n\tbase.merge(side)\n  side.translate(0, 0, -2.125)\n\tbase.merge(side)\n  side.translate(0, 0, -2.125)\n\tbase.merge(side)\n  side.translate(7, 0, 0)\n\tbase.merge(side)\n  side.translate(0, 0, 2.125)\n\tbase.merge(side)\n  side.translate(0, 0, 2.125)\n\tbase.merge(side)\n  side.translate(0, 3.125, 0)\n\tbase.merge(side)\n  side.translate(0, 0, -2.125)\n\tbase.merge(side)\n  side.translate(0, 0, -2.125)\n\tbase.merge(side)\n  side.translate(-7, 0, 0)\n\tbase.merge(side)\n  side.translate(0, 0, 2.125)\n\tbase.merge(side)\n  side.translate(0, 0, 2.125)\n\tbase.merge(side)\n  var floor = new THREE.BoxGeometry(6.5, .25, 6.5)\n  floor.translate(0, 3, 0)\n\tbase.merge(floor)\n  floor.translate(0, 3.5, 0)\n\tbase.merge(floor)\n  floor.translate(0, 3.63, 0)\n\tbase.merge(floor)\n  var innerWall = new THREE.BoxGeometry(.25, 7.25, 6.5)\n  innerWall.translate(0, 6.67, 0)\n\tbase.merge(innerWall)\n\n  // Windows\n  var windows = new THREE.Geometry()\n  var windowSide = new THREE.BoxGeometry(7, 9.5, .1)\n  windowSide.translate(0, 5, 3.5)\n\twindows.merge(windowSide)\n  windowSide.translate(0, 0, -7)\n\twindows.merge(windowSide)\n  var windowSide = new THREE.BoxGeometry(.1, 9.5, 7)\n  windowSide.translate(3.5, 5, 0)\n\twindows.merge(windowSide)\n  windowSide.translate(-7, 0, 0)\n\twindows.merge(windowSide)\n  var windowMesh = new THREE.Mesh(windows, windowColor)\n  office.add(windowMesh)\n\n\n\n  // roof\n\tvar cap = new THREE.Geometry()\n  var capLeft = new THREE.BoxGeometry(.25, .5, 7.375)\n\tcapLeft.translate(-3.88, 10.5, .05)\n\tcap.merge(capLeft)\n\tcapLeft.translate(7.76, 0, 0)\n\tcap.merge(capLeft)\n  var capFront = new THREE.BoxGeometry(8.01, .5, .25)\n\tcapFront.translate(0, 10.5, 3.86)\n\tcap.merge(capFront)\n\tcapFront.translate(0, 0, -7.6)\n\tcap.merge(capFront)\n  // sill\n  // fronts - bottom\n  var sillBottom = new THREE.Geometry()\n  var sill1 = new THREE.BoxGeometry(1.5, .1, .1)\n\tsill1.translate(-2.6, 7.125, 3.8)\n\tsillBottom.merge(sill1)\n\tsill1.translate(0, 0, -7.475)\n\tsillBottom.merge(sill1)\n  var sill2 = new THREE.BoxGeometry(1.22, .1, .5)\n\tsill2.translate(-2.62, 7.125, 3.5)\n\tsillBottom.merge(sill2)\n\tsill2.translate(0, 0, -6.875)\n\tsillBottom.merge(sill2)\n\tcap.merge(sillBottom)\n\tsillBottom.translate(5.25, 0, 0)\n\tcap.merge(sillBottom)\n\tsillBottom.translate(0, -3.375, 0)\n\tcap.merge(sillBottom)\n\tsillBottom.translate(-5.25, 0, 0)\n\tcap.merge(sillBottom)\n  // fronts - top\n  var sillTop = new THREE.Geometry()\n  var sill3 = new THREE.BoxGeometry(1.375, .1, .1)\n\tsill3.translate(-2.6, 8.5, 3.8)\n\tsillTop.merge(sill3)\n\tsill3.translate(0, 0, -7.475)\n\tsillTop.merge(sill3)\n  var sill4 = new THREE.BoxGeometry(1.25, .1, .1)\n\tsill4.translate(-2.625, 7.75, 3.55)\n\tsillTop.merge(sill4)\n\tsill4.translate(0, 0, -7.1)\n\tsillTop.merge(sill4)\n\tcap.merge(sillTop)\n\tsillTop.translate(5.25, 0, 0)\n\tcap.merge(sillTop)\n\tsillTop.translate(0, -3.12, 0)\n\tcap.merge(sillTop)\n\tsillTop.translate(-5.25, 0, 0)\n\tcap.merge(sillTop)\n  //sides-Top\n  var sillTopSide = new THREE.Geometry()\n  var sill = new THREE.BoxGeometry(.1, .1, 1.375)\n\tsill.translate(3.8, 8.5, 2.175)\n\tsillTopSide.merge(sill)\n\tsill.translate(-7.6, 0, 0)\n\tsillTopSide.merge(sill)\n  var sill2 = new THREE.BoxGeometry(.1, .1, 1.25)\n\tsill2.translate(3.55, 7.75, 2.175)\n\tsillTopSide.merge(sill2)\n\tsill2.translate(-7.1, 0, 0)\n\tsillTopSide.merge(sill2)\n\tcap.merge(sillTopSide)\n\tsillTopSide.translate(0, 0, -2.125)\n\tcap.merge(sillTopSide)\n\tsillTopSide.translate(0, 0, -2.125)\n\tcap.merge(sillTopSide)\n\tsillTopSide.translate(0, -3.125, 0)\n\tcap.merge(sillTopSide)\n\tsillTopSide.translate(0, 0, 2.125)\n\tcap.merge(sillTopSide)\n\tsillTopSide.translate(0, 0, 2.125)\n\tcap.merge(sillTopSide)\n  var sillBottomSide = new THREE.Geometry()\n  var sill3 = new THREE.BoxGeometry(.1, .1, 1.5)\n\tsill3.translate(3.8, 7.1, 2.175)\n\tsillBottomSide.merge(sill3)\n\tsill3.translate(-7.6, 0, 0)\n\tsillBottomSide.merge(sill3)\n  var sill4 = new THREE.BoxGeometry(.5, .1, 1.22)\n\tsill4.translate(3.51, 7.1, 2.175)\n\tsillBottomSide.merge(sill4)\n\tsill4.translate(-7.02, 0, 0)\n\tsillBottomSide.merge(sill4)\n\tcap.merge(sillBottomSide)\n\tsillBottomSide.translate(0, 0, -2.125)\n\tcap.merge(sillBottomSide)\n\tsillBottomSide.translate(0, 0, -2.125)\n\tcap.merge(sillBottomSide)\n\tsillBottomSide.translate(0, -3.37, 0)\n\tcap.merge(sillBottomSide)\n\tsillBottomSide.translate(0, 0, 2.125)\n\tcap.merge(sillBottomSide)\n\tsillBottomSide.translate(0, 0, 2.125)\n\tcap.merge(sillBottomSide)\n  // Door\n  var doorSill = new THREE.BoxGeometry(2.5, .25, .2)\n\tdoorSill.translate(0, 2.87, 3.75)\n\tcap.merge(doorSill)\n  var doorSillSide = new THREE.BoxGeometry(.1, 2.5, .1)\n\tdoorSillSide.translate(-1, 1.5, 3.75)\n\tcap.merge(doorSillSide)\n\tdoorSillSide.translate(1, 0, 0)\n\tcap.merge(doorSillSide)\n\tdoorSillSide.translate(1, 0, 0)\n\tcap.merge(doorSillSide)\n  // add to building\n  var roofShadow = cap.clone(true)\n  officeShadows.merge(roofShadow)\n  var roof = new THREE.Mesh(cap, foundation)\n  roof.castShadow = true\n  office.add(roof)\n\n  // Assemble\n  var baseShadow = base.clone(true)\n  officeShadows.merge(baseShadow)\n  var building = new THREE.Mesh(base, brick)\n  building.castShadow = true\n  office.add(building)\n  var buildingShadows = new THREE.Mesh(officeShadows, shadows)\n  buildingShadows.receiveShadow = true\n  office.add(buildingShadows)\n\n  // Set Decorations\n  var decorations = new THREE.Group()\n  var decorationShadows = new THREE.Geometry()\n  // Couch\n  var couchGeometry = new THREE.Geometry()\n  var couchSeat = new THREE.BoxGeometry(.75, .25, 1.65)\n  couchSeat.translate(-1, 6.75, -.01)\n\tcouchGeometry.merge(couchSeat)\n  var couchBack = new THREE.BoxGeometry(.25, .75, 1.65)\n  couchBack.translate(-.5, 7, -.01)\n\tcouchGeometry.merge(couchBack)\n  var armRest = new THREE.BoxGeometry(1, .5, .25)\n  armRest.translate(-.87, 6.87, .92)\n\tcouchGeometry.merge(armRest)\n  armRest.translate(0, 0, -1.84)\n\tcouchGeometry.merge(armRest)\n  var cushion = new THREE.BoxGeometry(.75, .15, .5)\n  cushion.translate(-1, 6.86, 0)\n\tcouchGeometry.merge(cushion)\n  cushion.translate(0, 0, -.52)\n\tcouchGeometry.merge(cushion)\n  cushion.translate(0, 0, 1.04)\n\tcouchGeometry.merge(cushion)\n  couchGeometry.rotateY(1.25)\n  couchGeometry.translate(-1.25, 0, -3)\n  var couchShadow = couchGeometry.clone(true)\n  decorationShadows.merge(couchShadow)\n  var couch = new THREE.Mesh(couchGeometry, couchFabric)\n  couch.castShadow = true\n  decorations.add(couch)\n\n  var blueCouch = couchGeometry.clone(true)\n  blueCouch.rotateY(2)\n  blueCouch.translate(2.5, 0, -1)\n  var couchShadow = blueCouch.clone(true)\n  decorationShadows.merge(couchShadow)\n  var couch2 = new THREE.Mesh(blueCouch, blueFabric)\n  couch2.castShadow = true\n  decorations.add(couch2)\n\n  var purpleCouch = couchGeometry.clone(true)\n  purpleCouch.rotateY(-1)\n  purpleCouch.translate(1.5, -3.5, 1)\n  var couchShadow = purpleCouch.clone(true)\n  decorationShadows.merge(couchShadow)\n  var couch3 = new THREE.Mesh(purpleCouch, purpleFabric)\n  couch3.castShadow = true\n  decorations.add(couch3)\n\n  var tanCouch = couchGeometry.clone(true)\n  tanCouch.rotateY(3.5)\n  tanCouch.translate(-3.75, -3.5, .5)\n  var couchShadow = tanCouch.clone(true)\n  decorationShadows.merge(couchShadow)\n  var couch4 = new THREE.Mesh(tanCouch, tanFabric)\n  couch4.castShadow = true\n  decorations.add(couch4)\n\n  // Bed\n  var bed = new THREE.Group()\n  var sheets = new THREE.BoxGeometry(2, .1, 1)\n  sheets.translate(-1.5, 3.7, -2)\n  var sheetsSide = new THREE.BoxGeometry(2, .5, .1)\n  sheetsSide.translate(-1.5, 3.5, -1.5)\n  sheets.merge(sheetsSide)\n  sheetsSide.translate(0, 0, -1)\n  sheets.merge(sheetsSide)\n  var sheetsEnd = new THREE.BoxGeometry(.1, .5, 1.1)\n  sheetsEnd.translate(-.5, 3.5, -2)\n  sheets.merge(sheetsEnd)\n  sheets.rotateY(-1.55)\n  sheets.translate(-3, 0, 0)\n  var sheetsShadow = sheets.clone(true)\n  decorationShadows.merge(sheetsShadow)\n  var bedSheet = new THREE.Mesh(sheets, blueFabric)\n  bedSheet.castShadow = true\n  bed.add(bedSheet)\n  var sheets2 = sheets.clone()\n  sheets2.rotateY(1.55)\n  sheets2.translate(3.5, 0, 1)\n  var sheetsShadow = sheets2.clone(true)\n  decorationShadows.merge(sheetsShadow)\n  var bedSheet2 = new THREE.Mesh(sheets2, couchFabric)\n  bed.add(bedSheet2)\n  var sheets3 = sheets.clone()\n  sheets3.rotateY(1.55)\n  sheets3.translate(3.5, 3.5, -3)\n  var sheetsShadow = sheets3.clone(true)\n  decorationShadows.merge(sheetsShadow)\n  var bedSheet3 = new THREE.Mesh(sheets3, purpleFabric)\n  bed.add(bedSheet3)\n  var sheets4 = sheets.clone()\n  sheets4.rotateY(3.14)\n  sheets4.translate(-2.05, 3.5, -.5)\n  var sheetsShadow = sheets4.clone(true)\n  decorationShadows.merge(sheetsShadow)\n  var bedSheet4 = new THREE.Mesh(sheets4, blueFabric)\n  bed.add(bedSheet4)\n\n  var mattress = new THREE.BoxGeometry(2.5, .45, 1)\n  mattress.rotateY(-1.55)\n  mattress.translate(-1.02, 3.475, -1.75)\n  var mattressShadow = mattress.clone(true)\n  decorationShadows.merge(mattressShadow)\n  var bedMattress = new THREE.Mesh(mattress, tanFabric)\n  bed.add(bedMattress)\n  var mattress2 = mattress.clone()\n  mattress2.rotateY(1.55)\n  mattress2.translate(3.3, 0, 1)\n  var mattressShadow = mattress2.clone(true)\n  decorationShadows.merge(mattressShadow)\n  var bedMattress2 = new THREE.Mesh(mattress2, tanFabric)\n  bed.add(bedMattress2)\n  var mattress3 = mattress.clone()\n  mattress3.rotateY(1.55)\n  mattress3.translate(3.3, 3.5, -3)\n  var mattressShadow = mattress3.clone(true)\n  decorationShadows.merge(mattressShadow)\n  var bedMattress3 = new THREE.Mesh(mattress3, tanFabric)\n  bed.add(bedMattress3)\n  var mattress4 = mattress.clone()\n  mattress4.translate(0, 3.5, 3)\n  var mattressShadow = mattress4.clone(true)\n  decorationShadows.merge(mattressShadow)\n  var bedMattress4 = new THREE.Mesh(mattress4, tanFabric)\n  bed.add(bedMattress4)\n\n  decorations.add(bed)\n\n  // Lobby\n  var lobbyDesk = new THREE.Geometry()\n  var deskFront = new THREE.BoxGeometry(3, 1, .1)\n  deskFront.translate(0, 1, -.5)\n\tlobbyDesk.merge(deskFront)\n  var deskFront = new THREE.BoxGeometry(.1, 1, 1)\n  deskFront.translate(1.45, 1, -1)\n\tlobbyDesk.merge(deskFront)\n  deskFront.translate(-2.9, 0, 0)\n\tlobbyDesk.merge(deskFront)\n  var deskFront = new THREE.BoxGeometry(3.2, .1, 1.2)\n  deskFront.translate(0, 1.55, -1)\n\tlobbyDesk.merge(deskFront)\n  var deskFront = new THREE.BoxGeometry(3.1, .1, 1.1)\n  deskFront.translate(0, 1.65, -1)\n\tlobbyDesk.merge(deskFront)\n  var lobbyShadow = lobbyDesk.clone(true)\n  decorationShadows.merge(lobbyShadow)\n  var lobby = new THREE.Mesh(lobbyDesk, stone)\n  decorations.add(lobby)\n\n  var interiorShadows = new THREE.Mesh(decorationShadows, shadows)\n  interiorShadows.receiveShadow = true\n  office.add(interiorShadows)\n\n  office.add(decorations)\n\n  // Add to scene\n  office.position.set(-11, .75, -9) //-10, -.5, -6\n\t//office.scale.set(1.7, 1.7, 1.7)\n  scene.add(office)\n}\n","function initBench()  {\n\n  var bench = new THREE.Group()\n  var benchGeometry = new THREE.Geometry()\n  var benchSeat = new THREE.BoxGeometry(2, .1, 1)\n  benchGeometry.merge(benchSeat)\n  var benchBack = new THREE.BoxGeometry(2, .8, .1)\n  benchBack.translate(0, .8, -.55)\n  benchGeometry.merge(benchBack)\n  benchGeometry.scale(.8, .8, .8)\n  var benchCore = new THREE.Mesh(benchGeometry, orange)\n\tbenchCore.castShadow = true\n  bench.add(benchCore)\n  //metal\n  var benchMetal = new THREE.Geometry()\n  var metalSide = new THREE.BoxGeometry(.1, 1.8, .1)\n  metalSide.translate(-1.05, .4, -.55)\n  benchMetal.merge(metalSide)\n  metalSide.translate(2.1, 0, 0)\n  benchMetal.merge(metalSide)\n  var metalSide = new THREE.BoxGeometry(.1, .6, .1)\n  metalSide.translate(-1.05, -.25, .55)\n  benchMetal.merge(metalSide)\n  metalSide.translate(2.1, 0, 0)\n  benchMetal.merge(metalSide)\n  var metalSide = new THREE.BoxGeometry(.1, .1, 1)\n  metalSide.translate(-1.05, 0, 0)\n  benchMetal.merge(metalSide)\n  metalSide.translate(2.1, 0, 0)\n  benchMetal.merge(metalSide)\n  var metalSide = new THREE.BoxGeometry(2, .1, .1)\n  metalSide.translate(0, 0, .55)\n  benchMetal.merge(metalSide)\n  metalSide.translate(0, 0, -1.1)\n  benchMetal.merge(metalSide)\n  metalSide.translate(0, .35, 0)\n  benchMetal.merge(metalSide)\n  metalSide.translate(0, .9, 0)\n  benchMetal.merge(metalSide)\n  benchMetal.scale(.8, .8, .8)\n  var metal = new THREE.Mesh(benchMetal, gray)\n\tmetal.castShadow = true\n  bench.add(metal)\n  var benchShadow = new THREE.Geometry()\n  var coreBenchShadow = benchGeometry.clone()\n  benchShadow.merge(coreBenchShadow)\n  var metalBenchShadow = benchMetal.clone()\n  benchShadow.merge(metalBenchShadow)\n  var shadowBench = new THREE.Mesh(benchShadow, shadows)\n  bench.add(shadowBench)\n\n  \tvar body = new THREE.Geometry()\n  \t\t// Arms\n    \tvar rightArm = new THREE.BoxGeometry( .3, .4, .5 )\n  \t\trightArm.translate(.55, .1, .5)\n  \t\trightArm.vertices[4].x+= .1;\n  \t\trightArm.vertices[6].x+= .1;\n  \t\trightArm.vertices[0].x-= .2;\n  \t\trightArm.vertices[2].x-= .2;\n  \t\trightArm.vertices[0].y+= .3;\n  \t\trightArm.vertices[2].y+= .4;\n  \t\trightArm.vertices[4].y+= .3;\n  \t\trightArm.vertices[5].y+= .3;\n  \t\trightArm.vertices[6].y+= .3;\n  \t\trightArm.vertices[7].y+= .4;\n  \t\tbody.merge(rightArm)\n    \tvar rightArm = new THREE.BoxGeometry( .3, .4, .5 )\n  \t\trightArm.translate(-.55, .1, .5)\n  \t\trightArm.vertices[1].x-= .1;\n  \t\trightArm.vertices[3].x-= .1;\n  \t\trightArm.vertices[5].x+= .2;\n  \t\trightArm.vertices[7].x+= .2;\n  \t\trightArm.vertices[5].y+= .3;\n  \t\trightArm.vertices[7].y+= .4;\n  \t\trightArm.vertices[1].y+= .3;\n  \t\trightArm.vertices[0].y+= .3;\n  \t\trightArm.vertices[3].y+= .3;\n  \t\trightArm.vertices[2].y+= .4;\n  \t\tbody.merge(rightArm)\n  \t\t// Head\n    \tvar head = new THREE.SphereGeometry( .35, 32, 32 )\n  \t\thead.translate(0, 1.3, 0)\n  \t\tbody.merge(head)\n    \tbody.scale(.5, .5, .5)\n    \tbody.translate(0, .56, 0)\n    var person = new THREE.Mesh( body, skinTone3 )\n    bench.add(person)\n    // Clothes\n  \t\t// Shirt\n    \tvar torso = new THREE.BoxGeometry( 1, 1.4, .8 )\n  \t\ttorso.translate(0, .1, 0)\n  \t\ttorso.vertices[0].z-=.15;\n  \t\ttorso.vertices[0].x-=.15;\n  \t\ttorso.vertices[1].z+=.15;\n  \t\ttorso.vertices[1].x-=.15;\n  \t\ttorso.vertices[4].z+=.15;\n  \t\ttorso.vertices[4].x+=.15;\n  \t\ttorso.vertices[5].z-=.15;\n  \t\ttorso.vertices[5].x+=.15;\n    \tvar leftArm = new THREE.BoxGeometry( .3, .5, .5 )\n  \t\tleftArm.translate(.55, .55, 0)\n  \t\tleftArm.vertices[4].x-= .05;\n  \t\tleftArm.vertices[5].x-= .05;\n  \t\tleftArm.vertices[0].y-= .5;\n  \t\tleftArm.vertices[1].y-= .5;\n  \t\tleftArm.vertices[2].y-= .4;\n  \t\tleftArm.vertices[3].y-= .4;\n  \t\tleftArm.vertices[1].z+= .1;\n  \t\tleftArm.vertices[3].z+= .1;\n  \t\ttorso.merge(leftArm)\n    \tvar rightArm = new THREE.BoxGeometry( .3, .5, .5 )\n  \t\trightArm.translate(-.55, .55, 0)\n  \t\trightArm.vertices[1].x+= .05;\n  \t\trightArm.vertices[0].x+= .05;\n  \t\trightArm.vertices[5].y-= .5;\n  \t\trightArm.vertices[4].y-= .5;\n  \t\trightArm.vertices[7].y-= .4;\n  \t\trightArm.vertices[6].y-= .4;\n  \t\trightArm.vertices[4].z+= .1;\n  \t\trightArm.vertices[6].z+= .1;\n  \t\ttorso.merge(rightArm)\n    \ttorso.scale(.5, .5, .5)\n    \ttorso.translate(0, .56, 0)\n    var Shirt = new THREE.Mesh( torso, gray )\n    bench.add(Shirt)\n  \t\t// Pants\n    \tvar pant = new THREE.BoxGeometry( .5, .5, .8 )\n  \t\tpant.translate(-.25, -.8, 0)\n  \t\tpant.vertices[3].z+=.2;\n  \t\tpant.vertices[6].z+=.2;\n    \tvar leg = new THREE.BoxGeometry( .5, .5, .8 )\n  \t\tleg.translate(-.25, -.8, .8)\n  \t\tleg.vertices[0].x-=.1;\n  \t\tleg.vertices[2].x-=.1;\n  \t\tleg.vertices[5].x+=.1;\n  \t\tleg.vertices[7].x+=.1;\n  \t\tleg.vertices[0].y-=.2;\n  \t\tleg.vertices[5].y-=.2;\n  \t\tpant.merge(leg)\n    \tvar leg = new THREE.BoxGeometry( .5, .5, .8 )\n  \t\tleg.translate(.25, -.8, 0)\n  \t\tleg.vertices[3].z+=.2;\n  \t\tleg.vertices[6].z+=.2;\n  \t\tpant.merge(leg)\n    \tvar leg = new THREE.BoxGeometry( .5, .5, .8 )\n  \t\tleg.translate(.25, -.8, .8)\n  \t\tleg.vertices[0].x-=.1;\n  \t\tleg.vertices[2].x-=.1;\n  \t\tleg.vertices[5].x+=.1;\n  \t\tleg.vertices[7].x+=.1;\n  \t\tleg.vertices[0].y-=.2;\n  \t\tleg.vertices[5].y-=.2;\n  \t\tpant.merge(leg)\n    \tpant.scale(.5, .5, .5)\n    \tpant.translate(0, .56, 0)\n    var Pants = new THREE.Mesh( pant, blue )\n    bench.add(Pants)\n    //book\n    var flap = new THREE.BoxGeometry( .25, .3, .02 )\n    flap.translate(-.05, .75, .35)\n    flap.rotateY(-.2)\n    var flap2 = new THREE.BoxGeometry( .25, .3, .02 )\n    flap2.translate(.05, .75, .35)\n    flap2.rotateY(.2)\n    flap.merge(flap2)\n    var cover = new THREE.Mesh( flap, red )\n    bench.add(cover)\n    var pages = new THREE.BoxGeometry( .25, .3, .05 )\n    pages.translate(-.05, .75, .32)\n    pages.rotateY(-.2)\n    var pages2 = new THREE.BoxGeometry( .25, .3, .05 )\n    pages2.translate(.05, .75, .32)\n    pages2.rotateY(.2)\n    pages.merge(pages2)\n    var cover = new THREE.Mesh( pages, offwhite )\n    bench.add(cover)\n\n    //Shadows\n\t\tvar pedestrianShadows = new THREE.Geometry()\n\t\tvar newBody = body.clone(true)\n\t\tpedestrianShadows.merge(newBody)\n\t\tvar newPages = pages.clone(true)\n\t\tpedestrianShadows.merge(newPages)\n\t\tvar newShirt = torso.clone(true)\n    newShirt.scale(1.01, 1.01, 1.01)\n\t\tpedestrianShadows.merge(newShirt)\n\t\tvar newPants = pant.clone(true)\n    newPants.scale(1.01, 1.01, 1.01)\n\t\tpedestrianShadows.merge(newPants)\n\t\tvar newCover = flap.clone(true)\n\t\tpedestrianShadows.merge(newCover)\n    var shadowPerson = new THREE.Mesh(pedestrianShadows, shadows)\n    bench.add(shadowPerson)\n\n    // Add to scene\n    bench.position.set(0, .95, -7)\n    scene.add(bench)\n}\n","function initBackHoe()  {\n\n\tvar backHoe = new THREE.Group()\n\tvar shadowHoe = new THREE.Geometry()\n\t// Cabin\n\tvar coreGeometry = new THREE.Geometry()\n\tvar blockGeometry = new THREE.BoxGeometry( 4, .5, 1.2 )\n\tblockGeometry.translate(.75, .25, -.5)\n\tcoreGeometry.merge(blockGeometry)\n\tvar backAngle = new THREE.BoxGeometry( .5, .5, 1.2 )\n\tbackAngle.translate(-1, 1, -.5)\n  backAngle.vertices[4].y -= .5\n  backAngle.vertices[5].y -= .5\n\tcoreGeometry.merge(backAngle)\n\tvar backSolid = new THREE.BoxGeometry( .25, .5, 1.2 )\n\tbackSolid.translate(-.63, 1, -.5)\n\tcoreGeometry.merge(backSolid)\n\tvar middleSolid = new THREE.BoxGeometry( 2.5, .25, 1.2 )\n\tmiddleSolid.translate(0, .625, -.5)\n\tcoreGeometry.merge(middleSolid)\n\tvar roofSolid = new THREE.BoxGeometry( 1.9, .1, 1.3 )\n\troofSolid.translate(.4, 2.3, -.5)\n\tcoreGeometry.merge(roofSolid)\n\t// Arms\n\tvar armBase = new THREE.BoxGeometry( .75, .5, .25 )\n\tarmBase.translate(2.55, .25, .25)\n  armBase.vertices[4].x -= .5\n  armBase.vertices[5].x -= .5\n  armBase.vertices[0].y += .55\n  armBase.vertices[1].y += .55\n  armBase.vertices[0].x -= .4\n  armBase.vertices[1].x -= .4\n  armBase.vertices[2].y += 1\n  armBase.vertices[3].y += 1\n  armBase.vertices[6].y += .5\n  armBase.vertices[7].y += .5\n  armBase.vertices[6].x += .2\n  armBase.vertices[7].x += .2\n\tcoreGeometry.merge(armBase)\n\tarmBase.translate(0, 0, -1.5)\n\tcoreGeometry.merge(armBase)\n\tvar armLeft = new THREE.BoxGeometry( 1, .25, .3 )\n\tarmLeft.translate(3.025, 1.18, .25)\n  armLeft.vertices[4].x += .35\n  armLeft.vertices[5].x += .35\n  armLeft.vertices[0].y -= .3\n  armLeft.vertices[1].y -= .3\n  armLeft.vertices[2].y -= .5\n  armLeft.vertices[3].y -= .5\n\tcoreGeometry.merge(armLeft)\n\tarmLeft.translate(0, 0, -1.5)\n\tcoreGeometry.merge(armLeft)\n\tvar armRight = new THREE.BoxGeometry( .75, .45, .3 )\n\tarmRight.translate(3.9, .78, .25)\n  armRight.vertices[0].y -= .5\n  armRight.vertices[1].y -= .5\n  armRight.vertices[0].x += .2\n  armRight.vertices[1].x += .2\n  armRight.vertices[2].y -= .5\n  armRight.vertices[3].y -= .5\n\tcoreGeometry.merge(armRight)\n\tarmRight.translate(0, 0, -1.5)\n\tcoreGeometry.merge(armRight)\n\t//Assemble Orange Base\n\tvar shadowCoreGeometry = coreGeometry.clone(true)\n\tshadowHoe.merge(shadowCoreGeometry)\n\tvar core = new THREE.Mesh( coreGeometry, truckMaterial )\n\tcore.castShadow = true\n\tbackHoe.add(core)\n\t// Windows\n\tvar windowGeometry = new THREE.Geometry()\n\t//Front\n\twindowGeometry.vertices.push( new THREE.Vector3( -.5, 2.25, 0) )\t\t\t// 0\n\twindowGeometry.vertices.push( new THREE.Vector3( 1.25, 2.25, 0) )\t\t\t// 1\n\twindowGeometry.vertices.push( new THREE.Vector3( 2.25, .75, 0) )\t// 2\n\twindowGeometry.vertices.push( new THREE.Vector3( 2.25, .5, 0) )\t\t// 3\n\twindowGeometry.vertices.push( new THREE.Vector3( 1.25, .5, 0) )\t\t\t// 4\n\twindowGeometry.vertices.push( new THREE.Vector3( 1.25, .75, 0) )\t\t// 5\n\twindowGeometry.vertices.push( new THREE.Vector3( -.5, .75, 0) )\t\t// 6\n\t// Back\n\twindowGeometry.vertices.push( new THREE.Vector3( -.5, 2.25, -1) )\t\t// 7\n\twindowGeometry.vertices.push( new THREE.Vector3( 1.25, 2.25, -1) )\t\t// 8\n\twindowGeometry.vertices.push( new THREE.Vector3( 2.25, .75, -1) )\t// 9\n\twindowGeometry.vertices.push( new THREE.Vector3( 2.25, .5, -1) )\t// 10\n\twindowGeometry.vertices.push( new THREE.Vector3( 1.25, .5, -1) )\t\t// 11\n\twindowGeometry.vertices.push( new THREE.Vector3( 1.25, .75, -1) )\t// 12\n\twindowGeometry.vertices.push( new THREE.Vector3( -.5, .75, -1) )  // 13\n\t// Faces - Front\n\twindowGeometry.faces.push( new THREE.Face3( 6, 1, 0) )\n\twindowGeometry.faces.push( new THREE.Face3( 1, 6, 5) )\n\twindowGeometry.faces.push( new THREE.Face3( 5, 2, 1) )\n\twindowGeometry.faces.push( new THREE.Face3( 2, 5, 3) )\n\twindowGeometry.faces.push( new THREE.Face3( 4, 3, 5) )\n\t// Faces - Front2\n\twindowGeometry.faces.push( new THREE.Face3( 6, 0, 1) )\n\twindowGeometry.faces.push( new THREE.Face3( 1, 5, 6) )\n\twindowGeometry.faces.push( new THREE.Face3( 5, 1, 2) )\n\twindowGeometry.faces.push( new THREE.Face3( 2, 3, 5) )\n\twindowGeometry.faces.push( new THREE.Face3( 4, 5, 3) )\n\t// Faces - Back\n\twindowGeometry.faces.push( new THREE.Face3( 13, 8, 7) )\n\twindowGeometry.faces.push( new THREE.Face3( 8, 13, 12) )\n\twindowGeometry.faces.push( new THREE.Face3( 12, 9, 8) )\n\twindowGeometry.faces.push( new THREE.Face3( 9, 12, 10) )\n\twindowGeometry.faces.push( new THREE.Face3( 11, 10, 12) )\n\t// Faces - Back2\n\twindowGeometry.faces.push( new THREE.Face3( 13, 7, 8) )\n\twindowGeometry.faces.push( new THREE.Face3( 8, 12, 13) )\n\twindowGeometry.faces.push( new THREE.Face3( 12, 8, 9) )\n\twindowGeometry.faces.push( new THREE.Face3( 9, 10, 12) )\n\twindowGeometry.faces.push( new THREE.Face3( 11, 12, 10) )\n\t// Faces - Top\n\twindowGeometry.faces.push( new THREE.Face3( 0, 8, 7) )\n\twindowGeometry.faces.push( new THREE.Face3( 8, 0, 1) )\n\t// Faces - Top Side\n\twindowGeometry.faces.push( new THREE.Face3( 8, 1, 2) )\n\twindowGeometry.faces.push( new THREE.Face3( 8, 2, 9) )\n\t// Faces - Right Side\n\twindowGeometry.faces.push( new THREE.Face3( 2, 3, 9) )\n\twindowGeometry.faces.push( new THREE.Face3( 9, 3, 10) )\n\t// Faces - Right Bottom\n\twindowGeometry.faces.push( new THREE.Face3( 11, 10, 4) )\n\twindowGeometry.faces.push( new THREE.Face3( 10, 3, 4) )\n\t// Faces - Middle Side\n\twindowGeometry.faces.push( new THREE.Face3( 5, 12, 4) )\n\twindowGeometry.faces.push( new THREE.Face3( 12, 11, 4) )\n\t// Faces - Bottom\n\twindowGeometry.faces.push( new THREE.Face3( 13, 12, 6) )\n\twindowGeometry.faces.push( new THREE.Face3( 12, 5, 6) )\n\t// Faces - Left Side\n\twindowGeometry.faces.push( new THREE.Face3( 0, 7, 6) )\n\twindowGeometry.faces.push( new THREE.Face3( 7, 13, 6) )\n\twindowGeometry.computeFaceNormals()\n\tvar truckWindows = new THREE.Mesh( windowGeometry, windowColor )\n\tbackHoe.add(truckWindows)\n\t// Cabin Frame\n\tvar cabinGeometry = new THREE.Geometry()\n\tvar verticalBarGeometry = new THREE.BoxGeometry( .1, 1.5, .1 )\n\tverticalBarGeometry.translate(-.45, 1.5, .05)\n\tcabinGeometry.merge(verticalBarGeometry)\n\tverticalBarGeometry.translate(.55, 0, 0)\n\tcabinGeometry.merge(verticalBarGeometry)\n\tverticalBarGeometry.translate(0, 0, -1.1)\n\tcabinGeometry.merge(verticalBarGeometry)\n\tverticalBarGeometry.translate(-.55, 0, 0)\n\tcabinGeometry.merge(verticalBarGeometry)\n\tvar verticalBarGeometry = new THREE.BoxGeometry( .05, 1.5, .1 )\n\tverticalBarGeometry.translate(1.23, 1.5, .05)\n\tcabinGeometry.merge(verticalBarGeometry)\n\tverticalBarGeometry.translate(0, 0, -1.1)\n\tcabinGeometry.merge(verticalBarGeometry)\n\tvar verticalBarGeometryBig = new THREE.BoxGeometry( .05, 1.75, .1 )\n\tverticalBarGeometryBig.translate(1.28, 1.375, .05)\n  verticalBarGeometryBig.vertices[0].y -= .05\n  verticalBarGeometryBig.vertices[1].y -= .05\n\tcabinGeometry.merge(verticalBarGeometryBig)\n\tverticalBarGeometryBig.translate(0, 0, -1.1)\n\tcabinGeometry.merge(verticalBarGeometryBig)\n\tvar verticalBarGeometryLittle = new THREE.BoxGeometry( .1, .25, .1 )\n\tverticalBarGeometryLittle.translate(2.3, .625, .05)\n  verticalBarGeometryLittle.vertices[0].y -= .05\n  verticalBarGeometryLittle.vertices[1].y -= .05\n\tcabinGeometry.merge(verticalBarGeometryLittle)\n\tverticalBarGeometryLittle.translate(0, 0, -1.1)\n\tcabinGeometry.merge(verticalBarGeometryLittle)\n\tvar horizontalBarGeometry = new THREE.BoxGeometry( 1.75, .1, .1 )\n\thorizontalBarGeometry.translate(.375, 2.2, .05)\n\tcabinGeometry.merge(horizontalBarGeometry)\n\thorizontalBarGeometry.translate(0, 0, -1.1)\n\tcabinGeometry.merge(horizontalBarGeometry)\n\tvar horizontalBarGeometry = new THREE.BoxGeometry( 1, .1, .1 )\n\thorizontalBarGeometry.translate(1.75, .55, .05)\n\tcabinGeometry.merge(horizontalBarGeometry)\n\thorizontalBarGeometry.translate(0, 0, -1.1)\n\tcabinGeometry.merge(horizontalBarGeometry)\n\tvar horizontalBarGeometry = new THREE.BoxGeometry( 1.75, .5, .1 )\n\thorizontalBarGeometry.translate(.4, 1, .05)\n\tcabinGeometry.merge(horizontalBarGeometry)\n\thorizontalBarGeometry.translate(0, 0, -1.1)\n\tcabinGeometry.merge(horizontalBarGeometry)\n\tvar backBarGeometry = new THREE.BoxGeometry( .01, .2, 1 )\n\tbackBarGeometry.translate(-.496, 1.3, -.5)\n\tcabinGeometry.merge(backBarGeometry)\n\tbackBarGeometry.translate(0, .9, 0)\n\tcabinGeometry.merge(backBarGeometry)\n\tvar diagonalBarGeometry = new THREE.BoxGeometry( 1.045, .1, .1 )\n\tdiagonalBarGeometry.translate(1.825, 2.155, .05)\n  diagonalBarGeometry.vertices[0].y -= 1.5\n  diagonalBarGeometry.vertices[1].y -= 1.5\n  diagonalBarGeometry.vertices[2].y -= 1.5\n  diagonalBarGeometry.vertices[3].y -= 1.5\n\tcabinGeometry.merge(diagonalBarGeometry)\n\tdiagonalBarGeometry.translate(0, 0, -1.1)\n\tcabinGeometry.merge(diagonalBarGeometry)\n\tvar frontBarGeometry = new THREE.BoxGeometry( .1, .1, 1 )\n\tfrontBarGeometry.translate(2.3, .55, -.5)\n\tcabinGeometry.merge(frontBarGeometry)\n\tvar shadowCabin = cabinGeometry.clone(true)\n\tshadowHoe.merge(shadowCabin)\n\tvar cabin = new THREE.Mesh( cabinGeometry, gray )\n\tcabin.castShadow = true\n\tbackHoe.add(cabin)\n  // Inside\n  var truckSeat = new THREE.Geometry()\n\tvar truckSeatButt = new THREE.BoxGeometry( .4, .1, .4 )\n  truckSeatButt.translate(.7, .75, -.5)\n  truckSeat.merge(truckSeatButt)\n\tvar truckSeatBack = new THREE.BoxGeometry( .1, .7, .4 )\n  truckSeatBack.translate(.45, 1.05, -.5)\n  truckSeat.merge(truckSeatBack)\n\tvar truckSteering = new THREE.CylinderGeometry( .2, .2, .05, 32 )\n  truckSteering.translate(1.5, -.75, -.5)\n  truckSteering.rotateZ(1.2)\n  truckSeat.merge(truckSteering)\n\tvar truckConsole = new THREE.BoxGeometry( .95, .24, .98 )\n\ttruckConsole.translate(1.75, .65, -.5)\n\ttruckSeat.merge(truckConsole)\n\tvar truckInnerConsole = new THREE.BoxGeometry( .95, .5, .98 )\n\ttruckInnerConsole.translate(1.75, 1, -.5)\n  truckInnerConsole.vertices[0].x -= .4\n  truckInnerConsole.vertices[1].x -= .4\n\ttruckSeat.merge(truckInnerConsole)\n\tvar truckSeatPiece = new THREE.Mesh( truckSeat, gray )\n\ttruckSeatPiece.castShadow = true\n\tbackHoe.add(truckSeatPiece)\n\t// Wheels\n\tvar shape = new THREE.Shape();\n  shape.moveTo(0, .75)\n  shape.bezierCurveTo(0,1.75, 1.5,1.75, 1.5,.75)\n\tshape.lineTo(1.125, .75)\n  shape.bezierCurveTo(1.125,1.25, .375,1.25, .375,.75)\n  shape.bezierCurveTo(.375,.35, 1.125,.35, 1.125,.75)\n\tshape.lineTo(1.5, .75)\n  shape.bezierCurveTo(1.5,-.125, 0,-.125, 0,.75)\n\n  var extrudeSettings = {\n      amount : .5,\n      steps : 50,\n      bevelEnabled: false,\n      curveSegments: 8\n  };\n\tvar truckWheel = new THREE.Group()\n\tvar truckRubber = new THREE.Geometry()\n  var truckTire = new THREE.ExtrudeGeometry( shape, extrudeSettings )\n\ttruckTire.translate(-1, -1, 0)\n\ttruckRubber.merge(truckTire)\n\ttruckTire.translate(0, 0, -1.5)\n\ttruckRubber.merge(truckTire)\n\ttruckTire.translate(3.2, 0, 0)\n\ttruckRubber.merge(truckTire)\n\ttruckTire.translate(0, 0, 1.5)\n\ttruckRubber.merge(truckTire)\n\tvar nut = new THREE.CylinderGeometry(.15, .15, .3, 6)\n  nut.rotateX(1.6)\n\tnut.translate(-.25, -.2, .3)\n\ttruckRubber.merge(nut)\n\tnut.translate(0, 0, -1.5)\n\ttruckRubber.merge(nut)\n\tnut.translate(3.2, 0, 0)\n\ttruckRubber.merge(nut)\n\tnut.translate(0, 0, 1.5)\n\ttruckRubber.merge(nut)\n\tvar truckBumper = new THREE.BoxGeometry( .2, .2, 1.5 )\n\ttruckBumper.translate(-1.25, 0, -.5)\n\ttruckRubber.merge(truckBumper)\n\tvar truckBumper = new THREE.BoxGeometry( .32, .2, 1.5 )\n\ttruckBumper.translate(-1.19, -.2, -.5)\n\ttruckRubber.merge(truckBumper)\n\tvar truckBumper = new THREE.BoxGeometry( 1.25, .2, 1.5 )\n\ttruckBumper.translate(1.25, -.2, -.5)\n\ttruckRubber.merge(truckBumper)\n\tvar truckBumper = new THREE.BoxGeometry( .2, .2, .9 )\n\ttruckBumper.translate(2.75, -.2, -.45)\n\ttruckRubber.merge(truckBumper)\n\tvar truckLicense = new THREE.BoxGeometry( .05, .2, .5 )\n\ttruckLicense.translate(-1.25, .3, -.5)\n\ttruckRubber.merge(truckLicense)\n\tvar Scoop = new THREE.BoxGeometry( .5, .2, 2 )\n  Scoop.rotateZ(.2)\n\tScoop.translate(4.825, .7, -.5)\n\ttruckRubber.merge(Scoop)\n\tvar Scoop = new THREE.BoxGeometry( 1, .2, 2 )\n  Scoop.rotateZ(1.15)\n\tScoop.translate(4.45, .25, -.5)\n\ttruckRubber.merge(Scoop)\n\tvar Scoop = new THREE.BoxGeometry( 1, .2, 2 )\n  Scoop.rotateZ(-.7)\n\tScoop.translate(4.61, -.42, -.5)\n\ttruckRubber.merge(Scoop)\n\tvar Scoop = new THREE.BoxGeometry( .75, .2, 2 )\n\tScoop.translate(5.3, -.717, -.5)\n\ttruckRubber.merge(Scoop)\n\t// Scoop Sides\n\tvar Scoop = new THREE.BoxGeometry( .5, .25, .2 )\n\tScoop.translate(4.839, .53, .4)\n  Scoop.vertices[6].y += .2\n  Scoop.vertices[7].y += .2\n  Scoop.vertices[2].y += .1\n  Scoop.vertices[3].y += .1\n  Scoop.vertices[2].x -= .15\n  Scoop.vertices[3].x -= .15\n\ttruckRubber.merge(Scoop)\n\tScoop.translate(0, 0, -1.8)\n\ttruckRubber.merge(Scoop)\n\tvar Scoop = new THREE.BoxGeometry( .75, .25, .2 )\n\tScoop.translate(5.3, -.5, .4)\n  Scoop.vertices[4].x += .2\n  Scoop.vertices[5].x += .2\n  Scoop.vertices[0].y -= .2\n  Scoop.vertices[1].y -= .2\n\ttruckRubber.merge(Scoop)\n\tScoop.translate(0, 0, -1.8)\n\ttruckRubber.merge(Scoop)\n\tvar Scoop = new THREE.BoxGeometry( .75, .75, .2 )\n\tScoop.translate(4.75, .25, .4)\n  Scoop.vertices[2].x += .1\n  Scoop.vertices[3].x += .1\n  Scoop.vertices[4].x += .2\n  Scoop.vertices[5].x += .2\n  Scoop.vertices[0].x -= .23\n  Scoop.vertices[1].x -= .23\n  Scoop.vertices[0].y += .02\n  Scoop.vertices[1].y += .02\n\ttruckRubber.merge(Scoop)\n\tScoop.translate(0, 0, -1.8)\n\ttruckRubber.merge(Scoop)\n\tvar Scoop = new THREE.BoxGeometry( .5, .5, .2 )\n\tScoop.translate(4.875, -.375, .4)\n  Scoop.vertices[0].x += .1\n  Scoop.vertices[1].x += .1\n  Scoop.vertices[2].x += .3\n  Scoop.vertices[3].x += .3\n  Scoop.vertices[4].x -= .25\n  Scoop.vertices[5].x -= .25\n  Scoop.vertices[6].x += .05\n  Scoop.vertices[7].x += .05\n  Scoop.vertices[6].y += .05\n  Scoop.vertices[7].y += .05\n\ttruckRubber.merge(Scoop)\n\tScoop.translate(0, 0, -1.8)\n\ttruckRubber.merge(Scoop)\n\tvar shadowRubber = truckRubber.clone(true)\n\tshadowHoe.merge(shadowRubber)\n  var mesh = new THREE.Mesh( truckRubber, gray )\n\tmesh.castShadow = true\n\t//mesh.position.set(0, .5, 0)\n  truckWheel.add( mesh )\n\tvar truckHub = new THREE.Geometry\n\tvar innerHub = new THREE.TorusGeometry(.34, .1, 4, 50, 6.3)\n\tinnerHub.translate(-.25, -.213, .415)\n\ttruckHub.merge(innerHub)\n\tinnerHub.translate(0, 0, -1.825)\n\ttruckHub.merge(innerHub)\n\tinnerHub.translate(3.2, 0, 0)\n\ttruckHub.merge(innerHub)\n\tinnerHub.translate(0, 0, 1.825)\n\ttruckHub.merge(innerHub)\n\tvar flatHub = new THREE.CylinderGeometry(.5, .5, .3, 32)\n\tflatHub.translate(-.25, .2, .25)\n  flatHub.rotateX(1.6)\n\ttruckHub.merge(flatHub)\n\tflatHub.translate(0, 0, -1.3)\n\ttruckHub.merge(flatHub)\n\tflatHub.translate(3.25, 0, 0)\n\ttruckHub.merge(flatHub)\n\tflatHub.translate(0, 0, 1.3)\n\ttruckHub.merge(flatHub)\n\tvar shadowHub = truckHub.clone(true)\n\tshadowHoe.merge(shadowHub)\n\tvar backhoeHub = new THREE.Mesh( truckHub, truckMaterial )\n\tbackhoeHub.castShadow = true\n\ttruckWheel.add(backhoeHub)\n\t//truckWheel.position.set(0, .2, 0)\n\tbackHoe.add(truckWheel)\n\t// Add To scene\n\tvar backhoeShadow = new THREE.Mesh( shadowHoe, shadows )\n\tbackHoe.add(backhoeShadow)\n\tbackHoe.position.set(2.5, 1.4, 2.8)\n\tscene.add(backHoe)\n}\n","function initTruck() {\n\n\tvar truck = new THREE.Group()\n\tvar shadowCopy = new THREE.Geometry()\n\t// Base\n  var core = new THREE.Geometry()\n\tvar nose = new THREE.BoxGeometry( 1, .8, 1.3 )\n  nose.translate(-.6, 0, 0)\n  core.merge(nose)\n\tvar cabin = new THREE.BoxGeometry( .1, .8, 1.3 )\n  cabin.translate(.52, .25, 0)\n  core.merge(cabin)\n\tvar cabinSide = new THREE.BoxGeometry( .1, .7, .3 )\n  cabinSide.translate(.52, .85, .5)\n  core.merge(cabinSide)\n  cabinSide.translate(0, 0, -1)\n  core.merge(cabinSide)\n\tvar roof = new THREE.BoxGeometry( .8, .1, 1.3 )\n  roof.translate(.17, 1.15, 0)\n  roof.vertices[6].x-= .05\n  roof.vertices[7].x-= .05\n  core.merge(roof)\n\tvar shieldRight = new THREE.BoxGeometry( .1, 1, .1 )\n  shieldRight.translate(-.6, .52, -.6)\n  shieldRight.rotateZ(-.4)\n  core.merge(shieldRight)\n  shieldRight.translate(0, 0, 1.2)\n  core.merge(shieldRight)\n\tvar windshield = new THREE.BoxGeometry( 1, .8, 1.29 )\n  // x\n  windshield.vertices[4].x+= .26\n  windshield.vertices[5].x+= .26\n  windshield.vertices[6].x-= .035\n  windshield.vertices[7].x-= .035\n  // y\n\twindshield.vertices[0].y+= 2.2\n  windshield.vertices[1].y+= 2.2\n  windshield.vertices[2].y+= 2.3\n  windshield.vertices[3].y+= 2.3\n  windshield.vertices[4].y+= 2.2\n  windshield.vertices[5].y+= 2.2\n  windshield.vertices[6].y+= 2.3\n  windshield.vertices[7].y+= 2.3\n\tvar shield = new THREE.Mesh( windshield, windowColor )\n\ttruck.add(shield)\n\tvar bed = new THREE.BoxGeometry( 3.2, .3, 1.3 )\n  bed.translate(.9, -.31, 0)\n  core.merge(bed)\n\tvar bedSide = new THREE.BoxGeometry( 2.68, .6, .1 )\n  bedSide.translate(1.15, .1, .6)\n  core.merge(bedSide)\n  bedSide.translate(0, 0, -1.2)\n  core.merge(bedSide)\n\tvar bedBack = new THREE.BoxGeometry( .1, .6, 1.3 )\n  bedBack.translate(2.45, .1, 0)\n  core.merge(bedBack)\n\tcore.translate(0, 1.5, 0)\n\tvar shadowCore = core.clone(true)\n\tshadowCopy.merge(shadowCore)\n\tvar base = new THREE.Mesh( core, offwhite )\n\tbase.castShadow = true\n\ttruck.add(base)\n  // Inside\n  var seat = new THREE.Geometry()\n\tvar seatButt = new THREE.BoxGeometry( .4, .1, .4 )\n  seatButt.translate(.25, 1.6, .3)\n  seat.merge(seatButt)\n  seatButt.translate(0, 0, -.6)\n  seat.merge(seatButt)\n\tvar seatBack = new THREE.BoxGeometry( .1, .7, .4 )\n  seatBack.translate(.45, 1.8, .3)\n  seat.merge(seatBack)\n  seatBack.translate(0, 0, -.6)\n  seat.merge(seatBack)\n\tvar steering = new THREE.CylinderGeometry( .2, .2, .05, 32 )\n  steering.translate(-1.9, .65, .3)\n  steering.rotateZ(-1.2)\n  seat.merge(steering)\n\tvar shadowSeat = seat.clone(true)\n\tshadowCopy.merge(shadowSeat)\n\tvar seatPiece = new THREE.Mesh( seat, gray )\n\ttruck.add(seatPiece)\n  // Bumper\n\n  var bumperGeometry = new THREE.Geometry()\n\tvar frontBumper = new THREE.BoxGeometry( .4, .1, 1.4 )\n  frontBumper.translate(-.95, 1.05, 0)\n  frontBumper.vertices[2].x+= .01\n  frontBumper.vertices[3].x+= .01\n  bumperGeometry.merge(frontBumper)\n\tvar middleBumper = new THREE.BoxGeometry( 1.1, .1, 1.4 )\n  middleBumper.translate(.7, 1.05, 0)\n  middleBumper.vertices[2].x+= .01\n  middleBumper.vertices[3].x+= .01\n  middleBumper.vertices[6].x-= .01\n  middleBumper.vertices[7].x-= .01\n  bumperGeometry.merge(middleBumper)\n\tvar backBumper = new THREE.BoxGeometry( .4, .1, 1.4 )\n  backBumper.translate(2.35, 1.05, 0)\n  backBumper.vertices[6].x-= .01\n  backBumper.vertices[7].x-= .01\n  bumperGeometry.merge(backBumper)\n\tvar shadowBumper = bumperGeometry.clone(true)\n\tshadowCopy.merge(shadowBumper)\n\tvar bumper = new THREE.Mesh( bumperGeometry, palegray )\n\ttruck.add(bumper)\n\t// Wheels\n  var wheels = new THREE.Geometry()\n\tvar wheelGeometry = new THREE.CylinderGeometry( .45, .45, .2, 32 )\n  wheelGeometry.translate(-.3, .55, -1.1)\n  wheelGeometry.rotateX(1.6)\n  wheels.merge(wheelGeometry)\n  wheelGeometry.translate(0, 0, -1.2)\n  wheels.merge(wheelGeometry)\n  wheelGeometry.translate(2, 0, 1.2)\n  wheels.merge(wheelGeometry)\n  wheelGeometry.translate(0, 0, -1.2)\n  wheels.merge(wheelGeometry)\n\tvar grill = new THREE.BoxGeometry( .01, .7, 1.2 )\n  grill.translate(-1.1, 1.5, 0)\n  wheels.merge(grill)\n\tvar license = new THREE.BoxGeometry( .05, .2, .5 )\n  license.translate(2.5, 1.25, 0)\n  wheels.merge(license)\n\tvar shadowWheel = wheels.clone(true)\n\tshadowCopy.merge(shadowWheel)\n\tvar greys = new THREE.Mesh( wheels, gray )\n\tgreys.castShadow = true\n\ttruck.add(greys)\n  // Hubcaps\n  var hubs = new THREE.Geometry()\n\tvar hubGeometry = new THREE.TorusGeometry( .25, .1, 3, 199 )\n  hubGeometry.translate(-.3, 1.09, .63)\n  hubs.merge(hubGeometry)\n  hubGeometry.translate(0, 0, -1.3)\n  hubs.merge(hubGeometry)\n  hubGeometry.translate(2, 0, 1.3)\n  hubs.merge(hubGeometry)\n  hubGeometry.translate(0, 0, -1.3)\n  hubs.merge(hubGeometry)\n\tvar shadowHubs = hubs.clone(true)\n\tshadowCopy.merge(shadowHubs)\n\tvar hubcaps = new THREE.Mesh( hubs, offwhite )\n\ttruck.add(hubcaps)\n  //Back\n  var brakeLights = new THREE.Geometry()\n\tvar leftLight = new THREE.BoxGeometry( .1, .1, .1 )\n  leftLight.translate(2.5, 1.25, .45)\n  brakeLights.merge(leftLight)\n  leftLight.translate(0, 0, -.9)\n  brakeLights.merge(leftLight)\n\tvar shadowlights = brakeLights.clone(true)\n\tshadowCopy.merge(shadowlights)\n\tvar brakes = new THREE.Mesh( brakeLights, red )\n\ttruck.add(brakes)\n\n  // Lights\n\tvar lightGeometry = new THREE.BoxGeometry( .1, .05, .5 )\n\tlightGeometry.translate(.2, 2.72, 0)\n\tvar shadowlTopLights = lightGeometry.clone(true)\n\tshadowCopy.merge(shadowlTopLights)\n\tvar light = new THREE.Mesh( lightGeometry, orange )\n\tlight.castShadow = true\n\ttruck.add( light )\n\n\tvar baseShadow = new THREE.Mesh( shadowCopy, shadows )\n\ttruck.add(baseShadow)\n\n  truck.position.set(0, 0, 7)\n  truck.rotation.y += .5\n  truck.scale.set(.9, .9, .9)\n  scene.add(truck)\n}\n","function initWorkers()  {\n\n  var worker = new THREE.Group()\n  var worker2 = new THREE.Group()\n  var worker3 = new THREE.Group()\n  var shadowPerson1 = new THREE.Geometry()\n  var shadowPerson2 = new THREE.Geometry()\n  var shadowPerson3 = new THREE.Geometry()\n\n  // Person 1\n\tvar body = new THREE.Geometry()\n  // Arms\n    var rightArm = new THREE.BoxGeometry( 1, .4, .5 )\n    rightArm.translate(.85, .6, 0)\n    rightArm.vertices[0].y-=.75;\n    rightArm.vertices[1].y-=.75;\n    rightArm.vertices[2].y-=.5;\n    rightArm.vertices[3].y-=.5;\n    rightArm.vertices[0].x-=.5;\n    rightArm.vertices[1].x-=.5;\n    rightArm.vertices[2].x-=.5;\n    rightArm.vertices[3].x-=.5;\n    rightArm.vertices[0].z-=.15;\n    rightArm.vertices[1].z+=.15;\n    rightArm.vertices[2].z-=.15;\n    rightArm.vertices[3].z+=.15;\n  body.merge(rightArm)\n    var leftArm = new THREE.BoxGeometry( 1, .4, .5 )\n    leftArm.translate(-.85, .6, 0)\n    leftArm.vertices[5].y+=.3;\n    leftArm.vertices[4].y+=.3\n    leftArm.vertices[7].y+=.55;\n    leftArm.vertices[6].y+=.55;\n    leftArm.vertices[5].x+=.8;\n    leftArm.vertices[4].x+=.8;\n    leftArm.vertices[7].x+=.8;\n    leftArm.vertices[6].x+=.8;\n    leftArm.vertices[5].z+=.9;\n    leftArm.vertices[4].z+=1.05;\n    leftArm.vertices[7].z+=.9;\n    leftArm.vertices[6].z+=1.05;\n  body.merge(leftArm)\n  // Head\n    var head = new THREE.SphereGeometry( .35, 32, 32 )\n    head.translate(0, 1.3, 0)\n  body.merge(head)\n  // Mesh\n  var person = new THREE.Mesh( body, skinTone2 )\n\tperson.castShadow = true\n\tperson.geometry.scale(.5, .5, .5)\n  let shadowBody = body.clone(true)\n  shadowPerson1.merge(shadowBody)\n  worker.add(person)\n  // Clothes\n\t\t// Shirt\n  \tvar torso = new THREE.BoxGeometry( 1, 1.4, .8 )\n\t\ttorso.translate(0, .1, 0)\n\t\ttorso.vertices[0].z-=.15;\n\t\ttorso.vertices[0].x-=.15;\n\t\ttorso.vertices[1].z+=.15;\n\t\ttorso.vertices[1].x-=.15;\n\t\ttorso.vertices[4].z+=.15;\n\t\ttorso.vertices[4].x+=.15;\n\t\ttorso.vertices[5].z-=.15;\n\t\ttorso.vertices[5].x+=.15;\n    var shirt1 = new THREE.Mesh( torso, palegray )\n  \tshirt1.castShadow = true\n  \tshirt1.geometry.scale(.5, .5, .5)\n    let shadowShirt = torso.clone(true)\n    shadowPerson1.merge(shadowShirt)\n  worker.add(shirt1)\n    // Pants\n    var leftLeg = new THREE.BoxGeometry( .5, .8, .8 )\n    leftLeg.translate(-.25, -1, 0)\n    leftLeg.vertices[0].x-=.1;\n    leftLeg.vertices[1].x-=.1;\n    leftLeg.vertices[2].x-=.3;\n    leftLeg.vertices[2].z-=.3;\n    leftLeg.vertices[3].x-=.3;\n    leftLeg.vertices[3].z+=.3;\n    leftLeg.vertices[6].z+=.3;\n    leftLeg.vertices[7].z-=.3;\n    var rightLeg = new THREE.BoxGeometry( .5, .8, .8 )\n    rightLeg.translate(.25, -1, 0)\n    rightLeg.vertices[4].x+=.1;\n    rightLeg.vertices[5].x+=.1;\n    rightLeg.vertices[2].z-=.3;\n    rightLeg.vertices[3].z+=.3;\n    rightLeg.vertices[6].x+=.3;\n    rightLeg.vertices[6].z+=.3;\n    rightLeg.vertices[7].x+=.3;\n    rightLeg.vertices[7].z-=.3;\n    leftLeg.merge(rightLeg)\n\n    var pants1 = new THREE.Mesh( leftLeg, jean )\n  \tpants1.castShadow = true\n  \tpants1.geometry.scale(.5, .5, .5)\n    let shadowPant = leftLeg.clone(true)\n    shadowPerson1.merge(shadowPant)\n  worker.add(pants1)\n\n  // Person 2\n  var body2 = new THREE.Geometry()\n    var rightArm2 = rightArm.clone()\n  body2.merge(rightArm2)\n    var leftArm2 = new THREE.BoxGeometry( 1, .4, .5 )\n    leftArm2.translate(-.85, .6, 0)\n    leftArm2.vertices[5].y-=.75;\n    leftArm2.vertices[4].y-=.75\n    leftArm2.vertices[7].y-=.5;\n    leftArm2.vertices[6].y-=.5;\n    leftArm2.vertices[5].x+=.5;\n    leftArm2.vertices[4].x+=.5;\n    leftArm2.vertices[7].x+=.5;\n    leftArm2.vertices[6].x+=.5;\n    leftArm2.vertices[5].z-=.15;\n    leftArm2.vertices[4].z+=.15;\n    leftArm2.vertices[7].z-=.15;\n    leftArm2.vertices[6].z+=.15;\n  body2.merge(leftArm2)\n    // Head\n    var head2 = new THREE.SphereGeometry( .35, 32, 32 )\n    head2.translate(0, 1.3, 0)\n  body2.merge(head2)\n  var person2 = new THREE.Mesh( body2, skinTone4 )\n\tperson2.castShadow = true\n  person2.geometry.scale(.5, .5, .5)\n\tworker2.add(person2)\n  // Clothes\n\t\t// Shirt\n    var shirt2 = new THREE.Mesh( torso, palegray )\n  \tshirt2.castShadow = true\n    let shadowShirt2 = torso.clone(true)\n    shadowPerson2.merge(shadowShirt2)\n  worker2.add(shirt2)\n    // Pants\n    var pants2 = new THREE.Mesh( leftLeg, jean )\n  \tpants2.castShadow = true\n    let shadowPant2 = leftLeg.clone(true)\n    shadowPerson2.merge(shadowPant2)\n  worker2.add(pants2)\n\n  // Person 3\n  var body3 = new THREE.Geometry()\n    var rightArm3 = new THREE.BoxGeometry( 1, .4, .5 )\n    rightArm3.translate(.85, .6, 0)\n    rightArm3.vertices[0].y-=.45;\n    rightArm3.vertices[1].y-=.45;\n    rightArm3.vertices[2].y-=.2;\n    rightArm3.vertices[3].y-=.2;\n    rightArm3.vertices[0].x-=.5;\n    rightArm3.vertices[1].x-=.5;\n    rightArm3.vertices[2].x-=.5;\n    rightArm3.vertices[3].x-=.5;\n    rightArm3.vertices[0].z+=.45;\n    rightArm3.vertices[1].z+=.85;\n    rightArm3.vertices[2].z+=.45;\n    rightArm3.vertices[3].z+=.85;\n  body3.merge(rightArm3)\n    var leftArm3 = new THREE.BoxGeometry( 1, .4, .5 )\n    leftArm3.translate(-.85, .6, 0)\n    leftArm3.vertices[5].y-=.45;\n    leftArm3.vertices[4].y-=.45;\n    leftArm3.vertices[7].y-=.2;\n    leftArm3.vertices[6].y-=.2;\n    leftArm3.vertices[5].x+=.5;\n    leftArm3.vertices[4].x+=.5;\n    leftArm3.vertices[7].x+=.5;\n    leftArm3.vertices[6].x+=.5;\n    leftArm3.vertices[5].z+=.45;\n    leftArm3.vertices[4].z+=.85;\n    leftArm3.vertices[7].z+=.45;\n    leftArm3.vertices[6].z+=.85;\n  body3.merge(leftArm3)\n    //Head\n    var head3 = new THREE.SphereGeometry( .35, 32, 32 )\n    head3.translate(0, 1.3, 0)\n  body3.merge(head3)\n  var person3 = new THREE.Mesh( body3, skinTone1 )\n\tperson3.castShadow = true\n  person3.geometry.scale(.5, .5, .5)\n\tworker3.add(person3)\n  // Clothes\n\t\t// Shirt\n    var shirt3 = new THREE.Mesh( torso, palegray )\n  \tshirt3.castShadow = true\n    let shadowShirt3 = torso.clone(true)\n    shadowPerson3.merge(shadowShirt3)\n  worker3.add(shirt3)\n    // Pants\n    var pants3 = new THREE.Mesh( leftLeg, jean )\n  \tpants3.castShadow = true\n    let shadowPant3 = leftLeg.clone(true)\n    shadowPerson3.merge(shadowPant3)\n  worker3.add(pants3)\n\n// hat\n  var hat = new THREE.Geometry()\n  var dome = new THREE.SphereGeometry(.2, 32, 32, 1, 6.3, 0, 1.5)\n  dome.translate(0, .7, 0)\n  hat.merge(dome)\n  var brim = new THREE.CylinderGeometry(.2, .2, .02, 32)\n  brim.translate(0, .72, .1)\n  hat.merge(brim)\n  var constHat = new THREE.Mesh(hat, truckMaterial)\n\tconstHat.castShadow = true\n  var hat2 = constHat.clone()\n  var hat3 = constHat.clone()\n// vest\n  var vestGeometry = new THREE.Geometry()\n  var left = new THREE.BoxGeometry( .2, .5, .4 )\n  left.translate(-.13, .17, 0)\n  left.vertices[0].z-=.05;\n  left.vertices[1].z+=.05;\n  left.vertices[4].z+=.05;\n  left.vertices[4].x+=.05;\n  left.vertices[5].z-=.05;\n  left.vertices[5].x+=.05;\n  vestGeometry.merge(left)\n  var right = new THREE.BoxGeometry( .2, .5, .4 )\n  right.translate(.13, .17, 0)\n  right.vertices[5].z-=.05;\n  right.vertices[4].z+=.05;\n  right.vertices[1].z+=.05;\n  right.vertices[1].x-=.05;\n  right.vertices[0].z-=.05;\n  right.vertices[0].x-=.05;\n  vestGeometry.merge(right)\n  var back = new THREE.BoxGeometry( .2, .5, .025 )\n  back.translate(0, .17, -.1875)\n  back.vertices[0].z+=.05;\n  back.vertices[1].z+=.05;\n  back.vertices[4].z+=.05;\n  back.vertices[5].z+=.05;\n  vestGeometry.merge(back)\n  var vest = new THREE.Mesh(vestGeometry, truckMaterial)\n\tvest.castShadow = true\n\t// Stripes\n\tvar vestStripes = new THREE.Geometry()\n  var stripeFront = new THREE.BoxGeometry( .05, .5, .001 )\n  stripeFront.translate(-.11, .17, .201)\n  stripeFront.vertices[0].z-=.05;\n  stripeFront.vertices[1].z-=.05;\n  stripeFront.vertices[4].z-=.05;\n  stripeFront.vertices[5].z-=.05;\n  vestStripes.merge(stripeFront)\n  stripeFront.translate(.22, 0, 0)\n  vestStripes.merge(stripeFront)\n  var stripeBack = new THREE.BoxGeometry( .05, .5, .001 )\n  stripeBack.translate(-.11, .17, -.201)\n  stripeBack.vertices[0].z+=.05;\n  stripeBack.vertices[1].z+=.05;\n  stripeBack.vertices[4].z+=.05;\n  stripeBack.vertices[5].z+=.05;\n  vestStripes.merge(stripeBack)\n  stripeBack.translate(.22, 0, 0)\n  vestStripes.merge(stripeBack)\n  var stripeTop = new THREE.BoxGeometry( .05, .001, .3 )\n  stripeTop.translate(-.11, .42, 0)\n  vestStripes.merge(stripeTop)\n  stripeTop.translate(.22, 0, 0)\n  vestStripes.merge(stripeTop)\n  var stripeBottom1 = new THREE.BoxGeometry( .2, .2, .001 )\n  stripeBottom1.translate(-.13, .02, .201)\n  stripeBottom1.vertices[4].x+=.02;\n  stripeBottom1.vertices[5].x+=.02;\n  stripeBottom1.vertices[0].z-=.02;\n  stripeBottom1.vertices[1].z-=.02;\n  stripeBottom1.vertices[4].z-=.02;\n  stripeBottom1.vertices[5].z-=.02;\n  vestStripes.merge(stripeBottom1)\n  var stripeBottom2 = new THREE.BoxGeometry( .2, .2, .001 )\n  stripeBottom2.translate(.13, .02, .201)\n  stripeBottom2.vertices[0].x-=.02;\n  stripeBottom2.vertices[1].x-=.02;\n  stripeBottom2.vertices[0].z-=.02;\n  stripeBottom2.vertices[1].z-=.02;\n  stripeBottom2.vertices[4].z-=.02;\n  stripeBottom2.vertices[5].z-=.02;\n  vestStripes.merge(stripeBottom2)\n  var stripeBottom3 = new THREE.BoxGeometry( .001, .2, .4 )\n  stripeBottom3.translate(-.23, .02, 0)\n  stripeBottom3.vertices[0].x+=.02;\n  stripeBottom3.vertices[1].x+=.02;\n  stripeBottom3.vertices[4].x+=.02;\n  stripeBottom3.vertices[5].x+=.02;\n  stripeBottom3.vertices[0].z-=.02;\n  stripeBottom3.vertices[1].z+=.02;\n  stripeBottom3.vertices[4].z+=.02;\n  stripeBottom3.vertices[5].z-=.02;\n  vestStripes.merge(stripeBottom3)\n  var stripeBottom4 = new THREE.BoxGeometry( .001, .2, .4 )\n  stripeBottom4.translate(.23, .02, 0)\n  stripeBottom4.vertices[0].x-=.02;\n  stripeBottom4.vertices[1].x-=.02;\n  stripeBottom4.vertices[4].x-=.02;\n  stripeBottom4.vertices[5].x-=.02;\n  stripeBottom4.vertices[0].z-=.02;\n  stripeBottom4.vertices[1].z+=.02;\n  stripeBottom4.vertices[4].z+=.02;\n  stripeBottom4.vertices[5].z-=.02;\n  vestStripes.merge(stripeBottom4)\n  var stripeBottom5 = new THREE.BoxGeometry( .45, .2, .001 )\n  stripeBottom5.translate(0, .02, -.201)\n  stripeBottom5.vertices[0].x-=.02;\n  stripeBottom5.vertices[1].x-=.02;\n  stripeBottom5.vertices[4].x+=.02;\n  stripeBottom5.vertices[5].x+=.02;\n  stripeBottom5.vertices[0].z+=.02;\n  stripeBottom5.vertices[1].z+=.02;\n  stripeBottom5.vertices[4].z+=.02;\n  stripeBottom5.vertices[5].z+=.02;\n  vestStripes.merge(stripeBottom5)\n  var stripes = new THREE.Mesh(vestStripes, yellow)\n  var vest = new THREE.Mesh(vestGeometry, truckMaterial)\n\tvest.add(stripes)\n  var vest2 = vest.clone()\n  var vest3 = vest.clone()\n\n  //paper\n  var paper = new THREE.BoxGeometry( .8, .6, .025 )\n  paper.translate(0, .3, .25)\n  paper.rotateX(.4)\n  var sheet = new THREE.Mesh(paper, white)\n\tsheet.castShadow = true\n\n  worker.add(constHat)\n  worker.add(vest)\n  var shadow1 = new THREE.Mesh(shadowPerson1, shadows)\n  worker.add(shadow1)\n\n\t//worker.position.set(0, 1.2, 0)\n\tworker.position.set(2.7, 1.2, 6.5)\n  worker.rotation.y -= 1\n  scene.add(worker)\n\n\tworker2.add(hat2)\n\tworker2.add(vest2)\n  //var shadow2 = new THREE.Mesh(shadowPerson2, shadows)\n  //worker2.add(shadow2)\n  worker2.position.set(5.6, 1.2, 6.3)\n  worker2.rotation.y += .8\n  scene.add(worker2)\n\n\tworker3.add(hat3)\n\tworker3.add(vest3)\n  worker3.add(sheet)\n  //var shadow3 = new THREE.Mesh(shadowPerson3, shadows)\n  //worker3.add(shadow3)\n  worker3.position.set(7, 1.2, 6.4)\n  worker3.rotation.y -= .6\n  scene.add(worker3)\n}\n","function render() {\n\t\tscene.position.set(0, 0, 3)\n\t\trenderer.render(scene, camera);\n}\n\nfunction animate() {\n\t\trequestAnimationFrame(animate);\n\t\trender();\n\t\tcontrols.update();\n}\n\ninit()\nanimate()\n"]}