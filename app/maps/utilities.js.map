{"version":3,"sources":["slider.js","flaggerMove.js","flaggerClick.js","flaggerRelease.js","flagger.js","sign.js","input.js"],"names":[],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AC5CA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACxCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AC/BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACjjMA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AChfile":"../utilities.js","sourcesContent":["let showing = 'none'\n\nfunction slide(id) {\n\tswitch (showing) {\n\t\tcase id:\n\t\t\tdocument.getElementById(id).removeAttribute('style')\n\t\t\tdocument.getElementsByClassName(id)[0].removeAttribute('style')\n\t\t\tbreak\n\t\tcase 'group-1':\n\t\t\tdocument.getElementById('group-1').removeAttribute('style')\n\t\t\tdocument.getElementsByClassName('group-1')[0].removeAttribute('style')\n\t\t\tbreak\n\t\tcase 'group-2':\n\t\t\tdocument.getElementById('group-2').removeAttribute('style')\n\t\t\tdocument.getElementsByClassName('group-2')[0].removeAttribute('style')\n\t\t\tbreak\n\t\tcase 'group-3':\n\t\t\tdocument.getElementById('group-3').removeAttribute('style')\n\t\t\tdocument.getElementsByClassName('group-3')[0].removeAttribute('style')\n\t\t\tbreak\n\t\tcase 'group-4':\n\t\t\tdocument.getElementById('group-4').removeAttribute('style')\n\t\t\tdocument.getElementsByClassName('group-4')[0].removeAttribute('style')\n\t\t\tbreak\n\t\tcase 'group-5':\n\t\t\tdocument.getElementById('group-5').removeAttribute('style')\n\t\t\tdocument.getElementsByClassName('group-5')[0].removeAttribute('style')\n\t\t\tbreak\n\t\tcase 'group-6':\n\t\t\tdocument.getElementById('group-6').removeAttribute('style')\n\t\t\tdocument.getElementsByClassName('group-6')[0].removeAttribute('style')\n\t\t\tbreak\n\t\tdefault:\n\t\t\tbreak\n\t}\n\n\tif (showing === id) {\n\t\tshowing = 'none'\n\t} else {\n\t\tdocument.getElementsByClassName(id)[0].style.backgroundColor = '#666'\n\t\tdocument.getElementById(id).style.width = '300px'\n\t\tshowing = id\n\t}\n}\n","function onDocumentMouseMove(event) {\n\tevent.preventDefault()\n\tconst rect = renderer.domElement.getBoundingClientRect()\n\tmouse.x = ((event.clientX - rect.left) / rect.width) * 2 - 1\n\tmouse.y = - ((event.clientY - rect.top) / rect.height) * 2 + 1\n\traycaster.setFromCamera(mouse, camera)\n\tif (selected) {\n\t\tif (raycaster.intersectObjects(objects)) {\n\t\t\tselected.position.set(0, 1, 0)\n\t\t\tselected.position.set(raycaster.intersectObjects(objects)[0].point.x, selected.position.y, raycaster.intersectObjects(objects)[0].point.z);\n\t\t}\n\t}\n\traycaster.setFromCamera(mouse, camera);\n\tconst intersects = raycaster.intersectObjects(flaggers);\n\tif (intersects.length > 0) {\n\t\tconst object = intersects[0].object;\n\t\tif (hovered !== object) {\n\t\t\trenderer.domElement.style.cursor = 'pointer';\n\t\t\thovered = object;\n\t\t}\n\t} else if (hovered !== null) {\n\t\trenderer.domElement.style.cursor = 'auto';\n\t\thovered = null;\n\t}\n}\n\nfunction onDocumentTouchMove(event) {\n\tevent.preventDefault()\n  event = event.changedTouches[0]\n\tconst rect = renderer.domElement.getBoundingClientRect()\n\tmouse.x = (((event.clientX - rect.left) / rect.width) * 2) - 1\n\tmouse.y = (((event.clientY - rect.top) / rect.height) * 2) + 1\n\traycaster.setFromCamera(mouse, camera)\n\tif (selected) {\n\t\tif (raycaster.intersectObjects(objects)) {\n\t\t\tselected.position.set(0, 1, 0)\n\t\t\tselected.position.set(raycaster.intersectObjects(objects)[0].point.x, selected.position.y, raycaster.intersectObjects(objects)[0].point.z);\n\t\t}\n\t}\n}\n","function onDocumentMouseDown(event) {\n\tcontrols.enabled = false\n\tevent.preventDefault()\n\traycaster.setFromCamera(mouse, camera)\n\tconst intersects = raycaster.intersectObjects(flaggers)\n\tif (intersects.length > 0) {\n\t\tselected = intersects[0].object\n\t\tif (raycaster.intersectObjects(objects)) {\n\t\t\toffset.copy(intersection).sub(selected.position)\n\t\t}\n\t\trenderer.domElement.style.cursor = 'move'\n\t}\n}\n\nfunction onDocumentTouchStart(event) {\n\tcontrols.enabled = false\n\tevent.preventDefault()\n\tevent = event.changedTouches[0]\n\tconst rect = renderer.domElement.getBoundingClientRect()\n\tmouse.x = (((event.clientX - rect.left) / rect.width) * 2) - 1\n\tmouse.y = (((event.clientY - rect.top) / rect.height) * 2) + 1\n\traycaster.setFromCamera(mouse, camera)\n\tconst intersects = raycaster.intersectObjects(flaggers)\n\tif (intersects.length > 0) {\n\t\tselected = intersects[0].object\n\t\tif (raycaster.intersectObjects(objects)) {\n\t\t\toffset.copy(intersection).sub(selected.position)\n\t\t}\n\t\trenderer.domElement.style.cursor = 'move'\n\t}\n}\n","function onDocumentMouseCancel(event) {\n\tcontrols.enabled = true\n\tevent.preventDefault()\n\tif (selected) {\n\t\tselected = null\n\t}\n\trenderer.domElement.style.cursor = 'auto';\n}\n\nfunction onDocumentTouchEnd(event) {\n\tcontrols.enabled = true\n\tevent.preventDefault()\n\tif (elected) {\n\t\tselected = null;\n\t}\n\trenderer.domElement.style.cursor = 'auto'\n}\n","function flagger(color) {\n\tconst body = new THREE.Geometry()\n\t// Torso\n\tconst torso = new THREE.BoxGeometry(1, 1.4, 0.8)\n\ttorso.translate(0, 0.1, 0)\n\ttorso.vertices[0].z -= 0.15\n\ttorso.vertices[0].x -= 0.15\n\ttorso.vertices[1].z += 0.15\n\ttorso.vertices[1].x -= 0.15\n\ttorso.vertices[4].z += 0.15\n\ttorso.vertices[4].x += 0.15\n\ttorso.vertices[5].z -= 0.15\n\ttorso.vertices[5].x += 0.15\n\tbody.merge(torso)\n\n\t// Legs\n\tconst leftLeg = new THREE.BoxGeometry(0.5, 0.8, 0.8)\n\tleftLeg.translate(-0.25, -1, 0)\n\tleftLeg.vertices[0].x -= 0.1\n\tleftLeg.vertices[1].x -= 0.1\n\tleftLeg.vertices[2].x -= 0.3\n\tleftLeg.vertices[2].z -= 0.3\n\tleftLeg.vertices[3].x -= 0.3\n\tleftLeg.vertices[3].z += 0.3\n\tleftLeg.vertices[6].z += 0.3\n\tleftLeg.vertices[7].z -= 0.3\n\tbody.merge(leftLeg)\n\tconst rightLeg = new THREE.BoxGeometry(0.5, 0.8, 0.8)\n\trightLeg.translate(0.25, -1, 0)\n\trightLeg.vertices[4].x += 0.1\n\trightLeg.vertices[5].x += 0.1\n\trightLeg.vertices[2].z -= 0.3\n\trightLeg.vertices[3].z += 0.3\n\trightLeg.vertices[6].x += 0.3\n\trightLeg.vertices[6].z += 0.3\n\trightLeg.vertices[7].x += 0.3\n\trightLeg.vertices[7].z -= 0.3\n\tbody.merge(rightLeg)\n\n\t// Arms\n\tconst rightArm1 = new THREE.BoxGeometry(0.5, 0.4, 0.5)\n\trightArm1.translate(0.64, 0.6, 0)\n\trightArm1.vertices[0].y -= 0.1\n\trightArm1.vertices[0].z += 0.1\n\trightArm1.vertices[0].x -= 0.2\n\trightArm1.vertices[1].y -= 0.08\n\trightArm1.vertices[1].z += 0.3\n\trightArm1.vertices[1].x -= 0.1\n\trightArm1.vertices[2].z += 0.1\n\trightArm1.vertices[2].x -= 0.05\n\trightArm1.vertices[2].y += 0.1\n\trightArm1.vertices[3].y += 0.2\n\trightArm1.vertices[3].z += 0.4\n\trightArm1.vertices[3].x += 0.2\n\trightArm1.vertices[4].x -= 0.04\n\trightArm1.vertices[5].x -= 0.04\n\tbody.merge(rightArm1)\n\tconst rightArm2 = new THREE.BoxGeometry(0.5, 0.3, 0.3)\n\trightArm2.translate(1.14, 0.6, 0.3)\n\trightArm2.vertices[0].y += 0.25\n\trightArm2.vertices[0].z -= 0.1\n\trightArm2.vertices[0].x -= 0.65\n\trightArm2.vertices[1].y += 0.25\n\trightArm2.vertices[1].z += 0.05\n\trightArm2.vertices[1].x -= 0.5\n\trightArm2.vertices[2].y += 0.55\n\trightArm2.vertices[2].z -= 0.05\n\trightArm2.vertices[2].x -= 0.55\n\trightArm2.vertices[3].y += 0.55\n\trightArm2.vertices[3].z += 0.1\n\trightArm2.vertices[3].x -= 0.4\n\trightArm2.vertices[4].x -= 0.1\n\trightArm2.vertices[4].z -= 0.1\n\trightArm2.vertices[4].y -= 0.03\n\trightArm2.vertices[5].y -= 0.05\n\trightArm2.vertices[5].z -= 0.1\n\trightArm2.vertices[5].x -= 0.2\n\trightArm2.vertices[6].x += 0.2\n\trightArm2.vertices[6].y += 0.15\n\trightArm2.vertices[6].z += 0.0\n\trightArm2.vertices[7].x -= 0.05\n\trightArm2.vertices[7].z -= 0.1\n\trightArm2.vertices[7].y += 0.05\n\tbody.merge(rightArm2)\n\tconst leftArm = new THREE.BoxGeometry(1, 0.4, 0.5)\n\tleftArm.translate(-0.85, 0.6, 0)\n\tleftArm.vertices[5].y -= 0.8\n\tleftArm.vertices[5].z -= 0.1\n\tleftArm.vertices[4].y -= 0.8\n\tleftArm.vertices[4].z += 0.1\n\tleftArm.vertices[7].y -= 0.5\n\tleftArm.vertices[7].z -= 0.1\n\tleftArm.vertices[6].y -= 0.5\n\tleftArm.vertices[6].z += 0.1\n\tleftArm.vertices[3].x -= 0.04\n\tleftArm.vertices[2].x -= 0.04\n\tbody.merge(leftArm)\n\n\t// Head\n\tconst head = new THREE.SphereGeometry(0.35, 32, 32)\n\thead.translate(0, 1.3, 0)\n\tbody.merge(head)\n\n\t// Flag\n\tconst object = new THREE.Geometry()\n\tobject.vertices.push(new THREE.Vector3(0, 0.15, 0))\n\tfor (let i = 0; i <= 7; i++) {\n\t\tconst angle = (i * 2 * Math.PI / 8)\n\t\tobject.vertices.push(new THREE.Vector3(0.6 * Math.sin(angle), 0.15, 0.6 * Math.cos(angle)))\n\t}\n\tobject.vertices.push(new THREE.Vector3(0, 0, 0))\n\tfor (let i = 7; i >= 0; i--) {\n\t\tconst angle = (i * 2 * Math.PI / 8)\n\t\tobject.vertices.push(new THREE.Vector3(0.6 * Math.sin(angle), 0, 0.6 * Math.cos(angle)))\n\t}\n\tobject.faces.push(new THREE.Face3(0, 1, 2))\n\tobject.faces.push(new THREE.Face3(0, 2, 3))\n\tobject.faces.push(new THREE.Face3(0, 3, 4))\n\tobject.faces.push(new THREE.Face3(0, 4, 5))\n\tobject.faces.push(new THREE.Face3(0, 5, 6))\n\tobject.faces.push(new THREE.Face3(0, 6, 7))\n\tobject.faces.push(new THREE.Face3(0, 7, 8))\n\tobject.faces.push(new THREE.Face3(0, 8, 1))\n\tobject.faces.push(new THREE.Face3(9, 10, 11))\n\tobject.faces.push(new THREE.Face3(9, 11, 12))\n\tobject.faces.push(new THREE.Face3(9, 12, 13))\n\tobject.faces.push(new THREE.Face3(9, 13, 14))\n\tobject.faces.push(new THREE.Face3(9, 14, 15))\n\tobject.faces.push(new THREE.Face3(9, 15, 16))\n\tobject.faces.push(new THREE.Face3(9, 16, 17))\n\tobject.faces.push(new THREE.Face3(9, 17, 10))\n\tobject.faces.push(new THREE.Face3(5, 4, 14))\n\tobject.faces.push(new THREE.Face3(14, 13, 5))\n\tobject.faces.push(new THREE.Face3(4, 3, 15))\n\tobject.faces.push(new THREE.Face3(15, 14, 4))\n\tobject.faces.push(new THREE.Face3(3, 2, 16))\n\tobject.faces.push(new THREE.Face3(16, 15, 3))\n\tobject.faces.push(new THREE.Face3(2, 1, 17))\n\tobject.faces.push(new THREE.Face3(17, 16, 2))\n\tobject.faces.push(new THREE.Face3(1, 8, 10))\n\tobject.faces.push(new THREE.Face3(10, 17, 1))\n\tobject.faces.push(new THREE.Face3(8, 7, 11))\n\tobject.faces.push(new THREE.Face3(11, 10, 8))\n\tobject.faces.push(new THREE.Face3(7, 6, 12))\n\tobject.faces.push(new THREE.Face3(12, 11, 7))\n\tobject.faces.push(new THREE.Face3(6, 5, 13))\n\tobject.faces.push(new THREE.Face3(13, 12, 6))\n\tobject.computeFaceNormals()\n\tconst sign = new THREE.Mesh(object, safetyOrange)\n\tsign.position.set(-0.68, 0.9, 0.02)\n\tsign.rotation.x += 0.4\n\tsign.rotation.y += 0.6\n\tsign.rotation.z += 1.35\n\tsign.geometry.scale(0.5, 0.5, 0.5)\n\tscene.add(sign)\n\n\tconst stickG = new THREE.CylinderGeometry(0.05, 0.05, 2.4, 32)\n\tconst stick = new THREE.Mesh(stickG, gray)\n\tstick.position.set(-0.7, 0.05, 0.02)\n\tstick.geometry.scale(0.5, 0.5, 0.5)\n\tscene.add(stick)\n\n\tconst person = new THREE.Mesh(body, color)\n\tperson.position.set(0, 1.2, -1)\n\tperson.rotation.y -= 1\n\tperson.geometry.scale(0.5, 0.5, 0.5)\n\tperson.add(sign)\n\tperson.add(stick)\n\n\tconst shadowPersonGeometry = new THREE.Geometry()\n\tconst shadowPersonClone = body.clone()\n\tshadowPersonGeometry.merge(shadowPersonClone)\n\tconst stickClone = stickG.clone()\n\tstickClone.translate(-0.7, 0.05, 0.02)\n\tshadowPersonGeometry.merge(stickClone)\n\tconst shadowPerson = new THREE.Mesh(shadowPersonGeometry, shadows)\n\tshadowPerson.receiveShadow = true\n\tconst signClone = new THREE.Mesh(object, shadows)\n\tsignClone.position.set(-0.68, 0.9, 0.02)\n\tsignClone.rotation.x += 0.4\n\tsignClone.rotation.y += 0.6\n\tsignClone.rotation.z += 1.35\n\tshadowPerson.add(signClone)\n\tperson.add(shadowPerson)\n\n\tscene.add(person)\n\tflaggers.push(person)\n\n\tconst person2 = person.clone(true)\n\tperson2.position.set(1, 1.2, -1)\n\tscene.add(person2)\n\tflaggers.push(person2)\n}\n","const signs = [[], [], [], [], [], [], []]\n\nfunction signArray(group, checkbox) {\n\tconst idx = signs[group].indexOf(checkbox.value);\n\n\tif (idx !== -1) {\t\t\t\t \t\t\t\t\t\t\t\t// If already in array\n\t\tsigns[group].splice(idx, 1) \t\t\t\t\t// Make sure we remove it\n\t}\n\n\tif (checkbox.checked) {\t\t\t\t\t\t\t\t\t// If checked\n\t\tsigns[group].unshift(checkbox.value)\t// Add to end of array\n\t}\n}\n\nfunction signSpace(color, group, start) {\n\tconst signGrouped = new THREE.Group()\n\tconst spacing = Number(document.getElementById('sign-' + group).value) / 200\n\n\t// Get Signs\n\n\tconst signImages = signs[group]\n\tlet sign1\n\tlet pos = start - spacing\n\tfor (let i = 0; i < signImages.length && pos >= -22; i++) {\n\t\t// Image\n\n\t\tconst signBase = new THREE.CylinderGeometry(0.8, 0.8, 0.1, 4)\n\t\tsignBase.rotateX(1.5)\n\t\tsignBase.rotateZ(1.6)\n\n\t\tswitch (signImages[i]) {\n\t\t\tcase 'worker':\n\t\t\t\tsign1 = new THREE.Mesh(signBase, [safetyOrange, workerSignMaterial, safetyOrange])\n\t\t\t\tbreak\n\t\t\tcase 'flagger':\n\t\t\t\tsign1 = new THREE.Mesh(signBase, [safetyOrange, flaggerSignMaterial, safetyOrange])\n\t\t\t\tbreak\n\t\t\tcase 'fAhead':\n\t\t\t\tsign1 = new THREE.Mesh(signBase, [safetyOrange, flagAheadSignMaterial, safetyOrange])\n\t\t\t\tbreak\n\t\t\tcase 'men':\n\t\t\t\tsign1 = new THREE.Mesh(signBase, [safetyOrange, menWorkSignMaterial, safetyOrange])\n\t\t\t\tbreak\n\t\t\tcase 'stop':\n\t\t\t\tsign1 = new THREE.Mesh(signBase, [safetyOrange, prepareStopSignMaterial, safetyOrange])\n\t\t\t\tbreak\n\t\t\tcase 'lane':\n\t\t\t\tsign1 = new THREE.Mesh(signBase, [safetyOrange, oneLaneSignMaterial, safetyOrange])\n\t\t\t\tbreak\n\t\t\tdefault:\n\t\t\t\tsign1 = new THREE.Mesh(signBase, [safetyOrange, workAheadSignMaterial, safetyOrange])\n\t\t\t\tbreak\n\t\t}\n\n\t\tsign1.position.set(pos, 3, (4 + (group * 0.5)))\n\t\tsignGrouped.add(sign1)\n\n\t\t// Group Color Backing\n\n\t\tconst signColor = new THREE.CylinderGeometry(1, 1, 0.1, 4)\n\t\tsignColor.rotateX(1.5)\n\t\tsignColor.rotateZ(1.6)\n\t\tconst signColorBack = new THREE.Mesh(signColor, color)\n\t\tsignColorBack.position.set((pos + 0.01), 3, (4 + (group * 0.5)))\n\t\tsignGrouped.add(signColorBack)\n\n\t\t// Stick\n\n\t\tconst stick = new THREE.CylinderGeometry(0.05, 0.05, 2, 32)\n\t\tconst signStick = new THREE.Mesh(stick, color)\n\t\tsignStick.position.set((pos + 0.01), 1.2, (4 + (group * 0.5)))\n\t\tsignGrouped.add(signStick)\n\t\tconsole.log((4 + (group / 0.5)))\n\t\t// Position and Add to Scene\n\t\tpos -= 2\n\t}\n\n\tsignGrouped.name = 'signGroup-' + group\n\tscene.add(signGrouped)\n}\n","function test(group, color) {\n\t// Remove old render if it exists\n\tif (scene.getObjectByName(group)) {\n\t\tscene.remove(scene.getObjectByName(group))\n\t}\n\n\tif (scene.getObjectByName('signGroup-' + group)) {\n\t\tscene.remove(scene.getObjectByName('signGroup-' + group))\n\t}\n\tconst coneCore = new THREE.Mesh(coneGeometry, color)\n\tconst shadowCone = new THREE.Mesh(coneGeometry, shadows)\n\tshadowCone.scale.set(1.05, 1.05, 1.05)\n\tconeCore.castShadow = true\n\tconst cone = new THREE.Group()\n\tconst newStripe = stripe.clone()\n\tcone.add(coneCore)\n\tcone.add(newStripe)\n\tlet initialX\n\tconst coneGroup = new THREE.Group()\n\tconst shadowGroup = new THREE.Group()\n\n/* Buffer */\n\n\tswitch (group) {\n\t\tcase 1:\n\t\t\tinitialX = 0\n\t\t\tbreak\n\t\tcase 2:\n\t\t\tinitialX = -0.5\n\t\t\tbreak\n\t\tcase 3:\n\t\t\tinitialX = -1.5\n\t\t\tbreak\n\t\tcase 4:\n\t\t\tinitialX = -2\n\t\t\tbreak\n\t\tcase 5:\n\t\t\tinitialX = -2.5\n\t\t\tbreak\n\t\tcase 6:\n\t\t\tinitialX = -3\n\t\t\tbreak\n\t\tdefault:\n\t\t\tbreak\n\t}\n\tconst buffer = Number(document.getElementById('buffer-' + group).value)\n\tcone.position.set(initialX, 0.75, 0.5)\n\tconeGroup.add(cone)\n\tshadowCone.position.set(initialX, 0.75, 0.5)\n\tshadowGroup.add(shadowCone)\n\tlet x = initialX\n\tlet cones = 1 + (buffer / 100)\n\tlet spacing = (buffer / 50) / cones\n\n\twhile (Math.abs(x - spacing) <= (Math.abs((buffer / 50)) - initialX) && Math.abs(x) <= 23) {\n\t\tconst newCone = cone.clone()\n\t\tconst newShadowCone = shadowCone.clone()\n\t\tnewShadowCone.position.set(x, 0.75, 0.5)\n\t\tshadowGroup.add(newShadowCone)\n\t\tx -= spacing\n\t\tnewCone.position.set(x, 0.75, 0.5)\n\t\tconeGroup.add(newCone)\n\t}\n\n/* Transition Taper */\n\n\tconst upstream = Number(document.getElementById('upstream-' + group).value)\n\tcones = 2 + (upstream / 100)\n\tspacing = (upstream / 50) / cones\n\tlet y = (3 / cones) + 0.5\n\tfor (let i = 1; i <= cones; i++) {\n\t\tconst newCone = cone.clone()\n\t\tx -= spacing\n\t\tnewCone.position.set(x, 0.75, y)\n\t\tconst newShadowCone = shadowCone.clone()\n\t\tnewShadowCone.position.set(x, 0.75, y)\n\t\tshadowGroup.add(newShadowCone)\n\t\ty += 3 / cones\n\t\tconeGroup.add(newCone)\n\t}\n\n/* Sign Spacing */\nsignSpace(color, group, x)\n\n/* Downstream Taper */\n\n\tswitch (group) {\n\t\tcase 1:\n\t\t\tinitialX = 10\n\t\t\tbreak\n\t\tcase 2:\n\t\t\tinitialX = 10.5\n\t\t\tbreak\n\t\tcase 3:\n\t\t\tinitialX = 11\n\t\t\tbreak\n\t\tcase 4:\n\t\t\tinitialX = 11.5\n\t\t\tbreak\n\t\tcase 5:\n\t\t\tinitialX = 12\n\t\t\tbreak\n\t\tcase 6:\n\t\t\tinitialX = 12.5\n\t\t\tbreak\n\t\tdefault:\n\t\t\tbreak\n\t}\n\tconst downstream = Number(document.getElementById('downstream-' + group).value)\n\tx = initialX\n\tcones = 2 + (downstream / 100)\n\tspacing = (downstream / 50) / cones\n\ty = 0.5\n\twhile (Math.abs(x) <= ((downstream / 50) + initialX) && Math.abs(x) <= 21.5) {\n\t\tconst newCone = cone.clone()\n\t\tnewCone.position.set(x, 0.75, y)\n\t\tconst newShadowCone = shadowCone.clone()\n\t\tnewShadowCone.position.set(x, 0.75, y)\n\t\tshadowGroup.add(newShadowCone)\n\t\ty += 3 / cones\n\t\tx += spacing\n\t\tconeGroup.add(newCone)\n\t}\n\n/* Give Group A Name and Add To Scene */\n\tconeGroup.name = group\n\tshadowGroup.name = group\n\tscene.add(coneGroup)\n\tscene.add(shadowGroup)\n\n/* Close Sidebar */\n\tslide('group-' + group)\n\tflagger(color)\n}\n"]}